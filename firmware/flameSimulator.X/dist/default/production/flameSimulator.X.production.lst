

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Thu Dec 18 02:08:33 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1947
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	swtext1,local,class=CONST,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	swtext2,local,class=CONST,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	swtext3,local,class=CONST,delta=2
    52                           	dabs	1,0x620,48
    53                           	dabs	1,0x5A0,80
    54                           	dabs	1,0x530,64
    55                           	dabs	1,0x2330,0,_bitmap
    56                           	dabs	1,0x7E,2
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010F                     	;# 
   113  0110                     	;# 
   114  0111                     	;# 
   115  0112                     	;# 
   116  0113                     	;# 
   117  0114                     	;# 
   118  0115                     	;# 
   119  0116                     	;# 
   120  0117                     	;# 
   121  0118                     	;# 
   122  0119                     	;# 
   123  011A                     	;# 
   124  011B                     	;# 
   125  011D                     	;# 
   126  011E                     	;# 
   127  011F                     	;# 
   128  018C                     	;# 
   129  0190                     	;# 
   130  0191                     	;# 
   131  0191                     	;# 
   132  0192                     	;# 
   133  0193                     	;# 
   134  0193                     	;# 
   135  0193                     	;# 
   136  0194                     	;# 
   137  0195                     	;# 
   138  0196                     	;# 
   139  0199                     	;# 
   140  0199                     	;# 
   141  019A                     	;# 
   142  019A                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019C                     	;# 
   148  019C                     	;# 
   149  019D                     	;# 
   150  019D                     	;# 
   151  019E                     	;# 
   152  019E                     	;# 
   153  019F                     	;# 
   154  020D                     	;# 
   155  0211                     	;# 
   156  0211                     	;# 
   157  0212                     	;# 
   158  0212                     	;# 
   159  0213                     	;# 
   160  0213                     	;# 
   161  0214                     	;# 
   162  0214                     	;# 
   163  0215                     	;# 
   164  0215                     	;# 
   165  0215                     	;# 
   166  0216                     	;# 
   167  0216                     	;# 
   168  0217                     	;# 
   169  0217                     	;# 
   170  0219                     	;# 
   171  021A                     	;# 
   172  021B                     	;# 
   173  021C                     	;# 
   174  021D                     	;# 
   175  021E                     	;# 
   176  021F                     	;# 
   177  028C                     	;# 
   178  028D                     	;# 
   179  0291                     	;# 
   180  0291                     	;# 
   181  0292                     	;# 
   182  0293                     	;# 
   183  0294                     	;# 
   184  0295                     	;# 
   185  0295                     	;# 
   186  0296                     	;# 
   187  0298                     	;# 
   188  0298                     	;# 
   189  0299                     	;# 
   190  029A                     	;# 
   191  029B                     	;# 
   192  029C                     	;# 
   193  029C                     	;# 
   194  029D                     	;# 
   195  029E                     	;# 
   196  029F                     	;# 
   197  030C                     	;# 
   198  030D                     	;# 
   199  0311                     	;# 
   200  0311                     	;# 
   201  0312                     	;# 
   202  0313                     	;# 
   203  0314                     	;# 
   204  0315                     	;# 
   205  0315                     	;# 
   206  0316                     	;# 
   207  0318                     	;# 
   208  0318                     	;# 
   209  0319                     	;# 
   210  031A                     	;# 
   211  031C                     	;# 
   212  031C                     	;# 
   213  031D                     	;# 
   214  031E                     	;# 
   215  038C                     	;# 
   216  038D                     	;# 
   217  0394                     	;# 
   218  0395                     	;# 
   219  0396                     	;# 
   220  040C                     	;# 
   221  040D                     	;# 
   222  0415                     	;# 
   223  0416                     	;# 
   224  0417                     	;# 
   225  041C                     	;# 
   226  041D                     	;# 
   227  041E                     	;# 
   228  048D                     	;# 
   229  0491                     	;# 
   230  0492                     	;# 
   231  0493                     	;# 
   232  0493                     	;# 
   233  0494                     	;# 
   234  0495                     	;# 
   235  0496                     	;# 
   236  0497                     	;# 
   237  0791                     	;# 
   238  0792                     	;# 
   239  0793                     	;# 
   240  0794                     	;# 
   241  0795                     	;# 
   242  0798                     	;# 
   243  0799                     	;# 
   244  079A                     	;# 
   245  079B                     	;# 
   246  079C                     	;# 
   247  079D                     	;# 
   248  07A0                     	;# 
   249  07A1                     	;# 
   250  07A2                     	;# 
   251  07A3                     	;# 
   252  07A4                     	;# 
   253  07A5                     	;# 
   254  07A6                     	;# 
   255  07A7                     	;# 
   256  07A8                     	;# 
   257  07A9                     	;# 
   258  07AA                     	;# 
   259  07AB                     	;# 
   260  07AC                     	;# 
   261  07AD                     	;# 
   262  07AE                     	;# 
   263  07AF                     	;# 
   264  07B0                     	;# 
   265  07B1                     	;# 
   266  07B2                     	;# 
   267  07B3                     	;# 
   268  07B4                     	;# 
   269  07B5                     	;# 
   270  07B6                     	;# 
   271  07B7                     	;# 
   272  0FE4                     	;# 
   273  0FE5                     	;# 
   274  0FE6                     	;# 
   275  0FE7                     	;# 
   276  0FE8                     	;# 
   277  0FE9                     	;# 
   278  0FEA                     	;# 
   279  0FEB                     	;# 
   280  0FED                     	;# 
   281  0FEE                     	;# 
   282  0FEF                     	;# 
   283  0000                     	;# 
   284  0001                     	;# 
   285  0002                     	;# 
   286  0003                     	;# 
   287  0004                     	;# 
   288  0005                     	;# 
   289  0006                     	;# 
   290  0007                     	;# 
   291  0008                     	;# 
   292  0009                     	;# 
   293  000A                     	;# 
   294  000B                     	;# 
   295  000C                     	;# 
   296  000D                     	;# 
   297  000E                     	;# 
   298  000F                     	;# 
   299  0010                     	;# 
   300  0011                     	;# 
   301  0012                     	;# 
   302  0013                     	;# 
   303  0014                     	;# 
   304  0015                     	;# 
   305  0016                     	;# 
   306  0016                     	;# 
   307  0017                     	;# 
   308  0018                     	;# 
   309  0019                     	;# 
   310  001A                     	;# 
   311  001B                     	;# 
   312  001C                     	;# 
   313  001E                     	;# 
   314  001F                     	;# 
   315  008C                     	;# 
   316  008D                     	;# 
   317  008E                     	;# 
   318  008F                     	;# 
   319  0090                     	;# 
   320  0091                     	;# 
   321  0092                     	;# 
   322  0093                     	;# 
   323  0094                     	;# 
   324  0095                     	;# 
   325  0096                     	;# 
   326  0097                     	;# 
   327  0098                     	;# 
   328  0099                     	;# 
   329  009A                     	;# 
   330  009B                     	;# 
   331  009B                     	;# 
   332  009C                     	;# 
   333  009D                     	;# 
   334  009E                     	;# 
   335  010C                     	;# 
   336  010D                     	;# 
   337  010E                     	;# 
   338  010F                     	;# 
   339  0110                     	;# 
   340  0111                     	;# 
   341  0112                     	;# 
   342  0113                     	;# 
   343  0114                     	;# 
   344  0115                     	;# 
   345  0116                     	;# 
   346  0117                     	;# 
   347  0118                     	;# 
   348  0119                     	;# 
   349  011A                     	;# 
   350  011B                     	;# 
   351  011D                     	;# 
   352  011E                     	;# 
   353  011F                     	;# 
   354  018C                     	;# 
   355  0190                     	;# 
   356  0191                     	;# 
   357  0191                     	;# 
   358  0192                     	;# 
   359  0193                     	;# 
   360  0193                     	;# 
   361  0193                     	;# 
   362  0194                     	;# 
   363  0195                     	;# 
   364  0196                     	;# 
   365  0199                     	;# 
   366  0199                     	;# 
   367  019A                     	;# 
   368  019A                     	;# 
   369  019B                     	;# 
   370  019B                     	;# 
   371  019B                     	;# 
   372  019B                     	;# 
   373  019C                     	;# 
   374  019C                     	;# 
   375  019D                     	;# 
   376  019D                     	;# 
   377  019E                     	;# 
   378  019E                     	;# 
   379  019F                     	;# 
   380  020D                     	;# 
   381  0211                     	;# 
   382  0211                     	;# 
   383  0212                     	;# 
   384  0212                     	;# 
   385  0213                     	;# 
   386  0213                     	;# 
   387  0214                     	;# 
   388  0214                     	;# 
   389  0215                     	;# 
   390  0215                     	;# 
   391  0215                     	;# 
   392  0216                     	;# 
   393  0216                     	;# 
   394  0217                     	;# 
   395  0217                     	;# 
   396  0219                     	;# 
   397  021A                     	;# 
   398  021B                     	;# 
   399  021C                     	;# 
   400  021D                     	;# 
   401  021E                     	;# 
   402  021F                     	;# 
   403  028C                     	;# 
   404  028D                     	;# 
   405  0291                     	;# 
   406  0291                     	;# 
   407  0292                     	;# 
   408  0293                     	;# 
   409  0294                     	;# 
   410  0295                     	;# 
   411  0295                     	;# 
   412  0296                     	;# 
   413  0298                     	;# 
   414  0298                     	;# 
   415  0299                     	;# 
   416  029A                     	;# 
   417  029B                     	;# 
   418  029C                     	;# 
   419  029C                     	;# 
   420  029D                     	;# 
   421  029E                     	;# 
   422  029F                     	;# 
   423  030C                     	;# 
   424  030D                     	;# 
   425  0311                     	;# 
   426  0311                     	;# 
   427  0312                     	;# 
   428  0313                     	;# 
   429  0314                     	;# 
   430  0315                     	;# 
   431  0315                     	;# 
   432  0316                     	;# 
   433  0318                     	;# 
   434  0318                     	;# 
   435  0319                     	;# 
   436  031A                     	;# 
   437  031C                     	;# 
   438  031C                     	;# 
   439  031D                     	;# 
   440  031E                     	;# 
   441  038C                     	;# 
   442  038D                     	;# 
   443  0394                     	;# 
   444  0395                     	;# 
   445  0396                     	;# 
   446  040C                     	;# 
   447  040D                     	;# 
   448  0415                     	;# 
   449  0416                     	;# 
   450  0417                     	;# 
   451  041C                     	;# 
   452  041D                     	;# 
   453  041E                     	;# 
   454  048D                     	;# 
   455  0491                     	;# 
   456  0492                     	;# 
   457  0493                     	;# 
   458  0493                     	;# 
   459  0494                     	;# 
   460  0495                     	;# 
   461  0496                     	;# 
   462  0497                     	;# 
   463  0791                     	;# 
   464  0792                     	;# 
   465  0793                     	;# 
   466  0794                     	;# 
   467  0795                     	;# 
   468  0798                     	;# 
   469  0799                     	;# 
   470  079A                     	;# 
   471  079B                     	;# 
   472  079C                     	;# 
   473  079D                     	;# 
   474  07A0                     	;# 
   475  07A1                     	;# 
   476  07A2                     	;# 
   477  07A3                     	;# 
   478  07A4                     	;# 
   479  07A5                     	;# 
   480  07A6                     	;# 
   481  07A7                     	;# 
   482  07A8                     	;# 
   483  07A9                     	;# 
   484  07AA                     	;# 
   485  07AB                     	;# 
   486  07AC                     	;# 
   487  07AD                     	;# 
   488  07AE                     	;# 
   489  07AF                     	;# 
   490  07B0                     	;# 
   491  07B1                     	;# 
   492  07B2                     	;# 
   493  07B3                     	;# 
   494  07B4                     	;# 
   495  07B5                     	;# 
   496  07B6                     	;# 
   497  07B7                     	;# 
   498  0FE4                     	;# 
   499  0FE5                     	;# 
   500  0FE6                     	;# 
   501  0FE7                     	;# 
   502  0FE8                     	;# 
   503  0FE9                     	;# 
   504  0FEA                     	;# 
   505  0FEB                     	;# 
   506  0FED                     	;# 
   507  0FEE                     	;# 
   508  0FEF                     	;_bitmap
   509                           
   510                           	psect	stringtext
   511  1000                     __pstringtext:	
   512  1000                     _hueMask:	
   513  1000  3401               	retlw	1
   514  1001  3404               	retlw	4
   515  1002  3407               	retlw	7
   516  1003  3409               	retlw	9
   517  1004  3409               	retlw	9
   518  1005  3408               	retlw	8
   519  1006  3404               	retlw	4
   520  1007  3401               	retlw	1
   521  1008  3401               	retlw	1
   522  1009  3403               	retlw	3
   523  100A  3405               	retlw	5
   524  100B  3407               	retlw	7
   525  100C  3409               	retlw	9
   526  100D  3407               	retlw	7
   527  100E  3403               	retlw	3
   528  100F  3401               	retlw	1
   529  1010  3401               	retlw	1
   530  1011  3403               	retlw	3
   531  1012  3405               	retlw	5
   532  1013  3406               	retlw	6
   533  1014  3407               	retlw	7
   534  1015  3406               	retlw	6
   535  1016  3403               	retlw	3
   536  1017  3401               	retlw	1
   537  1018  3401               	retlw	1
   538  1019  3402               	retlw	2
   539  101A  3404               	retlw	4
   540  101B  3405               	retlw	5
   541  101C  3405               	retlw	5
   542  101D  3405               	retlw	5
   543  101E  3402               	retlw	2
   544  101F  3401               	retlw	1
   545  1020  3401               	retlw	1
   546  1021  3402               	retlw	2
   547  1022  3404               	retlw	4
   548  1023  3404               	retlw	4
   549  1024  3404               	retlw	4
   550  1025  3404               	retlw	4
   551  1026  3402               	retlw	2
   552  1027  3401               	retlw	1
   553  1028  3400               	retlw	0
   554  1029  3401               	retlw	1
   555  102A  3402               	retlw	2
   556  102B  3403               	retlw	3
   557  102C  3403               	retlw	3
   558  102D  3402               	retlw	2
   559  102E  3401               	retlw	1
   560  102F  3400               	retlw	0
   561  1030  3400               	retlw	0
   562  1031  3400               	retlw	0
   563  1032  3401               	retlw	1
   564  1033  3402               	retlw	2
   565  1034  3402               	retlw	2
   566  1035  3401               	retlw	1
   567  1036  3400               	retlw	0
   568  1037  3400               	retlw	0
   569  1038  3400               	retlw	0
   570  1039  3400               	retlw	0
   571  103A  3400               	retlw	0
   572  103B  3401               	retlw	1
   573  103C  3401               	retlw	1
   574  103D  3400               	retlw	0
   575  103E  3400               	retlw	0
   576  103F  3400               	retlw	0
   577  1040                     __end_of_hueMask:	
   578  1040                     _valueMask:	
   579  1040  3420               	retlw	32
   580  1041  3400               	retlw	0
   581  1042  3400               	retlw	0
   582  1043  3400               	retlw	0
   583  1044  3400               	retlw	0
   584  1045  3400               	retlw	0
   585  1046  3400               	retlw	0
   586  1047  3420               	retlw	32
   587  1048  3440               	retlw	64
   588  1049  3400               	retlw	0
   589  104A  3400               	retlw	0
   590  104B  3400               	retlw	0
   591  104C  3400               	retlw	0
   592  104D  3400               	retlw	0
   593  104E  3400               	retlw	0
   594  104F  3440               	retlw	64
   595  1050  3460               	retlw	96
   596  1051  3420               	retlw	32
   597  1052  3400               	retlw	0
   598  1053  3400               	retlw	0
   599  1054  3400               	retlw	0
   600  1055  3400               	retlw	0
   601  1056  3420               	retlw	32
   602  1057  3460               	retlw	96
   603  1058  3480               	retlw	128
   604  1059  3440               	retlw	64
   605  105A  3420               	retlw	32
   606  105B  3400               	retlw	0
   607  105C  3400               	retlw	0
   608  105D  3420               	retlw	32
   609  105E  3440               	retlw	64
   610  105F  3480               	retlw	128
   611  1060  34A0               	retlw	160
   612  1061  3460               	retlw	96
   613  1062  3440               	retlw	64
   614  1063  3420               	retlw	32
   615  1064  3420               	retlw	32
   616  1065  3440               	retlw	64
   617  1066  3460               	retlw	96
   618  1067  34A0               	retlw	160
   619  1068  34C0               	retlw	192
   620  1069  3480               	retlw	128
   621  106A  3460               	retlw	96
   622  106B  3440               	retlw	64
   623  106C  3440               	retlw	64
   624  106D  3460               	retlw	96
   625  106E  3480               	retlw	128
   626  106F  34C0               	retlw	192
   627  1070  34FF               	retlw	255
   628  1071  34A0               	retlw	160
   629  1072  3480               	retlw	128
   630  1073  3460               	retlw	96
   631  1074  3460               	retlw	96
   632  1075  3480               	retlw	128
   633  1076  34A0               	retlw	160
   634  1077  34FF               	retlw	255
   635  1078  34FF               	retlw	255
   636  1079  34C0               	retlw	192
   637  107A  34A0               	retlw	160
   638  107B  3480               	retlw	128
   639  107C  3480               	retlw	128
   640  107D  34A0               	retlw	160
   641  107E  34C0               	retlw	192
   642  107F  34FF               	retlw	255
   643  1080                     __end_of_valueMask:	
   644  0016                     _TMR1	set	22
   645  000D                     _PORTBbits	set	13
   646  001B                     _PR2	set	27
   647  0018                     _T1CON	set	24
   648  0018                     _T1CONbits	set	24
   649  001C                     _T2CON	set	28
   650  001C                     _T2CONbits	set	28
   651  0015                     _TMR0	set	21
   652  001A                     _TMR2	set	26
   653  005F                     _GIE	set	95
   654  005B                     _IOCIE	set	91
   655  0058                     _IOCIF	set	88
   656  005E                     _PEIE	set	94
   657  005D                     _TMR0IE	set	93
   658  005A                     _TMR0IF	set	90
   659  0088                     _TMR1IF	set	136
   660  0089                     _TMR2IF	set	137
   661  009D                     _ADCON0	set	157
   662  009D                     _ADCON0bits	set	157
   663  009E                     _ADCON1	set	158
   664  009C                     _ADRESH	set	156
   665  0095                     _OPTION_REG	set	149
   666  0099                     _OSCCON	set	153
   667  009A                     _OSCSTATbits	set	154
   668  008C                     _TRISA	set	140
   669  008D                     _TRISBbits	set	141
   670  008F                     _TRISD	set	143
   671  0090                     _TRISE	set	144
   672  0488                     _TMR1IE	set	1160
   673  0489                     _TMR2IE	set	1161
   674  0117                     _FVRCON	set	279
   675  0117                     _FVRCONbits	set	279
   676  010C                     _LATA	set	268
   677  010D                     _LATBbits	set	269
   678  010F                     _LATD	set	271
   679  0110                     _LATE	set	272
   680  018C                     _ANSELA	set	396
   681  0190                     _ANSELE	set	400
   682  020D                     _WPUB	set	525
   683  030C                     _TRISFbits	set	780
   684  030D                     _TRISGbits	set	781
   685  0396                     _IOCBF	set	918
   686  0396                     _IOCBFbits	set	918
   687  0395                     _IOCBN	set	917
   688  0394                     _IOCBP	set	916
   689  038C                     _LATFbits	set	908
   690  038D                     _LATGbits	set	909
   691  040C                     _ANSELF	set	1036
   692  040D                     _ANSELG	set	1037
   693                           
   694                           ; #config settings
   695  0000                     
   696                           	psect	cinit
   697  0123                     start_initialization:	
   698  0123                     __initialization:		;BIGRAM
   699                           
   700                           ; Clear objects allocated to BIGRAM
   701  0123  3030               	movlw	low (0+9008)
   702  0124  0084               	movwf	4
   703  0125  3023               	movlw	high (0+9008)
   704  0126  0085               	movwf	5
   705  0127  30C0               	movlw	192
   706  0128  00FE               	movwf	btemp
   707  0129  3000               	movlw	0
   708  012A  00FF               	movwf	btemp+1
   709  012B  3196  26EF  3181   	fcall	clear_ram0
   710                           
   711                           ; Clear objects allocated to BITCOMMON
   712  012E  01FD               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   713                           
   714                           ; Clear objects allocated to COMMON
   715  012F  01F9               	clrf	__pbssCOMMON& (0+127)
   716  0130  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   717  0131  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   718  0132  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   719                           
   720                           ; Clear objects allocated to BANK1
   721  0133  0021               	movlb	1	; select bank1
   722  0134  01EA               	clrf	__pbssBANK1& (0+127)
   723  0135  01EB               	clrf	(__pbssBANK1+1)& (0+127)
   724  0136  01EC               	clrf	(__pbssBANK1+2)& (0+127)
   725  0137  01ED               	clrf	(__pbssBANK1+3)& (0+127)
   726  0138  01EE               	clrf	(__pbssBANK1+4)& (0+127)
   727  0139  01EF               	clrf	(__pbssBANK1+5)& (0+127)
   728                           
   729                           ; Clear objects allocated to BANK2
   730  013A  3020               	movlw	low __pbssBANK2
   731  013B  0084               	movwf	4
   732  013C  3001               	movlw	high __pbssBANK2
   733  013D  0085               	movwf	5
   734  013E  3014               	movlw	20
   735  013F  00FE               	movwf	btemp
   736  0140  3000               	movlw	0
   737  0141  00FF               	movwf	btemp+1
   738  0142  3196  26EF  3181   	fcall	clear_ram0
   739                           
   740                           ; Clear objects allocated to BANK3
   741  0145  30A0               	movlw	low __pbssBANK3
   742  0146  0084               	movwf	4
   743  0147  3001               	movlw	high __pbssBANK3
   744  0148  0085               	movwf	5
   745  0149  3040               	movlw	64
   746  014A  00FE               	movwf	btemp
   747  014B  3000               	movlw	0
   748  014C  00FF               	movwf	btemp+1
   749  014D  3196  26EF         	fcall	clear_ram0
   750  014F                     end_of_initialization:	
   751                           ;End of C runtime variable initialization code
   752                           
   753  014F                     __end_of__initialization:	
   754  014F  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   755  0150  0020               	movlb	0
   756  0151  3189  293D         	ljmp	_main	;jump to C main() function
   757                           
   758                           	psect	bitbssCOMMON
   759  03E8                     __pbitbssCOMMON:	
   760  03E8                     _ampm:	
   761  03E8                     	ds	1
   762                           
   763                           	psect	bssCOMMON
   764  0079                     __pbssCOMMON:	
   765  0079                     _currentRefreshingPwmSweep:	
   766  0079                     	ds	1
   767  007A                     _currentRefreshingRow:	
   768  007A                     	ds	1
   769  007B                     _currentRefreshingRowIndex:	
   770  007B                     	ds	1
   771  007C                     _hours:	
   772  007C                     	ds	1
   773                           
   774                           	psect	bssBANK1
   775  00EA                     __pbssBANK1:	
   776  00EA                     _tmr1Value:	
   777  00EA                     	ds	2
   778  00EC                     _currentState:	
   779  00EC                     	ds	1
   780  00ED                     _minutes:	
   781  00ED                     	ds	1
   782  00EE                     _randf:	
   783  00EE                     	ds	1
   784  00EF                     _seconds:	
   785  00EF                     	ds	1
   786                           
   787                           	psect	bssBANK2
   788  0120                     __pbssBANK2:	
   789  0120                     _line:	
   790  0120                     	ds	8
   791  0128                     _randx:	
   792  0128                     	ds	4
   793  012C                     _errno:	
   794  012C                     	ds	2
   795  012E                     _timerTicks:	
   796  012E                     	ds	2
   797  0130                     _currentRefreshingColor:	
   798  0130                     	ds	1
   799  0131                     _newSecond:	
   800  0131                     	ds	1
   801  0132                     _tickCounter:	
   802  0132                     	ds	1
   803  0133                     _updateDisplayRequest:	
   804  0133                     	ds	1
   805                           
   806                           	psect	bssBANK3
   807  01A0                     __pbssBANK3:	
   808  01A0                     _matrix:	
   809  01A0                     	ds	64
   810                           
   811                           	psect	clrtext
   812  16EF                     clear_ram0:	
   813                           ;	Called with FSR0 containing the base address, and
   814                           ;	btemp/btemp+1 has the size to clear
   815                           
   816  16EF  0064               	clrwdt	;clear the watchdog before getting into this loop
   817  16F0                     clrloop0:	
   818  16F0  0180               	clrf	0	;clear RAM location pointed to by FSR
   819  16F1  3101               	addfsr 0,1
   820  16F2  3001               	movlw	1
   821  16F3  02FE               	subwf	126,f
   822  16F4  3000               	movlw	0
   823  16F5  3BFF               	subwfb	127,f
   824  16F6  087F               	movf	127,w
   825  16F7  047E               	iorwf	126,w
   826  16F8  1903               	btfsc	3,2
   827  16F9  3400               	retlw	0	;all done for this memory range, return
   828  16FA  2EF0               	goto	clrloop0	;have we reached the end yet?
   829                           
   830                           	psect	cstackBANK2
   831  0134                     __pcstackBANK2:	
   832  0134                     _drawFrame$728:	
   833                           
   834                           ; 2 bytes @ 0x0
   835  0134                     	ds	2
   836  0136                     drawFrame@nextv:	
   837                           
   838                           ; 2 bytes @ 0x2
   839  0136                     	ds	2
   840  0138                     drawFrame@x_731:	
   841                           
   842                           ; 1 bytes @ 0x4
   843  0138                     	ds	1
   844  0139                     drawFrame@y:	
   845                           
   846                           ; 1 bytes @ 0x5
   847  0139                     	ds	1
   848  013A                     drawFrame@x:	
   849                           
   850                           ; 1 bytes @ 0x6
   851  013A                     	ds	1
   852  013B                     drawFrame@colorHSV:	
   853                           
   854                           ; 3 bytes @ 0x7
   855  013B                     	ds	3
   856  013E                     drawFrame@colorRGB:	
   857                           
   858                           ; 3 bytes @ 0xA
   859  013E                     	ds	3
   860                           
   861                           	psect	cstackBANK1
   862  00A0                     __pcstackBANK1:	
   863  00A0                     _HSVtoRGB$1186:	
   864                           
   865                           ; 3 bytes @ 0x0
   866  00A0                     	ds	3
   867  00A3                     _HSVtoRGB$1187:	
   868                           
   869                           ; 3 bytes @ 0x3
   870  00A3                     	ds	3
   871  00A6                     _HSVtoRGB$1188:	
   872                           
   873                           ; 3 bytes @ 0x6
   874  00A6                     	ds	3
   875  00A9                     HSVtoRGB@f:	
   876                           
   877                           ; 3 bytes @ 0x9
   878  00A9                     	ds	3
   879  00AC                     HSVtoRGB@i:	
   880                           
   881                           ; 2 bytes @ 0xC
   882  00AC                     	ds	2
   883  00AE                     HSVtoRGB@vRGB:	
   884                           
   885                           ; 1 bytes @ 0xE
   886  00AE                     	ds	1
   887  00AF                     HSVtoRGB@r:	
   888                           
   889                           ; 3 bytes @ 0xF
   890  00AF                     	ds	3
   891  00B2                     HSVtoRGB@q:	
   892                           
   893                           ; 3 bytes @ 0x12
   894  00B2                     	ds	3
   895  00B5                     HSVtoRGB@t:	
   896                           
   897                           ; 3 bytes @ 0x15
   898  00B5                     	ds	3
   899  00B8                     HSVtoRGB@h:	
   900                           
   901                           ; 3 bytes @ 0x18
   902  00B8                     	ds	3
   903  00BB                     HSVtoRGB@colorRGB:	
   904                           
   905                           ; 1 bytes @ 0x1B
   906  00BB                     	ds	1
   907  00BC                     HSVtoRGB@colorHSV:	
   908                           
   909                           ; 1 bytes @ 0x1C
   910  00BC                     	ds	1
   911  00BD                     HSVtoRGB@g:	
   912                           
   913                           ; 3 bytes @ 0x1D
   914  00BD                     	ds	3
   915  00C0                     HSVtoRGB@b:	
   916                           
   917                           ; 3 bytes @ 0x20
   918  00C0                     	ds	3
   919  00C3                     HSVtoRGB@s:	
   920                           
   921                           ; 3 bytes @ 0x23
   922  00C3                     	ds	3
   923  00C6                     HSVtoRGB@p:	
   924                           
   925                           ; 3 bytes @ 0x26
   926  00C6                     	ds	3
   927  00C9                     HSVtoRGB@v:	
   928                           
   929                           ; 3 bytes @ 0x29
   930  00C9                     	ds	3
   931  00CC                     ?_drawFrame:	
   932  00CC                     drawFrame@pcnt:	
   933                           ; 0 bytes @ 0x2C
   934                           
   935                           
   936                           ; 2 bytes @ 0x2C
   937  00CC                     	ds	2
   938  00CE                     ??_drawFrame:	
   939                           
   940                           ; 0 bytes @ 0x2E
   941  00CE                     	ds	23
   942  00E5                     ??_showTime:	
   943                           
   944                           ; 0 bytes @ 0x45
   945  00E5                     	ds	2
   946  00E7                     showTime@currentAnimationFrame:	
   947                           
   948                           ; 1 bytes @ 0x47
   949  00E7                     	ds	1
   950  00E8                     showTime@currentPwmLevel:	
   951                           
   952                           ; 1 bytes @ 0x48
   953  00E8                     	ds	1
   954  00E9                     showTime@pcnt:	
   955                           
   956                           ; 1 bytes @ 0x49
   957  00E9                     	ds	1
   958                           
   959                           	psect	cstackCOMMON
   960  0070                     __pcstackCOMMON:	
   961  0070                     ?_fastClock:	
   962  0070                     ?_setTime:	
   963                           ; 0 bytes @ 0x0
   964                           
   965  0070                     ?_showTime:	
   966                           ; 0 bytes @ 0x0
   967                           
   968  0070                     ?_bitmapClear:	
   969                           ; 0 bytes @ 0x0
   970                           
   971  0070                     ?_setup:	
   972                           ; 0 bytes @ 0x0
   973                           
   974  0070                     ?_shiftUp:	
   975                           ; 0 bytes @ 0x0
   976                           
   977  0070                     ?_generateLine:	
   978                           ; 0 bytes @ 0x0
   979                           
   980  0070                     ?_main:	
   981                           ; 0 bytes @ 0x0
   982                           
   983  0070                     ?_isr:	
   984                           ; 0 bytes @ 0x0
   985                           
   986  0070                     ??_isr:	
   987                           ; 0 bytes @ 0x0
   988                           
   989  0070                     ?_init:	
   990                           ; 0 bytes @ 0x0
   991                           
   992                           
   993                           ; 1 bytes @ 0x0
   994  0070                     	ds	5
   995  0075                     isr@rowValueTempR:	
   996                           
   997                           ; 1 bytes @ 0x5
   998  0075                     	ds	1
   999  0076                     isr@rowValueTempG:	
  1000                           
  1001                           ; 1 bytes @ 0x6
  1002  0076                     	ds	1
  1003  0077                     isr@rowValueTempB:	
  1004                           
  1005                           ; 1 bytes @ 0x7
  1006  0077                     	ds	1
  1007  0078                     isr@currentRefreshingColumn:	
  1008                           
  1009                           ; 1 bytes @ 0x8
  1010  0078                     	ds	1
  1011                           
  1012                           	psect	cstackBANK0
  1013  0020                     __pcstackBANK0:	
  1014  0020                     ??_fastClock:	
  1015  0020                     ??_bitmapClear:	
  1016                           ; 0 bytes @ 0x0
  1017                           
  1018  0020                     ?_bitmapPutPixel:	
  1019                           ; 0 bytes @ 0x0
  1020                           
  1021  0020                     ??_shiftUp:	
  1022                           ; 0 bytes @ 0x0
  1023                           
  1024  0020                     ?_srand:	
  1025                           ; 0 bytes @ 0x0
  1026                           
  1027  0020                     ?___ftge:	
  1028                           ; 0 bytes @ 0x0
  1029                           
  1030  0020                     ?___wmul:	
  1031                           ; 1 bit 
  1032                           
  1033  0020                     ?___ftpack:	
  1034                           ; 2 bytes @ 0x0
  1035                           
  1036  0020                     ?_frexp:	
  1037                           ; 3 bytes @ 0x0
  1038                           
  1039  0020                     ?___lmul:	
  1040                           ; 3 bytes @ 0x0
  1041                           
  1042  0020                     bitmapPutPixel@y:	
  1043                           ; 4 bytes @ 0x0
  1044                           
  1045  0020                     ___wmul@multiplier:	
  1046                           ; 1 bytes @ 0x0
  1047                           
  1048  0020                     srand@x:	
  1049                           ; 2 bytes @ 0x0
  1050                           
  1051  0020                     ___ftpack@arg:	
  1052                           ; 2 bytes @ 0x0
  1053                           
  1054  0020                     frexp@value:	
  1055                           ; 3 bytes @ 0x0
  1056                           
  1057  0020                     ___ftge@ff1:	
  1058                           ; 3 bytes @ 0x0
  1059                           
  1060  0020                     ___lmul@multiplier:	
  1061                           ; 3 bytes @ 0x0
  1062                           
  1063                           
  1064                           ; 4 bytes @ 0x0
  1065  0020                     	ds	1
  1066  0021                     bitmapPutPixel@r:	
  1067  0021                     bitmapClear@i:	
  1068                           ; 1 bytes @ 0x1
  1069                           
  1070                           
  1071                           ; 1 bytes @ 0x1
  1072  0021                     	ds	1
  1073  0022                     ??_srand:	
  1074  0022                     bitmapPutPixel@g:	
  1075                           ; 0 bytes @ 0x2
  1076                           
  1077  0022                     ___wmul@multiplicand:	
  1078                           ; 1 bytes @ 0x2
  1079                           
  1080                           
  1081                           ; 2 bytes @ 0x2
  1082  0022                     	ds	1
  1083  0023                     bitmapPutPixel@b:	
  1084  0023                     ___ftpack@exp:	
  1085                           ; 1 bytes @ 0x3
  1086                           
  1087  0023                     frexp@eptr:	
  1088                           ; 1 bytes @ 0x3
  1089                           
  1090  0023                     ___ftge@ff2:	
  1091                           ; 1 bytes @ 0x3
  1092                           
  1093                           
  1094                           ; 3 bytes @ 0x3
  1095  0023                     	ds	1
  1096  0024                     ??_bitmapPutPixel:	
  1097  0024                     ??_frexp:	
  1098                           ; 0 bytes @ 0x4
  1099                           
  1100  0024                     ??___wmul:	
  1101                           ; 0 bytes @ 0x4
  1102                           
  1103  0024                     ___ftpack@sign:	
  1104                           ; 0 bytes @ 0x4
  1105                           
  1106  0024                     ___wmul@product:	
  1107                           ; 1 bytes @ 0x4
  1108                           
  1109  0024                     ___lmul@multiplicand:	
  1110                           ; 2 bytes @ 0x4
  1111                           
  1112                           
  1113                           ; 4 bytes @ 0x4
  1114  0024                     	ds	1
  1115  0025                     ??___ftpack:	
  1116                           
  1117                           ; 0 bytes @ 0x5
  1118  0025                     	ds	1
  1119  0026                     ??___ftge:	
  1120  0026                     ?___awdiv:	
  1121                           ; 0 bytes @ 0x6
  1122                           
  1123  0026                     bitmapPutPixel@x:	
  1124                           ; 2 bytes @ 0x6
  1125                           
  1126  0026                     ___awdiv@divisor:	
  1127                           ; 1 bytes @ 0x6
  1128                           
  1129                           
  1130                           ; 2 bytes @ 0x6
  1131  0026                     	ds	1
  1132  0027                     bitmapPutPixel@i:	
  1133                           
  1134                           ; 1 bytes @ 0x7
  1135  0027                     	ds	1
  1136  0028                     ??___lmul:	
  1137  0028                     ?___awtoft:	
  1138                           ; 0 bytes @ 0x8
  1139                           
  1140  0028                     ?___lbtoft:	
  1141                           ; 3 bytes @ 0x8
  1142                           
  1143  0028                     bitmapPutPixel@currentPixelPosition:	
  1144                           ; 3 bytes @ 0x8
  1145                           
  1146  0028                     shiftUp@y:	
  1147                           ; 1 bytes @ 0x8
  1148                           
  1149  0028                     ___awdiv@dividend:	
  1150                           ; 1 bytes @ 0x8
  1151                           
  1152  0028                     ___awtoft@c:	
  1153                           ; 2 bytes @ 0x8
  1154                           
  1155  0028                     ___lmul@product:	
  1156                           ; 2 bytes @ 0x8
  1157                           
  1158                           
  1159                           ; 4 bytes @ 0x8
  1160  0028                     	ds	1
  1161  0029                     ?_setPixel:	
  1162  0029                     setPixel@y:	
  1163                           ; 0 bytes @ 0x9
  1164                           
  1165  0029                     shiftUp@x:	
  1166                           ; 1 bytes @ 0x9
  1167                           
  1168                           
  1169                           ; 1 bytes @ 0x9
  1170  0029                     	ds	1
  1171  002A                     ??___awdiv:	
  1172  002A                     setPixel@colorR:	
  1173                           ; 0 bytes @ 0xA
  1174                           
  1175  002A                     shiftUp@x_714:	
  1176                           ; 1 bytes @ 0xA
  1177                           
  1178                           
  1179                           ; 1 bytes @ 0xA
  1180  002A                     	ds	1
  1181  002B                     ??___awtoft:	
  1182  002B                     ??___lbtoft:	
  1183                           ; 0 bytes @ 0xB
  1184                           
  1185  002B                     setPixel@colorG:	
  1186                           ; 0 bytes @ 0xB
  1187                           
  1188  002B                     ___awdiv@counter:	
  1189                           ; 1 bytes @ 0xB
  1190                           
  1191                           
  1192                           ; 1 bytes @ 0xB
  1193  002B                     	ds	1
  1194  002C                     ?_DelayMs:	
  1195  002C                     ?_rand:	
  1196                           ; 0 bytes @ 0xC
  1197                           
  1198  002C                     setPixel@colorB:	
  1199                           ; 2 bytes @ 0xC
  1200                           
  1201  002C                     ___awdiv@sign:	
  1202                           ; 1 bytes @ 0xC
  1203                           
  1204  002C                     DelayMs@ms:	
  1205                           ; 1 bytes @ 0xC
  1206                           
  1207                           
  1208                           ; 2 bytes @ 0xC
  1209  002C                     	ds	1
  1210  002D                     ??_setPixel:	
  1211  002D                     ___awtoft@sign:	
  1212                           ; 0 bytes @ 0xD
  1213                           
  1214  002D                     ___awdiv@quotient:	
  1215                           ; 1 bytes @ 0xD
  1216                           
  1217                           
  1218                           ; 2 bytes @ 0xD
  1219  002D                     	ds	1
  1220  002E                     ??_DelayMs:	
  1221  002E                     ??_rand:	
  1222                           ; 0 bytes @ 0xE
  1223                           
  1224  002E                     ?___ftneg:	
  1225                           ; 0 bytes @ 0xE
  1226                           
  1227  002E                     ___ftneg@f1:	
  1228                           ; 3 bytes @ 0xE
  1229                           
  1230                           
  1231                           ; 3 bytes @ 0xE
  1232  002E                     	ds	1
  1233  002F                     ___lbtoft@c:	
  1234  002F                     DelayMs@cyclesRequiredForEntireDelay:	
  1235                           ; 1 bytes @ 0xF
  1236                           
  1237                           
  1238                           ; 4 bytes @ 0xF
  1239  002F                     	ds	1
  1240  0030                     ?___ftdiv:	
  1241  0030                     ___ftdiv@f2:	
  1242                           ; 3 bytes @ 0x10
  1243                           
  1244                           
  1245                           ; 3 bytes @ 0x10
  1246  0030                     	ds	1
  1247  0031                     ??___ftneg:	
  1248  0031                     ?___ftadd:	
  1249                           ; 0 bytes @ 0x11
  1250                           
  1251  0031                     setPixel@x:	
  1252                           ; 3 bytes @ 0x11
  1253                           
  1254  0031                     ___ftadd@f1:	
  1255                           ; 1 bytes @ 0x11
  1256                           
  1257                           
  1258                           ; 3 bytes @ 0x11
  1259  0031                     	ds	2
  1260  0033                     ?___awmod:	
  1261  0033                     ___awmod@divisor:	
  1262                           ; 2 bytes @ 0x13
  1263                           
  1264  0033                     ___ftdiv@f1:	
  1265                           ; 2 bytes @ 0x13
  1266                           
  1267                           
  1268                           ; 3 bytes @ 0x13
  1269  0033                     	ds	1
  1270  0034                     ___ftadd@f2:	
  1271                           
  1272                           ; 3 bytes @ 0x14
  1273  0034                     	ds	1
  1274  0035                     ___awmod@dividend:	
  1275                           
  1276                           ; 2 bytes @ 0x15
  1277  0035                     	ds	1
  1278  0036                     ??___ftdiv:	
  1279                           
  1280                           ; 0 bytes @ 0x16
  1281  0036                     	ds	1
  1282  0037                     ??___awmod:	
  1283  0037                     ??___ftadd:	
  1284                           ; 0 bytes @ 0x17
  1285                           
  1286                           
  1287                           ; 0 bytes @ 0x17
  1288  0037                     	ds	1
  1289  0038                     ___awmod@counter:	
  1290                           
  1291                           ; 1 bytes @ 0x18
  1292  0038                     	ds	1
  1293  0039                     ___awmod@sign:	
  1294                           
  1295                           ; 1 bytes @ 0x19
  1296  0039                     	ds	1
  1297  003A                     ??_setTime:	
  1298  003A                     ??_generateLine:	
  1299                           ; 0 bytes @ 0x1A
  1300                           
  1301  003A                     ___ftdiv@cntr:	
  1302                           ; 0 bytes @ 0x1A
  1303                           
  1304                           
  1305                           ; 1 bytes @ 0x1A
  1306  003A                     	ds	1
  1307  003B                     generateLine@x:	
  1308  003B                     ___ftadd@sign:	
  1309                           ; 1 bytes @ 0x1B
  1310                           
  1311  003B                     ___ftdiv@f3:	
  1312                           ; 1 bytes @ 0x1B
  1313                           
  1314                           
  1315                           ; 3 bytes @ 0x1B
  1316  003B                     	ds	1
  1317  003C                     ??_setup:	
  1318  003C                     ___ftadd@exp2:	
  1319                           ; 0 bytes @ 0x1C
  1320                           
  1321                           
  1322                           ; 1 bytes @ 0x1C
  1323  003C                     	ds	1
  1324  003D                     ___ftadd@exp1:	
  1325  003D                     setTime@tempValueTens:	
  1326                           ; 1 bytes @ 0x1D
  1327                           
  1328                           
  1329                           ; 2 bytes @ 0x1D
  1330  003D                     	ds	1
  1331  003E                     ?___ftmul:	
  1332  003E                     ___ftdiv@exp:	
  1333                           ; 3 bytes @ 0x1E
  1334                           
  1335  003E                     ___ftmul@f1:	
  1336                           ; 1 bytes @ 0x1E
  1337                           
  1338                           
  1339                           ; 3 bytes @ 0x1E
  1340  003E                     	ds	1
  1341  003F                     setup@y:	
  1342  003F                     ___ftdiv@sign:	
  1343                           ; 1 bytes @ 0x1F
  1344                           
  1345  003F                     setTime@tempValueUnits:	
  1346                           ; 1 bytes @ 0x1F
  1347                           
  1348                           
  1349                           ; 2 bytes @ 0x1F
  1350  003F                     	ds	1
  1351  0040                     setup@x:	
  1352                           
  1353                           ; 1 bytes @ 0x20
  1354  0040                     	ds	1
  1355  0041                     ??_init:	
  1356  0041                     setTime@changesMadeFlag:	
  1357                           ; 0 bytes @ 0x21
  1358                           
  1359  0041                     ___ftmul@f2:	
  1360                           ; 1 bytes @ 0x21
  1361                           
  1362                           
  1363                           ; 3 bytes @ 0x21
  1364  0041                     	ds	1
  1365  0042                     setTime@tempHours:	
  1366                           
  1367                           ; 1 bytes @ 0x22
  1368  0042                     	ds	1
  1369  0043                     setTime@tempMinutes:	
  1370                           
  1371                           ; 1 bytes @ 0x23
  1372  0043                     	ds	1
  1373  0044                     ??___ftmul:	
  1374  0044                     setTime@currentFieldValue:	
  1375                           ; 0 bytes @ 0x24
  1376                           
  1377                           
  1378                           ; 2 bytes @ 0x24
  1379  0044                     	ds	2
  1380  0046                     setTime@i:	
  1381                           
  1382                           ; 1 bytes @ 0x26
  1383  0046                     	ds	1
  1384  0047                     setTime@tempValue:	
  1385                           
  1386                           ; 2 bytes @ 0x27
  1387  0047                     	ds	1
  1388  0048                     ___ftmul@exp:	
  1389                           
  1390                           ; 1 bytes @ 0x28
  1391  0048                     	ds	1
  1392  0049                     setTime@currentFieldSelected:	
  1393  0049                     ___ftmul@f3_as_product:	
  1394                           ; 2 bytes @ 0x29
  1395                           
  1396                           
  1397                           ; 3 bytes @ 0x29
  1398  0049                     	ds	3
  1399  004C                     ___ftmul@cntr:	
  1400                           
  1401                           ; 1 bytes @ 0x2C
  1402  004C                     	ds	1
  1403  004D                     ___ftmul@sign:	
  1404                           
  1405                           ; 1 bytes @ 0x2D
  1406  004D                     	ds	1
  1407  004E                     ?___fttol:	
  1408  004E                     ___fttol@f1:	
  1409                           ; 4 bytes @ 0x2E
  1410                           
  1411                           
  1412                           ; 3 bytes @ 0x2E
  1413  004E                     	ds	4
  1414  0052                     ??___fttol:	
  1415                           
  1416                           ; 0 bytes @ 0x32
  1417  0052                     	ds	4
  1418  0056                     ___fttol@sign1:	
  1419                           
  1420                           ; 1 bytes @ 0x36
  1421  0056                     	ds	1
  1422  0057                     ___fttol@lval:	
  1423                           
  1424                           ; 4 bytes @ 0x37
  1425  0057                     	ds	4
  1426  005B                     ___fttol@exp1:	
  1427                           
  1428                           ; 1 bytes @ 0x3B
  1429  005B                     	ds	1
  1430  005C                     ?___altoft:	
  1431  005C                     ___altoft@c:	
  1432                           ; 3 bytes @ 0x3C
  1433                           
  1434                           
  1435                           ; 4 bytes @ 0x3C
  1436  005C                     	ds	4
  1437  0060                     ??___altoft:	
  1438                           
  1439                           ; 0 bytes @ 0x40
  1440  0060                     	ds	2
  1441  0062                     ___altoft@exp:	
  1442                           
  1443                           ; 1 bytes @ 0x42
  1444  0062                     	ds	1
  1445  0063                     ___altoft@sign:	
  1446                           
  1447                           ; 1 bytes @ 0x43
  1448  0063                     	ds	1
  1449  0064                     ?_floor:	
  1450  0064                     floor@x:	
  1451                           ; 3 bytes @ 0x44
  1452                           
  1453                           
  1454                           ; 3 bytes @ 0x44
  1455  0064                     	ds	3
  1456  0067                     ??_floor:	
  1457                           
  1458                           ; 0 bytes @ 0x47
  1459  0067                     	ds	1
  1460  0068                     floor@i:	
  1461                           
  1462                           ; 3 bytes @ 0x48
  1463  0068                     	ds	3
  1464  006B                     floor@expon:	
  1465                           
  1466                           ; 2 bytes @ 0x4B
  1467  006B                     	ds	2
  1468  006D                     ?_HSVtoRGB:	
  1469  006D                     HSVtoRGB@vHSV:	
  1470                           ; 0 bytes @ 0x4D
  1471                           
  1472                           
  1473                           ; 1 bytes @ 0x4D
  1474  006D                     	ds	1
  1475  006E                     ??_HSVtoRGB:	
  1476                           
  1477                           ; 0 bytes @ 0x4E
  1478  006E                     	ds	1
  1479  006F                     ??_main:	
  1480                           
  1481                           ; 0 bytes @ 0x4F
  1482  006F                     	ds	1
  1483                           
  1484                           	psect	maintext
  1485  093D                     __pmaintext:	
  1486 ;;
  1487 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1488 ;;
  1489 ;; *************** function _main *****************
  1490 ;; Defined at:
  1491 ;;		line 132 in file "../main.c"
  1492 ;; Parameters:    Size  Location     Type
  1493 ;;		None
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;		None
  1496 ;; Return value:  Size  Location     Type
  1497 ;;		None               void
  1498 ;; Registers used:
  1499 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1500 ;; Tracked objects:
  1501 ;;		On entry : 17F/0
  1502 ;;		On exit  : 0/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1507 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1508 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1509 ;;Total ram usage:        1 bytes
  1510 ;; Hardware stack levels required when called:    7
  1511 ;; This function calls:
  1512 ;;		_fastClock
  1513 ;;		_init
  1514 ;;		_setTime
  1515 ;;		_showTime
  1516 ;; This function is called by:
  1517 ;;		Startup code after reset
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           
  1522                           ;psect for function _main
  1523  093D                     _main:	
  1524                           
  1525                           ;main.c: 135: if(init())
  1526                           
  1527                           ;incstack = 0
  1528                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1529  093D  318B  2335  3189   	fcall	_init
  1530  0940  3A00               	xorlw	0
  1531  0941  1D03               	btfss	3,2
  1532  0942                     l155:	
  1533                           ;main.c: 136: {
  1534                           ;main.c: 137: while(1);
  1535                           
  1536  0942  2942               	goto	l155
  1537                           
  1538                           ;main.c: 138: }
  1539                           ;main.c: 140: GIE = 1;
  1540  0943  178B               	bsf	11,7	;volatile
  1541                           
  1542                           ;main.c: 159: break;
  1543                           
  1544                           ;main.c: 157: {
  1545                           ;main.c: 158: case 0:
  1546                           
  1547                           ;main.c: 143: {
  1548                           ;main.c: 156: switch(currentState)
  1549                           
  1550                           ;main.c: 142: while(1)
  1551  0944  2979               	goto	l3448
  1552  0945                     l3422:	
  1553                           ;main.c: 161: case 1:
  1554                           
  1555  0945  295A               	goto	L3
  1556  0946                     l162:	
  1557                           ;main.c: 165: case 2:
  1558                           
  1559                           ;main.c: 163: break;
  1560                           
  1561                           ;main.c: 162: currentState = 4;
  1562                           
  1563                           
  1564                           ;main.c: 166: IOCIE = 0;
  1565  0946  118B               	bcf	11,3	;volatile
  1566                           
  1567                           ;main.c: 167: LATBbits.LATB5 = 1;
  1568  0947  0022               	movlb	2	; select bank2
  1569  0948  168D               	bsf	13,5	;volatile
  1570                           
  1571                           ;main.c: 168: fastClock();
  1572  0949  3196  26E9  3189   	fcall	_fastClock
  1573                           
  1574                           ;main.c: 169: setTime();
  1575  094C  3184  2495  3189   	fcall	_setTime
  1576                           
  1577                           ;main.c: 171: currentState = 3;
  1578  094F  3003               	movlw	3
  1579  0950  295B               	goto	L2
  1580  0951                     l163:	
  1581                           ;main.c: 174: case 3:
  1582                           
  1583                           ;main.c: 172: break;
  1584                           
  1585                           
  1586                           ;main.c: 175: IOCIE = 0;
  1587  0951  118B               	bcf	11,3	;volatile
  1588                           
  1589                           ;main.c: 176: LATBbits.LATB5 = 1;
  1590  0952  0022               	movlb	2	; select bank2
  1591  0953  168D               	bsf	13,5	;volatile
  1592                           
  1593                           ;main.c: 177: fastClock();
  1594  0954  3196  26E9  3189   	fcall	_fastClock
  1595                           
  1596                           ;main.c: 178: showTime();
  1597  0957  3188  207C  3189   	fcall	_showTime
  1598  095A                     L3:	
  1599                           
  1600                           ;main.c: 179: currentState = 4;
  1601  095A  3004               	movlw	4
  1602  095B                     L2:	
  1603  095B  0020               	movlb	0	; select bank0
  1604  095C  00EF               	movwf	??_main
  1605  095D  086F               	movf	??_main,w
  1606  095E  0021               	movlb	1	; select bank1
  1607  095F  00EC               	movwf	_currentState^(0+128)	;volatile
  1608                           
  1609                           ;main.c: 180: break;
  1610  0960  2979               	goto	l3448
  1611  0961                     l164:	
  1612                           ;main.c: 182: case 4:
  1613                           
  1614                           
  1615                           ;main.c: 184: LATBbits.LATB5 = 0;
  1616  0961  0022               	movlb	2	; select bank2
  1617  0962  128D               	bcf	13,5	;volatile
  1618                           
  1619                           ;main.c: 186: TMR0IE = 0;
  1620  0963  128B               	bcf	11,5	;volatile
  1621                           
  1622                           ;main.c: 189: LATGbits.LATG0 = LATFbits.LATF1 = LATFbits.LATF2 = LATFbits.LATF3 = LATFbi
      +                          ts.LATF4 = LATFbits.LATF5 = LATFbits.LATF6 = LATFbits.LATF7 = 0;
  1623  0964  0027               	movlb	7	; select bank7
  1624  0965  138C               	bcf	12,7	;volatile
  1625  0966  130C               	bcf	12,6	;volatile
  1626  0967  128C               	bcf	12,5	;volatile
  1627  0968  120C               	bcf	12,4	;volatile
  1628  0969  118C               	bcf	12,3	;volatile
  1629  096A  110C               	bcf	12,2	;volatile
  1630  096B  108C               	bcf	12,1	;volatile
  1631  096C  100D               	bcf	13,0	;volatile
  1632                           
  1633                           ;main.c: 195: TRISA = TRISD = TRISE = 0;
  1634  096D  0021               	movlb	1	; select bank1
  1635  096E  0190               	clrf	16	;volatile
  1636  096F  018F               	clrf	15	;volatile
  1637  0970  018C               	clrf	12	;volatile
  1638                           
  1639                           ;main.c: 202: OSCCON = 0b01101001;
  1640  0971  3069               	movlw	105
  1641  0972  0099               	movwf	25	;volatile
  1642                           
  1643                           ;main.c: 204: IOCBF = 0;
  1644  0973  0027               	movlb	7	; select bank7
  1645  0974  0196               	clrf	22	;volatile
  1646                           
  1647                           ;main.c: 205: IOCIF = 0;
  1648  0975  100B               	bcf	11,0	;volatile
  1649                           
  1650                           ;main.c: 206: IOCIE = 1;
  1651  0976  158B               	bsf	11,3	;volatile
  1652  0977  0063               	sleep	;# 
  1653  0978  0000               	nop	;# 
  1654  0979                     l3448:	
  1655                           ;main.c: 221: }
  1656                           
  1657                           ;main.c: 220: break;
  1658                           
  1659                           ;main.c: 219: default:
  1660                           
  1661                           ;main.c: 217: break;
  1662                           
  1663                           ;main.c: 214: case 5:
  1664                           
  1665                           ;main.c: 212: break;
  1666                           
  1667  0979  0021               	movlb	1	; select bank1
  1668  097A  086C               	movf	_currentState^(0+128),w	;volatile
  1669                           
  1670                           ; Switch size 1, requested type "space"
  1671                           ; Number of cases is 6, Range of values is 0 to 5
  1672                           ; switch strategies available:
  1673                           ; Name         Instructions Cycles
  1674                           ; direct_byte           18     6 (fixed)
  1675                           ; simple_byte           19    10 (average)
  1676                           ; jumptable            260     6 (fixed)
  1677                           ;	Chosen strategy is direct_byte
  1678  097B  0084               	movwf	4
  1679  097C  3006               	movlw	6
  1680  097D  0204               	subwf	4,w
  1681  097E  1803               	skipnc
  1682  097F  2979               	goto	l3448
  1683  0980  3190               	movlp	high S3796
  1684  0981  3504               	lslf	4,w
  1685  0982  3E90               	addlw	low S3796
  1686  0983  0082               	movwf	2
  1687  0984  2979               	goto	l3448
  1688  0985                     __end_of_main:	
  1689                           
  1690                           	psect	swtext1
  1691  1090                     __pswtext1:	
  1692  1090                     S3796:	
  1693  1090  3189  2979         	ljmp	l3448
  1694  1092  3189  2945         	ljmp	l3422
  1695  1094  3189  2946         	ljmp	l162
  1696  1096  3189  2951         	ljmp	l163
  1697  1098  3189  2961         	ljmp	l164
  1698  109A  3189  2979         	ljmp	l3448
  1699                           
  1700                           	psect	text1
  1701  087C                     __ptext1:	
  1702 ;; *************** function _showTime *****************
  1703 ;; Defined at:
  1704 ;;		line 855 in file "../main.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;		None
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;  pcnt            1   73[BANK1 ] unsigned char 
  1709 ;;  currentPwmLe    1   72[BANK1 ] unsigned char 
  1710 ;;  currentAnima    1   71[BANK1 ] unsigned char 
  1711 ;;  elementSecon    1    0        unsigned char 
  1712 ;;  elementSecon    1    0        unsigned char 
  1713 ;;  elementMinut    1    0        unsigned char 
  1714 ;;  elementMinut    1    0        unsigned char 
  1715 ;;  elementHourU    1    0        unsigned char 
  1716 ;;  elementHourT    1    0        unsigned char 
  1717 ;;  currentAnima    1    0        char 
  1718 ;;  tempPixelB      1    0        unsigned char 
  1719 ;;  tempPixelG      1    0        unsigned char 
  1720 ;;  tempPixelR      1    0        unsigned char 
  1721 ;;  yLast           1    0        unsigned char 
  1722 ;;  xLast           1    0        unsigned char 
  1723 ;;  y               1    0        unsigned char 
  1724 ;;  x               1    0        unsigned char 
  1725 ;;  loopsUntilTi    1    0        unsigned char 
  1726 ;; Return value:  Size  Location     Type
  1727 ;;		None               void
  1728 ;; Registers used:
  1729 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1730 ;; Tracked objects:
  1731 ;;		On entry : 0/0
  1732 ;;		On exit  : 0/0
  1733 ;;		Unchanged: 0/0
  1734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1736 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  1737 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1738 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  1739 ;;Total ram usage:        5 bytes
  1740 ;; Hardware stack levels used:    1
  1741 ;; Hardware stack levels required when called:    6
  1742 ;; This function calls:
  1743 ;;		_bitmapClear
  1744 ;;		_drawFrame
  1745 ;;		_generateLine
  1746 ;;		_shiftUp
  1747 ;; This function is called by:
  1748 ;;		_main
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           
  1753                           ;psect for function _showTime
  1754  087C                     _showTime:	
  1755                           
  1756                           ;main.c: 857: unsigned char currentAnimationFrame, currentPwmLevel, loopsUntilTimeout, x
      +                          , y, xLast, yLast, tempPixelR, tempPixelG, tempPixelB, pcnt;
  1757                           ;main.c: 859: signed char currentAnimationFrameSigned;
  1758                           ;main.c: 860: unsigned char elementHourTens, elementHourUnits, elementMinuteTens, elemen
      +                          tMinuteUnits, elementSecondTens, elementSecondUnits;
  1759                           ;main.c: 864: currentAnimationFrame = currentPwmLevel = 0;
  1760                           
  1761                           ;incstack = 0
  1762                           ; Regs used in _showTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1763  087C  0021               	movlb	1	; select bank1
  1764  087D  01E8               	clrf	showTime@currentPwmLevel^(0+128)
  1765  087E  01E7               	clrf	showTime@currentAnimationFrame^(0+128)
  1766                           
  1767                           ;main.c: 868: bitmapClear();
  1768  087F  3197  2709  3188   	fcall	_bitmapClear
  1769                           
  1770                           ;main.c: 871: TMR0IE = 1;
  1771  0882  168B               	bsf	11,5	;volatile
  1772                           
  1773                           ;main.c: 874: T2CONbits.TMR2ON = 1;
  1774  0883  0020               	movlb	0	; select bank0
  1775  0884  151C               	bsf	28,2	;volatile
  1776  0885                     l3412:	
  1777                           ;main.c: 876: while(currentState == 3)
  1778                           
  1779  0885  0021               	movlb	1	; select bank1
  1780  0886  086C               	movf	_currentState^(0+128),w	;volatile
  1781  0887  3A03               	xorlw	3
  1782  0888  1D03               	btfss	3,2
  1783  0889  28AA               	goto	l311
  1784                           
  1785                           ;main.c: 877: {
  1786                           ;main.c: 878: if (pcnt >= 100){
  1787  088A  3064               	movlw	100
  1788  088B  0021               	movlb	1	; select bank1
  1789  088C  0269               	subwf	showTime@pcnt^(0+128),w
  1790  088D  1C03               	skipc
  1791  088E  2897               	goto	l3406
  1792                           
  1793                           ;main.c: 879: shiftUp();
  1794  088F  3187  2785  3188   	fcall	_shiftUp
  1795                           
  1796                           ;main.c: 880: generateLine();
  1797  0892  3197  2776  3188   	fcall	_generateLine
  1798                           
  1799                           ;main.c: 881: pcnt = 0;
  1800  0895  0021               	movlb	1	; select bank1
  1801  0896  01E9               	clrf	showTime@pcnt^(0+128)
  1802  0897                     l3406:	
  1803                           
  1804                           ;main.c: 882: }
  1805                           ;main.c: 883: drawFrame(pcnt);
  1806  0897  0869               	movf	showTime@pcnt^(0+128),w
  1807  0898  00E5               	movwf	??_showTime^(0+128)
  1808  0899  01E6               	clrf	(??_showTime^(0+128)+1)
  1809  089A  0865               	movf	??_showTime^(0+128),w
  1810  089B  00CC               	movwf	drawFrame@pcnt^(0+128)
  1811  089C  0866               	movf	(??_showTime+1)^(0+128),w
  1812  089D  00CD               	movwf	(drawFrame@pcnt+1)^(0+128)
  1813  089E  318E  2621  3188   	fcall	_drawFrame
  1814                           
  1815                           ;main.c: 884: pcnt+=30;
  1816  08A1  301E               	movlw	30
  1817  08A2  0021               	movlb	1	; select bank1
  1818  08A3  00E5               	movwf	??_showTime^(0+128)
  1819  08A4  0865               	movf	??_showTime^(0+128),w
  1820  08A5  07E9               	addwf	showTime@pcnt^(0+128),f
  1821                           
  1822                           ;main.c: 886: timerTicks = 0;
  1823  08A6  0022               	movlb	2	; select bank2
  1824  08A7  01AE               	clrf	_timerTicks^(0+256)	;volatile
  1825  08A8  01AF               	clrf	(_timerTicks+1)^(0+256)	;volatile
  1826  08A9  2885               	goto	l3412
  1827  08AA                     l311:	
  1828                           
  1829                           ;main.c: 889: }
  1830                           ;main.c: 892: T2CONbits.TMR2ON = 0;
  1831  08AA  0020               	movlb	0	; select bank0
  1832  08AB  111C               	bcf	28,2	;volatile
  1833                           
  1834                           ;main.c: 893: TMR2 = 0;
  1835  08AC  019A               	clrf	26	;volatile
  1836                           
  1837                           ;main.c: 896: TMR0IE = 0;
  1838  08AD  128B               	bcf	11,5	;volatile
  1839                           
  1840                           ;main.c: 899: LATGbits.LATG0 = LATFbits.LATF1 = LATFbits.LATF2 = LATFbits.LATF3 = LATFbi
      +                          ts.LATF4 = LATFbits.LATF5 = LATFbits.LATF6 = LATFbits.LATF7 = 0;
  1841  08AE  0027               	movlb	7	; select bank7
  1842  08AF  138C               	bcf	12,7	;volatile
  1843  08B0  130C               	bcf	12,6	;volatile
  1844  08B1  128C               	bcf	12,5	;volatile
  1845  08B2  120C               	bcf	12,4	;volatile
  1846  08B3  118C               	bcf	12,3	;volatile
  1847  08B4  110C               	bcf	12,2	;volatile
  1848  08B5  108C               	bcf	12,1	;volatile
  1849  08B6  100D               	bcf	13,0	;volatile
  1850  08B7  0008               	return
  1851  08B8                     __end_of_showTime:	
  1852                           
  1853                           	psect	text2
  1854  0785                     __ptext2:	
  1855 ;; *************** function _shiftUp *****************
  1856 ;; Defined at:
  1857 ;;		line 162 in file "../fire.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;		None
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;  x               1    9[BANK0 ] unsigned char 
  1862 ;;  x               1   10[BANK0 ] unsigned char 
  1863 ;;  y               1    8[BANK0 ] unsigned char 
  1864 ;;  colorRGB        3    0        struct .
  1865 ;; Return value:  Size  Location     Type
  1866 ;;		None               void
  1867 ;; Registers used:
  1868 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1875 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1876 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1877 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1878 ;;Total ram usage:       11 bytes
  1879 ;; Hardware stack levels used:    1
  1880 ;; Hardware stack levels required when called:    1
  1881 ;; This function calls:
  1882 ;;		Nothing
  1883 ;; This function is called by:
  1884 ;;		_showTime
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888                           
  1889                           ;psect for function _shiftUp
  1890  0785                     _shiftUp:	
  1891                           
  1892                           ;fire.c: 163: ColorRGB colorRGB;
  1893                           ;fire.c: 165: for (unsigned char y=8-1;y>0;y--) {
  1894                           
  1895                           ;incstack = 0
  1896                           ; Regs used in _shiftUp: [wreg+fsr1l+fsr1h+status,2+status,0]
  1897  0785  3007               	movlw	7
  1898  0786  0020               	movlb	0	; select bank0
  1899  0787  00A0               	movwf	??_shiftUp
  1900  0788  0820               	movf	??_shiftUp,w
  1901  0789  00A8               	movwf	shiftUp@y
  1902  078A  08A8               	movf	shiftUp@y,f
  1903  078B  1903               	btfsc	3,2
  1904  078C  2FC7               	goto	l3072
  1905  078D                     l3056:	
  1906                           
  1907                           ;fire.c: 166: for(unsigned char x=0;x<8;x++) {
  1908  078D  01A9               	clrf	shiftUp@x
  1909  078E  3008               	movlw	8
  1910  078F  0229               	subwf	shiftUp@x,w
  1911  0790  1803               	btfsc	3,0
  1912  0791  2FC2               	goto	l3068
  1913  0792                     l3062:	
  1914                           
  1915                           ;fire.c: 167: matrix[x][y] = matrix[x][y-1];
  1916  0792  30FF               	movlw	255
  1917  0793  0728               	addwf	shiftUp@y,w
  1918  0794  00A0               	movwf	??_shiftUp
  1919  0795  30A0               	movlw	_matrix& (0+255)
  1920  0796  0720               	addwf	??_shiftUp,w
  1921  0797  00A1               	movwf	??_shiftUp+1
  1922  0798  0829               	movf	shiftUp@x,w
  1923  0799  00A2               	movwf	??_shiftUp+2
  1924  079A  3002               	movlw	2
  1925  079B                     u3305:	
  1926  079B  35A2               	lslf	??_shiftUp+2,f
  1927  079C  3EFF               	addlw	-1
  1928  079D  1D03               	skipz
  1929  079E  2F9B               	goto	u3305
  1930  079F  3522               	lslf	??_shiftUp+2,w
  1931  07A0  0721               	addwf	??_shiftUp+1,w
  1932  07A1  00A3               	movwf	??_shiftUp+3
  1933  07A2  0823               	movf	??_shiftUp+3,w
  1934  07A3  0086               	movwf	6
  1935  07A4  3001               	movlw	1	; select bank3/4
  1936  07A5  0087               	movwf	7
  1937  07A6  0801               	movf	1,w
  1938  07A7  00A4               	movwf	??_shiftUp+4
  1939  07A8  0829               	movf	shiftUp@x,w
  1940  07A9  00A5               	movwf	??_shiftUp+5
  1941  07AA  3003               	movlw	3
  1942  07AB                     u3315:	
  1943  07AB  35A5               	lslf	??_shiftUp+5,f
  1944  07AC  0B89               	decfsz	9,f
  1945  07AD  2FAB               	goto	u3315
  1946  07AE  30A0               	movlw	_matrix& (0+255)
  1947  07AF  0725               	addwf	??_shiftUp+5,w
  1948  07B0  00A6               	movwf	??_shiftUp+6
  1949  07B1  0828               	movf	shiftUp@y,w
  1950  07B2  0726               	addwf	??_shiftUp+6,w
  1951  07B3  00A7               	movwf	??_shiftUp+7
  1952  07B4  0827               	movf	??_shiftUp+7,w
  1953  07B5  0086               	movwf	6
  1954  07B6  3001               	movlw	1	; select bank3/4
  1955  07B7  0087               	movwf	7
  1956  07B8  0824               	movf	??_shiftUp+4,w
  1957  07B9  0081               	movwf	1
  1958  07BA  3001               	movlw	1
  1959  07BB  00A0               	movwf	??_shiftUp
  1960  07BC  0820               	movf	??_shiftUp,w
  1961  07BD  07A9               	addwf	shiftUp@x,f
  1962  07BE  3008               	movlw	8
  1963  07BF  0229               	subwf	shiftUp@x,w
  1964  07C0  1C03               	skipc
  1965  07C1  2F92               	goto	l3062
  1966  07C2                     l3068:	
  1967  07C2  3001               	movlw	1
  1968  07C3  02A8               	subwf	shiftUp@y,f
  1969  07C4  08A8               	movf	shiftUp@y,f
  1970  07C5  1D03               	skipz
  1971  07C6  2F8D               	goto	l3056
  1972  07C7                     l3072:	
  1973                           
  1974                           ;fire.c: 168: }
  1975                           ;fire.c: 169: }
  1976                           ;fire.c: 171: for(unsigned char x=0;x<8;x++) {
  1977  07C7  01AA               	clrf	shiftUp@x_714
  1978  07C8                     L4:	
  1979  07C8  3008               	movlw	8
  1980  07C9  022A               	subwf	shiftUp@x_714,w
  1981  07CA  1803               	btfsc	3,0
  1982  07CB  0008               	return
  1983                           
  1984                           ;fire.c: 172: matrix[x][0] = line[x];
  1985  07CC  082A               	movf	shiftUp@x_714,w
  1986  07CD  3E20               	addlw	_line& (0+255)
  1987  07CE  0086               	movwf	6
  1988  07CF  3001               	movlw	1	; select bank2/3
  1989  07D0  0087               	movwf	7
  1990  07D1  0801               	movf	1,w
  1991  07D2  00A0               	movwf	??_shiftUp
  1992  07D3  082A               	movf	shiftUp@x_714,w
  1993  07D4  00A1               	movwf	??_shiftUp+1
  1994  07D5  3002               	movlw	2
  1995  07D6                     u3355:	
  1996  07D6  35A1               	lslf	??_shiftUp+1,f
  1997  07D7  3EFF               	addlw	-1
  1998  07D8  1D03               	skipz
  1999  07D9  2FD6               	goto	u3355
  2000  07DA  3521               	lslf	??_shiftUp+1,w
  2001  07DB  3EA0               	addlw	_matrix& (0+255)
  2002  07DC  0086               	movwf	6
  2003  07DD  3001               	movlw	1	; select bank3/4
  2004  07DE  0087               	movwf	7
  2005  07DF  0820               	movf	??_shiftUp,w
  2006  07E0  0081               	movwf	1
  2007  07E1  3001               	movlw	1
  2008  07E2  00A0               	movwf	??_shiftUp
  2009  07E3  0820               	movf	??_shiftUp,w
  2010  07E4  07AA               	addwf	shiftUp@x_714,f
  2011  07E5  2FC8               	goto	L4
  2012  07E6                     __end_of_shiftUp:	
  2013                           
  2014                           	psect	text3
  2015  0E21                     __ptext3:	
  2016 ;; *************** function _drawFrame *****************
  2017 ;; Defined at:
  2018 ;;		line 180 in file "../fire.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;  pcnt            2   44[BANK1 ] int 
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;  x               1    6[BANK2 ] unsigned char 
  2023 ;;  x               1    4[BANK2 ] unsigned char 
  2024 ;;  y               1    5[BANK2 ] unsigned char 
  2025 ;;  colorRGB        3   10[BANK2 ] struct .
  2026 ;;  colorHSV        3    7[BANK2 ] struct .
  2027 ;;  nextv           2    2[BANK2 ] int 
  2028 ;; Return value:  Size  Location     Type
  2029 ;;		None               void
  2030 ;; Registers used:
  2031 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2037 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2038 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0
  2039 ;;      Temps:          0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0
  2040 ;;      Totals:         0       0      25      13       0       0       0       0       0       0       0       0       
      +0       0
  2041 ;;Total ram usage:       38 bytes
  2042 ;; Hardware stack levels used:    1
  2043 ;; Hardware stack levels required when called:    5
  2044 ;; This function calls:
  2045 ;;		_HSVtoRGB
  2046 ;;		___awdiv
  2047 ;;		___wmul
  2048 ;;		_setPixel
  2049 ;; This function is called by:
  2050 ;;		_showTime
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054                           
  2055                           ;psect for function _drawFrame
  2056  0E21                     _drawFrame:	
  2057                           
  2058                           ;fire.c: 181: ColorRGB colorRGB;
  2059                           ;fire.c: 182: ColorHSV colorHSV;
  2060                           ;fire.c: 183: int nextv;
  2061                           ;fire.c: 186: for (unsigned char y=8-1;y>0;y--) {
  2062                           
  2063                           ;incstack = 0
  2064                           ; Regs used in _drawFrame: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2065  0E21  3007               	movlw	7
  2066  0E22  0021               	movlb	1	; select bank1
  2067  0E23  00CE               	movwf	??_drawFrame^(0+128)
  2068  0E24  084E               	movf	??_drawFrame^(0+128),w
  2069  0E25  0022               	movlb	2	; select bank2
  2070  0E26  00B9               	movwf	drawFrame@y^(0+256)
  2071  0E27  08B9               	movf	drawFrame@y^(0+256),f
  2072  0E28  1903               	btfsc	3,2
  2073  0E29  2F4F               	goto	l3122
  2074  0E2A                     l3090:	
  2075                           
  2076                           ;fire.c: 187: for (unsigned char x=0;x<8;x++) {
  2077  0E2A  01BA               	clrf	drawFrame@x^(0+256)
  2078  0E2B  3008               	movlw	8
  2079  0E2C  023A               	subwf	drawFrame@x^(0+256),w
  2080  0E2D  1803               	btfsc	3,0
  2081  0E2E  2F4A               	goto	l3118
  2082  0E2F                     l3096:	
  2083                           
  2084                           ;fire.c: 188: colorHSV.h = hueMask[y][x];
  2085  0E2F  0839               	movf	drawFrame@y^(0+256),w
  2086  0E30  0021               	movlb	1	; select bank1
  2087  0E31  00CE               	movwf	??_drawFrame^(0+128)
  2088  0E32  01CF               	clrf	(??_drawFrame^(0+128)+1)
  2089  0E33  35CE               	lslf	??_drawFrame^(0+128),f
  2090  0E34  0DCF               	rlf	(??_drawFrame^(0+128)+1),f
  2091  0E35  35CE               	lslf	??_drawFrame^(0+128),f
  2092  0E36  0DCF               	rlf	(??_drawFrame^(0+128)+1),f
  2093  0E37  35CE               	lslf	??_drawFrame^(0+128),f
  2094  0E38  0DCF               	rlf	(??_drawFrame^(0+128)+1),f
  2095  0E39  3000               	movlw	low (_hueMask| (0+32768))
  2096  0E3A  00D0               	movwf	(??_drawFrame+2)^(0+128)
  2097  0E3B  3090               	movlw	high (_hueMask| (0+32768))
  2098  0E3C  00D1               	movwf	((??_drawFrame+2)^(0+128)+1)
  2099  0E3D  084E               	movf	??_drawFrame^(0+128),w
  2100  0E3E  0750               	addwf	(??_drawFrame+2)^(0+128),w
  2101  0E3F  00D2               	movwf	(??_drawFrame+4)^(0+128)
  2102  0E40  084F               	movf	(??_drawFrame+1)^(0+128),w
  2103  0E41  3D51               	addwfc	(??_drawFrame+3)^(0+128),w
  2104  0E42  00D3               	movwf	(??_drawFrame+5)^(0+128)
  2105  0E43  0022               	movlb	2	; select bank2
  2106  0E44  083A               	movf	drawFrame@x^(0+256),w
  2107  0E45  0021               	movlb	1	; select bank1
  2108  0E46  0752               	addwf	(??_drawFrame+4)^(0+128),w
  2109  0E47  0084               	movwf	4
  2110  0E48  0853               	movf	((??_drawFrame+4)^(0+128)+1),w
  2111  0E49  1803               	skipnc
  2112  0E4A  0A53               	incf	((??_drawFrame+4)^(0+128)+1),w
  2113  0E4B  0085               	movwf	5
  2114  0E4C  0800               	movf	0,w	;code access
  2115  0E4D  00D4               	movwf	(??_drawFrame+6)^(0+128)
  2116  0E4E  0854               	movf	(??_drawFrame+6)^(0+128),w
  2117  0E4F  0022               	movlb	2	; select bank2
  2118  0E50  00BB               	movwf	drawFrame@colorHSV^(0+256)
  2119                           
  2120                           ;fire.c: 189: colorHSV.s = 255;
  2121  0E51  30FF               	movlw	255
  2122  0E52  0021               	movlb	1	; select bank1
  2123  0E53  00CE               	movwf	??_drawFrame^(0+128)
  2124  0E54  084E               	movf	??_drawFrame^(0+128),w
  2125  0E55  0022               	movlb	2	; select bank2
  2126  0E56  00BC               	movwf	(drawFrame@colorHSV^(0+256)+1)
  2127                           
  2128                           ;fire.c: 190: nextv =
  2129                           ;fire.c: 191: (((100-pcnt)*matrix[x][y]
  2130                           ;fire.c: 192: + pcnt*matrix[x][y-1])/100)
  2131                           ;fire.c: 193: - valueMask[y][x];
  2132  0E57  0839               	movf	drawFrame@y^(0+256),w
  2133  0E58  0021               	movlb	1	; select bank1
  2134  0E59  00CE               	movwf	??_drawFrame^(0+128)
  2135  0E5A  01CF               	clrf	(??_drawFrame^(0+128)+1)
  2136  0E5B  35CE               	lslf	??_drawFrame^(0+128),f
  2137  0E5C  0DCF               	rlf	(??_drawFrame^(0+128)+1),f
  2138  0E5D  35CE               	lslf	??_drawFrame^(0+128),f
  2139  0E5E  0DCF               	rlf	(??_drawFrame^(0+128)+1),f
  2140  0E5F  35CE               	lslf	??_drawFrame^(0+128),f
  2141  0E60  0DCF               	rlf	(??_drawFrame^(0+128)+1),f
  2142  0E61  3040               	movlw	low (_valueMask| (0+32768))
  2143  0E62  00D0               	movwf	(??_drawFrame+2)^(0+128)
  2144  0E63  3090               	movlw	high (_valueMask| (0+32768))
  2145  0E64  00D1               	movwf	((??_drawFrame+2)^(0+128)+1)
  2146  0E65  084E               	movf	??_drawFrame^(0+128),w
  2147  0E66  0750               	addwf	(??_drawFrame+2)^(0+128),w
  2148  0E67  00D2               	movwf	(??_drawFrame+4)^(0+128)
  2149  0E68  084F               	movf	(??_drawFrame+1)^(0+128),w
  2150  0E69  3D51               	addwfc	(??_drawFrame+3)^(0+128),w
  2151  0E6A  00D3               	movwf	(??_drawFrame+5)^(0+128)
  2152  0E6B  0022               	movlb	2	; select bank2
  2153  0E6C  083A               	movf	drawFrame@x^(0+256),w
  2154  0E6D  0021               	movlb	1	; select bank1
  2155  0E6E  0752               	addwf	(??_drawFrame+4)^(0+128),w
  2156  0E6F  0084               	movwf	4
  2157  0E70  0853               	movf	((??_drawFrame+4)^(0+128)+1),w
  2158  0E71  1803               	skipnc
  2159  0E72  0A53               	incf	((??_drawFrame+4)^(0+128)+1),w
  2160  0E73  0085               	movwf	5
  2161  0E74  0800               	movf	0,w	;code access
  2162  0E75  00D4               	movwf	(??_drawFrame+6)^(0+128)
  2163  0E76  01D5               	clrf	((??_drawFrame+6)^(0+128)+1)
  2164  0E77  09D4               	comf	(??_drawFrame+6)^(0+128),f
  2165  0E78  09D5               	comf	((??_drawFrame+6)^(0+128)+1),f
  2166  0E79  0AD4               	incf	(??_drawFrame+6)^(0+128),f
  2167  0E7A  1903               	skipnz
  2168  0E7B  0AD5               	incf	((??_drawFrame+6)^(0+128)+1),f
  2169  0E7C  3064               	movlw	100
  2170  0E7D  0020               	movlb	0	; select bank0
  2171  0E7E  00A6               	movwf	___awdiv@divisor
  2172  0E7F  3000               	movlw	0
  2173  0E80  00A7               	movwf	___awdiv@divisor+1
  2174  0E81  0021               	movlb	1	; select bank1
  2175  0E82  094C               	comf	drawFrame@pcnt^(0+128),w
  2176  0E83  00D6               	movwf	(??_drawFrame+8)^(0+128)
  2177  0E84  094D               	comf	(drawFrame@pcnt+1)^(0+128),w
  2178  0E85  00D7               	movwf	((??_drawFrame+8)^(0+128)+1)
  2179  0E86  0AD6               	incf	(??_drawFrame+8)^(0+128),f
  2180  0E87  1903               	skipnz
  2181  0E88  0AD7               	incf	((??_drawFrame+8)^(0+128)+1),f
  2182  0E89  0856               	movf	(??_drawFrame+8)^(0+128),w
  2183  0E8A  3E64               	addlw	100
  2184  0E8B  0020               	movlb	0	; select bank0
  2185  0E8C  00A0               	movwf	___wmul@multiplier
  2186  0E8D  3000               	movlw	0
  2187  0E8E  0021               	movlb	1	; select bank1
  2188  0E8F  3D57               	addwfc	(??_drawFrame+9)^(0+128),w
  2189  0E90  0020               	movlb	0	; select bank0
  2190  0E91  00A1               	movwf	___wmul@multiplier+1
  2191  0E92  0022               	movlb	2	; select bank2
  2192  0E93  083A               	movf	drawFrame@x^(0+256),w
  2193  0E94  0021               	movlb	1	; select bank1
  2194  0E95  00D8               	movwf	(??_drawFrame+10)^(0+128)
  2195  0E96  3003               	movlw	3
  2196  0E97                     u3395:	
  2197  0E97  35D8               	lslf	(??_drawFrame+10)^(0+128),f
  2198  0E98  0B89               	decfsz	9,f
  2199  0E99  2E97               	goto	u3395
  2200  0E9A  30A0               	movlw	_matrix& (0+255)
  2201  0E9B  0758               	addwf	(??_drawFrame+10)^(0+128),w
  2202  0E9C  00D9               	movwf	(??_drawFrame+11)^(0+128)
  2203  0E9D  0022               	movlb	2	; select bank2
  2204  0E9E  0839               	movf	drawFrame@y^(0+256),w
  2205  0E9F  0021               	movlb	1	; select bank1
  2206  0EA0  0759               	addwf	(??_drawFrame+11)^(0+128),w
  2207  0EA1  00DA               	movwf	(??_drawFrame+12)^(0+128)
  2208  0EA2  085A               	movf	(??_drawFrame+12)^(0+128),w
  2209  0EA3  0086               	movwf	6
  2210  0EA4  3001               	movlw	1	; select bank3/4
  2211  0EA5  0087               	movwf	7
  2212  0EA6  0801               	movf	1,w
  2213  0EA7  00DB               	movwf	(??_drawFrame+13)^(0+128)
  2214  0EA8  01DC               	clrf	((??_drawFrame+13)^(0+128)+1)
  2215  0EA9  085B               	movf	(??_drawFrame+13)^(0+128),w
  2216  0EAA  0020               	movlb	0	; select bank0
  2217  0EAB  00A2               	movwf	___wmul@multiplicand
  2218  0EAC  0021               	movlb	1	; select bank1
  2219  0EAD  085C               	movf	(??_drawFrame+14)^(0+128),w
  2220  0EAE  0020               	movlb	0	; select bank0
  2221  0EAF  00A3               	movwf	___wmul@multiplicand+1
  2222  0EB0  3197  2736  318E   	fcall	___wmul
  2223  0EB3  0020               	movlb	0	; select bank0
  2224  0EB4  0820               	movf	?___wmul,w
  2225  0EB5  0021               	movlb	1	; select bank1
  2226  0EB6  00DD               	movwf	(??_drawFrame+15)^(0+128)
  2227  0EB7  0020               	movlb	0	; select bank0
  2228  0EB8  0821               	movf	?___wmul+1,w
  2229  0EB9  0021               	movlb	1	; select bank1
  2230  0EBA  00DE               	movwf	((??_drawFrame+15)^(0+128)+1)
  2231  0EBB  30FF               	movlw	255
  2232  0EBC  0022               	movlb	2	; select bank2
  2233  0EBD  0739               	addwf	drawFrame@y^(0+256),w
  2234  0EBE  0021               	movlb	1	; select bank1
  2235  0EBF  00DF               	movwf	(??_drawFrame+17)^(0+128)
  2236  0EC0  30A0               	movlw	_matrix& (0+255)
  2237  0EC1  075F               	addwf	(??_drawFrame+17)^(0+128),w
  2238  0EC2  00E0               	movwf	(??_drawFrame+18)^(0+128)
  2239  0EC3  0022               	movlb	2	; select bank2
  2240  0EC4  083A               	movf	drawFrame@x^(0+256),w
  2241  0EC5  0021               	movlb	1	; select bank1
  2242  0EC6  00E1               	movwf	(??_drawFrame+19)^(0+128)
  2243  0EC7  3002               	movlw	2
  2244  0EC8                     u3405:	
  2245  0EC8  35E1               	lslf	(??_drawFrame+19)^(0+128),f
  2246  0EC9  3EFF               	addlw	-1
  2247  0ECA  1D03               	skipz
  2248  0ECB  2EC8               	goto	u3405
  2249  0ECC  3561               	lslf	(??_drawFrame+19)^(0+128),w
  2250  0ECD  0760               	addwf	(??_drawFrame+18)^(0+128),w
  2251  0ECE  00E2               	movwf	(??_drawFrame+20)^(0+128)
  2252  0ECF  0862               	movf	(??_drawFrame+20)^(0+128),w
  2253  0ED0  0086               	movwf	6
  2254  0ED1  3001               	movlw	1	; select bank3/4
  2255  0ED2  0087               	movwf	7
  2256  0ED3  0801               	movf	1,w
  2257  0ED4  00E3               	movwf	(??_drawFrame+21)^(0+128)
  2258  0ED5  01E4               	clrf	((??_drawFrame+21)^(0+128)+1)
  2259  0ED6  0863               	movf	(??_drawFrame+21)^(0+128),w
  2260  0ED7  0020               	movlb	0	; select bank0
  2261  0ED8  00A0               	movwf	___wmul@multiplier
  2262  0ED9  0021               	movlb	1	; select bank1
  2263  0EDA  0864               	movf	(??_drawFrame+22)^(0+128),w
  2264  0EDB  0020               	movlb	0	; select bank0
  2265  0EDC  00A1               	movwf	___wmul@multiplier+1
  2266  0EDD  0021               	movlb	1	; select bank1
  2267  0EDE  084D               	movf	(drawFrame@pcnt+1)^(0+128),w
  2268  0EDF  0020               	movlb	0	; select bank0
  2269  0EE0  01A3               	clrf	___wmul@multiplicand+1
  2270  0EE1  07A3               	addwf	___wmul@multiplicand+1,f
  2271  0EE2  0021               	movlb	1	; select bank1
  2272  0EE3  084C               	movf	drawFrame@pcnt^(0+128),w
  2273  0EE4  0020               	movlb	0	; select bank0
  2274  0EE5  01A2               	clrf	___wmul@multiplicand
  2275  0EE6  07A2               	addwf	___wmul@multiplicand,f
  2276  0EE7  3197  2736  318E   	fcall	___wmul
  2277  0EEA  0020               	movlb	0	; select bank0
  2278  0EEB  0820               	movf	?___wmul,w
  2279  0EEC  0021               	movlb	1	; select bank1
  2280  0EED  075D               	addwf	(??_drawFrame+15)^(0+128),w
  2281  0EEE  0020               	movlb	0	; select bank0
  2282  0EEF  00A8               	movwf	___awdiv@dividend
  2283  0EF0  0821               	movf	?___wmul+1,w
  2284  0EF1  0021               	movlb	1	; select bank1
  2285  0EF2  3D5E               	addwfc	(??_drawFrame+16)^(0+128),w
  2286  0EF3  0020               	movlb	0	; select bank0
  2287  0EF4  00A9               	movwf	___awdiv@dividend+1
  2288  0EF5  3189  21D1  318E   	fcall	___awdiv
  2289  0EF8  0021               	movlb	1	; select bank1
  2290  0EF9  0854               	movf	(??_drawFrame+6)^(0+128),w
  2291  0EFA  0020               	movlb	0	; select bank0
  2292  0EFB  0726               	addwf	?___awdiv,w
  2293  0EFC  0022               	movlb	2	; select bank2
  2294  0EFD  00B6               	movwf	drawFrame@nextv^(0+256)
  2295  0EFE  0021               	movlb	1	; select bank1
  2296  0EFF  0855               	movf	(??_drawFrame+7)^(0+128),w
  2297  0F00  0020               	movlb	0	; select bank0
  2298  0F01  3D27               	addwfc	?___awdiv+1,w
  2299  0F02  0022               	movlb	2	; select bank2
  2300  0F03  00B7               	movwf	(drawFrame@nextv+1)^(0+256)
  2301                           
  2302                           ;fire.c: 194: colorHSV.v = (unsigned char)(((0) > (nextv)) ? (0) : (nextv));
  2303  0F04  1BB7               	btfsc	(drawFrame@nextv+1)^(0+256),7
  2304  0F05  2F0D               	goto	l3106
  2305  0F06  0837               	movf	(drawFrame@nextv+1)^(0+256),w
  2306  0F07  01B5               	clrf	(_drawFrame$728+1)^(0+256)
  2307  0F08  07B5               	addwf	(_drawFrame$728+1)^(0+256),f
  2308  0F09  0836               	movf	drawFrame@nextv^(0+256),w
  2309  0F0A  01B4               	clrf	_drawFrame$728^(0+256)
  2310  0F0B  07B4               	addwf	_drawFrame$728^(0+256),f
  2311  0F0C  2F0F               	goto	l3108
  2312  0F0D                     l3106:	
  2313  0F0D  01B4               	clrf	_drawFrame$728^(0+256)
  2314  0F0E  01B5               	clrf	(_drawFrame$728+1)^(0+256)
  2315  0F0F                     l3108:	
  2316  0F0F  0834               	movf	_drawFrame$728^(0+256),w
  2317  0F10  0021               	movlb	1	; select bank1
  2318  0F11  00CE               	movwf	??_drawFrame^(0+128)
  2319  0F12  084E               	movf	??_drawFrame^(0+128),w
  2320  0F13  0022               	movlb	2	; select bank2
  2321  0F14  00BD               	movwf	(drawFrame@colorHSV^(0+256)+2)
  2322                           
  2323                           ;fire.c: 196: HSVtoRGB(&colorRGB, &colorHSV);
  2324  0F15  303B               	movlw	drawFrame@colorHSV& (0+255)
  2325  0F16  0021               	movlb	1	; select bank1
  2326  0F17  00CE               	movwf	??_drawFrame^(0+128)
  2327  0F18  084E               	movf	??_drawFrame^(0+128),w
  2328  0F19  0020               	movlb	0	; select bank0
  2329  0F1A  00ED               	movwf	HSVtoRGB@vHSV
  2330  0F1B  303E               	movlw	drawFrame@colorRGB& (0+255)
  2331  0F1C  3181  2153  318E   	fcall	_HSVtoRGB
  2332                           
  2333                           ;fire.c: 197: setPixel(x, y, colorRGB.r, colorRGB.g, colorRGB.b);
  2334  0F1F  0022               	movlb	2	; select bank2
  2335  0F20  0839               	movf	drawFrame@y^(0+256),w
  2336  0F21  0021               	movlb	1	; select bank1
  2337  0F22  00CE               	movwf	??_drawFrame^(0+128)
  2338  0F23  084E               	movf	??_drawFrame^(0+128),w
  2339  0F24  0020               	movlb	0	; select bank0
  2340  0F25  00A9               	movwf	setPixel@y
  2341  0F26  0022               	movlb	2	; select bank2
  2342  0F27  083E               	movf	drawFrame@colorRGB^(0+256),w
  2343  0F28  0021               	movlb	1	; select bank1
  2344  0F29  00CF               	movwf	(??_drawFrame+1)^(0+128)
  2345  0F2A  084F               	movf	(??_drawFrame+1)^(0+128),w
  2346  0F2B  0020               	movlb	0	; select bank0
  2347  0F2C  00AA               	movwf	setPixel@colorR
  2348  0F2D  0022               	movlb	2	; select bank2
  2349  0F2E  083F               	movf	(drawFrame@colorRGB^(0+256)+1),w
  2350  0F2F  0021               	movlb	1	; select bank1
  2351  0F30  00D0               	movwf	(??_drawFrame+2)^(0+128)
  2352  0F31  0850               	movf	(??_drawFrame+2)^(0+128),w
  2353  0F32  0020               	movlb	0	; select bank0
  2354  0F33  00AB               	movwf	setPixel@colorG
  2355  0F34  0022               	movlb	2	; select bank2
  2356  0F35  0840               	movf	(drawFrame@colorRGB^(0+256)+2),w
  2357  0F36  0021               	movlb	1	; select bank1
  2358  0F37  00D1               	movwf	(??_drawFrame+3)^(0+128)
  2359  0F38  0851               	movf	(??_drawFrame+3)^(0+128),w
  2360  0F39  0020               	movlb	0	; select bank0
  2361  0F3A  00AC               	movwf	setPixel@colorB
  2362  0F3B  0022               	movlb	2	; select bank2
  2363  0F3C  083A               	movf	drawFrame@x^(0+256),w
  2364  0F3D  3187  27E6  318E   	fcall	_setPixel
  2365  0F40  3001               	movlw	1
  2366  0F41  0021               	movlb	1	; select bank1
  2367  0F42  00CE               	movwf	??_drawFrame^(0+128)
  2368  0F43  084E               	movf	??_drawFrame^(0+128),w
  2369  0F44  0022               	movlb	2	; select bank2
  2370  0F45  07BA               	addwf	drawFrame@x^(0+256),f
  2371  0F46  3008               	movlw	8
  2372  0F47  023A               	subwf	drawFrame@x^(0+256),w
  2373  0F48  1C03               	skipc
  2374  0F49  2E2F               	goto	l3096
  2375  0F4A                     l3118:	
  2376  0F4A  3001               	movlw	1
  2377  0F4B  02B9               	subwf	drawFrame@y^(0+256),f
  2378  0F4C  08B9               	movf	drawFrame@y^(0+256),f
  2379  0F4D  1D03               	skipz
  2380  0F4E  2E2A               	goto	l3090
  2381  0F4F                     l3122:	
  2382                           
  2383                           ;fire.c: 199: }
  2384                           ;fire.c: 200: }
  2385                           ;fire.c: 203: for(unsigned char x=0;x<8;x++) {
  2386  0F4F  01B8               	clrf	drawFrame@x_731^(0+256)
  2387  0F50                     L5:	
  2388  0F50  3008               	movlw	8
  2389  0F51  0238               	subwf	drawFrame@x_731^(0+256),w
  2390  0F52  1803               	btfsc	3,0
  2391  0F53  0008               	return
  2392                           
  2393                           ;fire.c: 204: colorHSV.h = hueMask[0][x];
  2394  0F54  0838               	movf	drawFrame@x_731^(0+256),w
  2395  0F55  3E00               	addlw	low (_hueMask| (0+32768))
  2396  0F56  0084               	movwf	4
  2397  0F57  3090               	movlw	high (_hueMask| (0+32768))
  2398  0F58  1803               	skipnc
  2399  0F59  3E01               	addlw	1
  2400  0F5A  0085               	movwf	5
  2401  0F5B  0800               	movf	0,w	;code access
  2402  0F5C  0021               	movlb	1	; select bank1
  2403  0F5D  00CE               	movwf	??_drawFrame^(0+128)
  2404  0F5E  084E               	movf	??_drawFrame^(0+128),w
  2405  0F5F  0022               	movlb	2	; select bank2
  2406  0F60  00BB               	movwf	drawFrame@colorHSV^(0+256)
  2407                           
  2408                           ;fire.c: 205: colorHSV.s = 255;
  2409  0F61  30FF               	movlw	255
  2410  0F62  0021               	movlb	1	; select bank1
  2411  0F63  00CE               	movwf	??_drawFrame^(0+128)
  2412  0F64  084E               	movf	??_drawFrame^(0+128),w
  2413  0F65  0022               	movlb	2	; select bank2
  2414  0F66  00BC               	movwf	(drawFrame@colorHSV^(0+256)+1)
  2415                           
  2416                           ;fire.c: 206: colorHSV.v = (unsigned char)(((100-pcnt)*matrix[x][0] + pcnt*line[x])/100)
      +                          ;
  2417  0F67  3064               	movlw	100
  2418  0F68  0020               	movlb	0	; select bank0
  2419  0F69  00A6               	movwf	___awdiv@divisor
  2420  0F6A  3000               	movlw	0
  2421  0F6B  00A7               	movwf	___awdiv@divisor+1
  2422  0F6C  0021               	movlb	1	; select bank1
  2423  0F6D  094C               	comf	drawFrame@pcnt^(0+128),w
  2424  0F6E  00CE               	movwf	??_drawFrame^(0+128)
  2425  0F6F  094D               	comf	(drawFrame@pcnt+1)^(0+128),w
  2426  0F70  00CF               	movwf	(??_drawFrame^(0+128)+1)
  2427  0F71  0ACE               	incf	??_drawFrame^(0+128),f
  2428  0F72  1903               	skipnz
  2429  0F73  0ACF               	incf	(??_drawFrame^(0+128)+1),f
  2430  0F74  084E               	movf	??_drawFrame^(0+128),w
  2431  0F75  3E64               	addlw	100
  2432  0F76  0020               	movlb	0	; select bank0
  2433  0F77  00A0               	movwf	___wmul@multiplier
  2434  0F78  3000               	movlw	0
  2435  0F79  0021               	movlb	1	; select bank1
  2436  0F7A  3D4F               	addwfc	(??_drawFrame+1)^(0+128),w
  2437  0F7B  0020               	movlb	0	; select bank0
  2438  0F7C  00A1               	movwf	___wmul@multiplier+1
  2439  0F7D  0022               	movlb	2	; select bank2
  2440  0F7E  0838               	movf	drawFrame@x_731^(0+256),w
  2441  0F7F  0021               	movlb	1	; select bank1
  2442  0F80  00D0               	movwf	(??_drawFrame+2)^(0+128)
  2443  0F81  3002               	movlw	2
  2444  0F82                     u3455:	
  2445  0F82  35D0               	lslf	(??_drawFrame+2)^(0+128),f
  2446  0F83  3EFF               	addlw	-1
  2447  0F84  1D03               	skipz
  2448  0F85  2F82               	goto	u3455
  2449  0F86  3550               	lslf	(??_drawFrame+2)^(0+128),w
  2450  0F87  3EA0               	addlw	_matrix& (0+255)
  2451  0F88  0086               	movwf	6
  2452  0F89  3001               	movlw	1	; select bank3/4
  2453  0F8A  0087               	movwf	7
  2454  0F8B  0801               	movf	1,w
  2455  0F8C  00D1               	movwf	(??_drawFrame+3)^(0+128)
  2456  0F8D  01D2               	clrf	((??_drawFrame+3)^(0+128)+1)
  2457  0F8E  0851               	movf	(??_drawFrame+3)^(0+128),w
  2458  0F8F  0020               	movlb	0	; select bank0
  2459  0F90  00A2               	movwf	___wmul@multiplicand
  2460  0F91  0021               	movlb	1	; select bank1
  2461  0F92  0852               	movf	(??_drawFrame+4)^(0+128),w
  2462  0F93  0020               	movlb	0	; select bank0
  2463  0F94  00A3               	movwf	___wmul@multiplicand+1
  2464  0F95  3197  2736  318E   	fcall	___wmul
  2465  0F98  0020               	movlb	0	; select bank0
  2466  0F99  0820               	movf	?___wmul,w
  2467  0F9A  0021               	movlb	1	; select bank1
  2468  0F9B  00D3               	movwf	(??_drawFrame+5)^(0+128)
  2469  0F9C  0020               	movlb	0	; select bank0
  2470  0F9D  0821               	movf	?___wmul+1,w
  2471  0F9E  0021               	movlb	1	; select bank1
  2472  0F9F  00D4               	movwf	((??_drawFrame+5)^(0+128)+1)
  2473  0FA0  0022               	movlb	2	; select bank2
  2474  0FA1  0838               	movf	drawFrame@x_731^(0+256),w
  2475  0FA2  3E20               	addlw	_line& (0+255)
  2476  0FA3  0086               	movwf	6
  2477  0FA4  3001               	movlw	1	; select bank2/3
  2478  0FA5  0087               	movwf	7
  2479  0FA6  0801               	movf	1,w
  2480  0FA7  0021               	movlb	1	; select bank1
  2481  0FA8  00D5               	movwf	(??_drawFrame+7)^(0+128)
  2482  0FA9  01D6               	clrf	((??_drawFrame+7)^(0+128)+1)
  2483  0FAA  0855               	movf	(??_drawFrame+7)^(0+128),w
  2484  0FAB  0020               	movlb	0	; select bank0
  2485  0FAC  00A0               	movwf	___wmul@multiplier
  2486  0FAD  0021               	movlb	1	; select bank1
  2487  0FAE  0856               	movf	(??_drawFrame+8)^(0+128),w
  2488  0FAF  0020               	movlb	0	; select bank0
  2489  0FB0  00A1               	movwf	___wmul@multiplier+1
  2490  0FB1  0021               	movlb	1	; select bank1
  2491  0FB2  084D               	movf	(drawFrame@pcnt+1)^(0+128),w
  2492  0FB3  0020               	movlb	0	; select bank0
  2493  0FB4  01A3               	clrf	___wmul@multiplicand+1
  2494  0FB5  07A3               	addwf	___wmul@multiplicand+1,f
  2495  0FB6  0021               	movlb	1	; select bank1
  2496  0FB7  084C               	movf	drawFrame@pcnt^(0+128),w
  2497  0FB8  0020               	movlb	0	; select bank0
  2498  0FB9  01A2               	clrf	___wmul@multiplicand
  2499  0FBA  07A2               	addwf	___wmul@multiplicand,f
  2500  0FBB  3197  2736  318E   	fcall	___wmul
  2501  0FBE  0020               	movlb	0	; select bank0
  2502  0FBF  0820               	movf	?___wmul,w
  2503  0FC0  0021               	movlb	1	; select bank1
  2504  0FC1  0753               	addwf	(??_drawFrame+5)^(0+128),w
  2505  0FC2  0020               	movlb	0	; select bank0
  2506  0FC3  00A8               	movwf	___awdiv@dividend
  2507  0FC4  0821               	movf	?___wmul+1,w
  2508  0FC5  0021               	movlb	1	; select bank1
  2509  0FC6  3D54               	addwfc	(??_drawFrame+6)^(0+128),w
  2510  0FC7  0020               	movlb	0	; select bank0
  2511  0FC8  00A9               	movwf	___awdiv@dividend+1
  2512  0FC9  3189  21D1  318E   	fcall	___awdiv
  2513  0FCC  0020               	movlb	0	; select bank0
  2514  0FCD  0826               	movf	?___awdiv,w
  2515  0FCE  0021               	movlb	1	; select bank1
  2516  0FCF  00D7               	movwf	(??_drawFrame+9)^(0+128)
  2517  0FD0  0857               	movf	(??_drawFrame+9)^(0+128),w
  2518  0FD1  0022               	movlb	2	; select bank2
  2519  0FD2  00BD               	movwf	(drawFrame@colorHSV^(0+256)+2)
  2520                           
  2521                           ;fire.c: 208: HSVtoRGB(&colorRGB, &colorHSV);
  2522  0FD3  303B               	movlw	drawFrame@colorHSV& (0+255)
  2523  0FD4  0021               	movlb	1	; select bank1
  2524  0FD5  00CE               	movwf	??_drawFrame^(0+128)
  2525  0FD6  084E               	movf	??_drawFrame^(0+128),w
  2526  0FD7  0020               	movlb	0	; select bank0
  2527  0FD8  00ED               	movwf	HSVtoRGB@vHSV
  2528  0FD9  303E               	movlw	drawFrame@colorRGB& (0+255)
  2529  0FDA  3181  2153  318E   	fcall	_HSVtoRGB
  2530                           
  2531                           ;fire.c: 209: setPixel(x, 0, colorRGB.r, colorRGB.g, colorRGB.b);
  2532  0FDD  0020               	movlb	0	; select bank0
  2533  0FDE  01A9               	clrf	setPixel@y
  2534  0FDF  0022               	movlb	2	; select bank2
  2535  0FE0  083E               	movf	drawFrame@colorRGB^(0+256),w
  2536  0FE1  0021               	movlb	1	; select bank1
  2537  0FE2  00CE               	movwf	??_drawFrame^(0+128)
  2538  0FE3  084E               	movf	??_drawFrame^(0+128),w
  2539  0FE4  0020               	movlb	0	; select bank0
  2540  0FE5  00AA               	movwf	setPixel@colorR
  2541  0FE6  0022               	movlb	2	; select bank2
  2542  0FE7  083F               	movf	(drawFrame@colorRGB^(0+256)+1),w
  2543  0FE8  0021               	movlb	1	; select bank1
  2544  0FE9  00CF               	movwf	(??_drawFrame+1)^(0+128)
  2545  0FEA  084F               	movf	(??_drawFrame+1)^(0+128),w
  2546  0FEB  0020               	movlb	0	; select bank0
  2547  0FEC  00AB               	movwf	setPixel@colorG
  2548  0FED  0022               	movlb	2	; select bank2
  2549  0FEE  0840               	movf	(drawFrame@colorRGB^(0+256)+2),w
  2550  0FEF  0021               	movlb	1	; select bank1
  2551  0FF0  00D0               	movwf	(??_drawFrame+2)^(0+128)
  2552  0FF1  0850               	movf	(??_drawFrame+2)^(0+128),w
  2553  0FF2  0020               	movlb	0	; select bank0
  2554  0FF3  00AC               	movwf	setPixel@colorB
  2555  0FF4  0022               	movlb	2	; select bank2
  2556  0FF5  0838               	movf	drawFrame@x_731^(0+256),w
  2557  0FF6  3187  27E6  318E   	fcall	_setPixel
  2558  0FF9  3001               	movlw	1
  2559  0FFA  0021               	movlb	1	; select bank1
  2560  0FFB  00CE               	movwf	??_drawFrame^(0+128)
  2561  0FFC  084E               	movf	??_drawFrame^(0+128),w
  2562  0FFD  0022               	movlb	2	; select bank2
  2563  0FFE  07B8               	addwf	drawFrame@x_731^(0+256),f
  2564  0FFF  2F50               	goto	L5
  2565  1000                     __end_of_drawFrame:	
  2566                           
  2567                           	psect	text4
  2568  07E6                     __ptext4:	
  2569 ;; *************** function _setPixel *****************
  2570 ;; Defined at:
  2571 ;;		line 145 in file "../fire.c"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;  x               1    wreg     unsigned char 
  2574 ;;  y               1    9[BANK0 ] unsigned char 
  2575 ;;  colorR          1   10[BANK0 ] unsigned char 
  2576 ;;  colorG          1   11[BANK0 ] unsigned char 
  2577 ;;  colorB          1   12[BANK0 ] unsigned char 
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;  x               1   17[BANK0 ] unsigned char 
  2580 ;; Return value:  Size  Location     Type
  2581 ;;		None               void
  2582 ;; Registers used:
  2583 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2589 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2590 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2591 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2592 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2593 ;;Total ram usage:        9 bytes
  2594 ;; Hardware stack levels used:    1
  2595 ;; Hardware stack levels required when called:    2
  2596 ;; This function calls:
  2597 ;;		_bitmapPutPixel
  2598 ;; This function is called by:
  2599 ;;		_drawFrame
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           
  2604                           ;psect for function _setPixel
  2605  07E6                     _setPixel:	
  2606                           
  2607                           ;incstack = 0
  2608                           ; Regs used in _setPixel: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2609                           ;setPixel@x stored from wreg
  2610  07E6  0020               	movlb	0	; select bank0
  2611  07E7  00B1               	movwf	setPixel@x
  2612                           
  2613                           ;fire.c: 147: bitmapPutPixel(8-y-1, x, colorR, colorG, colorB);
  2614  07E8  0831               	movf	setPixel@x,w
  2615  07E9  00AD               	movwf	??_setPixel
  2616  07EA  082D               	movf	??_setPixel,w
  2617  07EB  00A0               	movwf	bitmapPutPixel@y
  2618  07EC  082A               	movf	setPixel@colorR,w
  2619  07ED  00AE               	movwf	??_setPixel+1
  2620  07EE  082E               	movf	??_setPixel+1,w
  2621  07EF  00A1               	movwf	bitmapPutPixel@r
  2622  07F0  082B               	movf	setPixel@colorG,w
  2623  07F1  00AF               	movwf	??_setPixel+2
  2624  07F2  082F               	movf	??_setPixel+2,w
  2625  07F3  00A2               	movwf	bitmapPutPixel@g
  2626  07F4  082C               	movf	setPixel@colorB,w
  2627  07F5  00B0               	movwf	??_setPixel+3
  2628  07F6  0830               	movf	??_setPixel+3,w
  2629  07F7  00A3               	movwf	bitmapPutPixel@b
  2630  07F8  0829               	movf	setPixel@y,w
  2631  07F9  3E01               	addlw	1
  2632  07FA  3AFF               	xorlw	255
  2633  07FB  3E01               	addlw	1
  2634  07FC  3E08               	addlw	8
  2635  07FD  3189  2185         	fcall	_bitmapPutPixel
  2636  07FF  0008               	return
  2637  0800                     __end_of_setPixel:	
  2638                           
  2639                           	psect	text5
  2640  1736                     __ptext5:	
  2641 ;; *************** function ___wmul *****************
  2642 ;; Defined at:
  2643 ;;		line 15 in file "/Applications/microchip/xc8/v1.32/sources/common/Umul16.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2646 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;  product         2    4[BANK0 ] unsigned int 
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  2    0[BANK0 ] unsigned int 
  2651 ;; Registers used:
  2652 ;;		wreg, status,2, status,0
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2658 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2659 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2661 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2662 ;;Total ram usage:        6 bytes
  2663 ;; Hardware stack levels used:    1
  2664 ;; Hardware stack levels required when called:    1
  2665 ;; This function calls:
  2666 ;;		Nothing
  2667 ;; This function is called by:
  2668 ;;		_drawFrame
  2669 ;;		_HSL_to_RGB
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           
  2674                           ;psect for function ___wmul
  2675  1736                     ___wmul:	
  2676                           
  2677                           ;incstack = 0
  2678                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2679  1736  0020               	movlb	0	; select bank0
  2680  1737  01A4               	clrf	___wmul@product
  2681  1738  01A5               	clrf	___wmul@product+1
  2682  1739                     l2950:	
  2683  1739  1C20               	btfss	___wmul@multiplier,0
  2684  173A  2F3F               	goto	l513
  2685  173B  0822               	movf	___wmul@multiplicand,w
  2686  173C  07A4               	addwf	___wmul@product,f
  2687  173D  0823               	movf	___wmul@multiplicand+1,w
  2688  173E  3DA5               	addwfc	___wmul@product+1,f
  2689  173F                     l513:	
  2690  173F  3001               	movlw	1
  2691  1740                     u3075:	
  2692  1740  35A2               	lslf	___wmul@multiplicand,f
  2693  1741  0DA3               	rlf	___wmul@multiplicand+1,f
  2694  1742  0B89               	decfsz	9,f
  2695  1743  2F40               	goto	u3075
  2696  1744  3001               	movlw	1
  2697  1745                     u3085:	
  2698  1745  36A1               	lsrf	___wmul@multiplier+1,f
  2699  1746  0CA0               	rrf	___wmul@multiplier,f
  2700  1747  0B89               	decfsz	9,f
  2701  1748  2F45               	goto	u3085
  2702  1749  0821               	movf	___wmul@multiplier+1,w
  2703  174A  0420               	iorwf	___wmul@multiplier,w
  2704  174B  1D03               	skipz
  2705  174C  2F39               	goto	l2950
  2706  174D  0825               	movf	___wmul@product+1,w
  2707  174E  01A1               	clrf	?___wmul+1
  2708  174F  07A1               	addwf	?___wmul+1,f
  2709  1750  0824               	movf	___wmul@product,w
  2710  1751  01A0               	clrf	?___wmul
  2711  1752  07A0               	addwf	?___wmul,f
  2712  1753  0008               	return
  2713  1754                     __end_of___wmul:	
  2714                           
  2715                           	psect	text6
  2716  0153                     __ptext6:	
  2717 ;; *************** function _HSVtoRGB *****************
  2718 ;; Defined at:
  2719 ;;		line 56 in file "../fire.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;  vRGB            1    wreg     PTR void 
  2722 ;;		 -> drawFrame@colorRGB(3), 
  2723 ;;  vHSV            1   77[BANK0 ] PTR void 
  2724 ;;		 -> drawFrame@colorHSV(3), 
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;  vRGB            1   14[BANK1 ] PTR void 
  2727 ;;		 -> drawFrame@colorRGB(3), 
  2728 ;;  v               3   41[BANK1 ] float 
  2729 ;;  p               3   38[BANK1 ] float 
  2730 ;;  s               3   35[BANK1 ] float 
  2731 ;;  b               3   32[BANK1 ] float 
  2732 ;;  g               3   29[BANK1 ] float 
  2733 ;;  h               3   24[BANK1 ] float 
  2734 ;;  t               3   21[BANK1 ] float 
  2735 ;;  q               3   18[BANK1 ] float 
  2736 ;;  r               3   15[BANK1 ] float 
  2737 ;;  f               3    9[BANK1 ] float 
  2738 ;;  i               2   12[BANK1 ] int 
  2739 ;;  colorHSV        1   28[BANK1 ] PTR struct .
  2740 ;;		 -> drawFrame@colorHSV(3), 
  2741 ;;  colorRGB        1   27[BANK1 ] PTR struct .
  2742 ;;		 -> drawFrame@colorRGB(3), 
  2743 ;; Return value:  Size  Location     Type
  2744 ;;		None               void
  2745 ;; Registers used:
  2746 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2752 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2753 ;;      Locals:         0       0      44       0       0       0       0       0       0       0       0       0       
      +0       0
  2754 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2755 ;;      Totals:         0       2      44       0       0       0       0       0       0       0       0       0       
      +0       0
  2756 ;;Total ram usage:       46 bytes
  2757 ;; Hardware stack levels used:    1
  2758 ;; Hardware stack levels required when called:    4
  2759 ;; This function calls:
  2760 ;;		___awtoft
  2761 ;;		___ftadd
  2762 ;;		___ftdiv
  2763 ;;		___ftmul
  2764 ;;		___ftneg
  2765 ;;		___fttol
  2766 ;;		___lbtoft
  2767 ;;		_floor
  2768 ;; This function is called by:
  2769 ;;		_drawFrame
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           
  2774                           ;psect for function _HSVtoRGB
  2775  0153                     _HSVtoRGB:	
  2776                           
  2777                           ;incstack = 0
  2778                           ; Regs used in _HSVtoRGB: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2779                           ;HSVtoRGB@vRGB stored from wreg
  2780  0153  0021               	movlb	1	; select bank1
  2781  0154  00AE               	movwf	HSVtoRGB@vRGB^(0+128)
  2782                           
  2783                           ;fire.c: 58: ColorRGB *colorRGB=(ColorRGB *)vRGB;
  2784  0155  082E               	movf	HSVtoRGB@vRGB^(0+128),w
  2785  0156  0020               	movlb	0	; select bank0
  2786  0157  00EE               	movwf	??_HSVtoRGB
  2787  0158  086E               	movf	??_HSVtoRGB,w
  2788  0159  0021               	movlb	1	; select bank1
  2789  015A  00BB               	movwf	HSVtoRGB@colorRGB^(0+128)
  2790                           
  2791                           ;fire.c: 59: ColorHSV *colorHSV=(ColorHSV *)vHSV;
  2792  015B  0020               	movlb	0	; select bank0
  2793  015C  086D               	movf	HSVtoRGB@vHSV,w
  2794  015D  00EE               	movwf	??_HSVtoRGB
  2795  015E  086E               	movf	??_HSVtoRGB,w
  2796  015F  0021               	movlb	1	; select bank1
  2797  0160  00BC               	movwf	HSVtoRGB@colorHSV^(0+128)
  2798                           
  2799                           ;fire.c: 61: float r, g, b, h, s, v;
  2800                           ;fire.c: 62: float f, p, q, t;
  2801                           ;fire.c: 63: int i;
  2802                           ;fire.c: 65: h = (float)(colorHSV->h / 256.0);
  2803  0161  3000               	movlw	0
  2804  0162  0020               	movlb	0	; select bank0
  2805  0163  00B0               	movwf	___ftdiv@f2
  2806  0164  3080               	movlw	128
  2807  0165  00B1               	movwf	___ftdiv@f2+1
  2808  0166  3043               	movlw	67
  2809  0167  00B2               	movwf	___ftdiv@f2+2
  2810  0168  0021               	movlb	1	; select bank1
  2811  0169  083C               	movf	HSVtoRGB@colorHSV^(0+128),w
  2812  016A  0086               	movwf	6
  2813  016B  3001               	movlw	1	; select bank2/3
  2814  016C  0087               	movwf	7
  2815  016D  0801               	movf	1,w
  2816  016E  3197  271B  3181   	fcall	___lbtoft
  2817  0171  0020               	movlb	0	; select bank0
  2818  0172  0828               	movf	?___lbtoft,w
  2819  0173  00B3               	movwf	___ftdiv@f1
  2820  0174  0829               	movf	?___lbtoft+1,w
  2821  0175  00B4               	movwf	___ftdiv@f1+1
  2822  0176  082A               	movf	?___lbtoft+2,w
  2823  0177  00B5               	movwf	___ftdiv@f1+2
  2824  0178  318C  24C4  3181   	fcall	___ftdiv
  2825  017B  0020               	movlb	0	; select bank0
  2826  017C  0830               	movf	?___ftdiv,w
  2827  017D  0021               	movlb	1	; select bank1
  2828  017E  00B8               	movwf	HSVtoRGB@h^(0+128)
  2829  017F  0020               	movlb	0	; select bank0
  2830  0180  0831               	movf	?___ftdiv+1,w
  2831  0181  0021               	movlb	1	; select bank1
  2832  0182  00B9               	movwf	(HSVtoRGB@h+1)^(0+128)
  2833  0183  0020               	movlb	0	; select bank0
  2834  0184  0832               	movf	?___ftdiv+2,w
  2835  0185  0021               	movlb	1	; select bank1
  2836  0186  00BA               	movwf	(HSVtoRGB@h+2)^(0+128)
  2837                           
  2838                           ;fire.c: 66: s = (float)(colorHSV->s / 256.0);
  2839  0187  3000               	movlw	0
  2840  0188  0020               	movlb	0	; select bank0
  2841  0189  00B0               	movwf	___ftdiv@f2
  2842  018A  3080               	movlw	128
  2843  018B  00B1               	movwf	___ftdiv@f2+1
  2844  018C  3043               	movlw	67
  2845  018D  00B2               	movwf	___ftdiv@f2+2
  2846  018E  0021               	movlb	1	; select bank1
  2847  018F  0A3C               	incf	HSVtoRGB@colorHSV^(0+128),w
  2848  0190  0086               	movwf	6
  2849  0191  3001               	movlw	1	; select bank2/3
  2850  0192  0087               	movwf	7
  2851  0193  0801               	movf	1,w
  2852  0194  3197  271B  3181   	fcall	___lbtoft
  2853  0197  0020               	movlb	0	; select bank0
  2854  0198  0828               	movf	?___lbtoft,w
  2855  0199  00B3               	movwf	___ftdiv@f1
  2856  019A  0829               	movf	?___lbtoft+1,w
  2857  019B  00B4               	movwf	___ftdiv@f1+1
  2858  019C  082A               	movf	?___lbtoft+2,w
  2859  019D  00B5               	movwf	___ftdiv@f1+2
  2860  019E  318C  24C4  3181   	fcall	___ftdiv
  2861  01A1  0020               	movlb	0	; select bank0
  2862  01A2  0830               	movf	?___ftdiv,w
  2863  01A3  0021               	movlb	1	; select bank1
  2864  01A4  00C3               	movwf	HSVtoRGB@s^(0+128)
  2865  01A5  0020               	movlb	0	; select bank0
  2866  01A6  0831               	movf	?___ftdiv+1,w
  2867  01A7  0021               	movlb	1	; select bank1
  2868  01A8  00C4               	movwf	(HSVtoRGB@s+1)^(0+128)
  2869  01A9  0020               	movlb	0	; select bank0
  2870  01AA  0832               	movf	?___ftdiv+2,w
  2871  01AB  0021               	movlb	1	; select bank1
  2872  01AC  00C5               	movwf	(HSVtoRGB@s+2)^(0+128)
  2873                           
  2874                           ;fire.c: 67: v = (float)(colorHSV->v / 256.0);
  2875  01AD  3000               	movlw	0
  2876  01AE  0020               	movlb	0	; select bank0
  2877  01AF  00B0               	movwf	___ftdiv@f2
  2878  01B0  3080               	movlw	128
  2879  01B1  00B1               	movwf	___ftdiv@f2+1
  2880  01B2  3043               	movlw	67
  2881  01B3  00B2               	movwf	___ftdiv@f2+2
  2882  01B4  0021               	movlb	1	; select bank1
  2883  01B5  083C               	movf	HSVtoRGB@colorHSV^(0+128),w
  2884  01B6  3E02               	addlw	2
  2885  01B7  0086               	movwf	6
  2886  01B8  3001               	movlw	1	; select bank2/3
  2887  01B9  0087               	movwf	7
  2888  01BA  0801               	movf	1,w
  2889  01BB  3197  271B  3181   	fcall	___lbtoft
  2890  01BE  0020               	movlb	0	; select bank0
  2891  01BF  0828               	movf	?___lbtoft,w
  2892  01C0  00B3               	movwf	___ftdiv@f1
  2893  01C1  0829               	movf	?___lbtoft+1,w
  2894  01C2  00B4               	movwf	___ftdiv@f1+1
  2895  01C3  082A               	movf	?___lbtoft+2,w
  2896  01C4  00B5               	movwf	___ftdiv@f1+2
  2897  01C5  318C  24C4  3181   	fcall	___ftdiv
  2898  01C8  0020               	movlb	0	; select bank0
  2899  01C9  0830               	movf	?___ftdiv,w
  2900  01CA  0021               	movlb	1	; select bank1
  2901  01CB  00C9               	movwf	HSVtoRGB@v^(0+128)
  2902  01CC  0020               	movlb	0	; select bank0
  2903  01CD  0831               	movf	?___ftdiv+1,w
  2904  01CE  0021               	movlb	1	; select bank1
  2905  01CF  00CA               	movwf	(HSVtoRGB@v+1)^(0+128)
  2906  01D0  0020               	movlb	0	; select bank0
  2907  01D1  0832               	movf	?___ftdiv+2,w
  2908  01D2  0021               	movlb	1	; select bank1
  2909  01D3  00CB               	movwf	(HSVtoRGB@v+2)^(0+128)
  2910                           
  2911                           ;fire.c: 70: if(s == 0.0) {
  2912  01D4  0845               	movf	(HSVtoRGB@s+2)^(0+128),w
  2913  01D5  0444               	iorwf	(HSVtoRGB@s+1)^(0+128),w
  2914  01D6  0443               	iorwf	HSVtoRGB@s^(0+128),w
  2915  01D7  1D03               	skipz
  2916  01D8  29DF               	goto	l2900
  2917                           
  2918                           ;fire.c: 71: b = v;
  2919  01D9  0849               	movf	HSVtoRGB@v^(0+128),w
  2920  01DA  00C0               	movwf	HSVtoRGB@b^(0+128)
  2921  01DB  084A               	movf	(HSVtoRGB@v+1)^(0+128),w
  2922  01DC  00C1               	movwf	(HSVtoRGB@b+1)^(0+128)
  2923  01DD  084B               	movf	(HSVtoRGB@v+2)^(0+128),w
  2924  01DE  2BFA               	goto	L6
  2925  01DF                     l2900:	
  2926                           ;fire.c: 74: }
  2927                           
  2928                           ;fire.c: 73: r = g;
  2929                           
  2930                           ;fire.c: 72: g = b;
  2931                           
  2932                           
  2933                           ;fire.c: 76: else
  2934                           ;fire.c: 77: {
  2935                           ;fire.c: 78: h *= 6.0;
  2936  01DF  3000               	movlw	0
  2937  01E0  0020               	movlb	0	; select bank0
  2938  01E1  00BE               	movwf	___ftmul@f1
  2939  01E2  30C0               	movlw	192
  2940  01E3  00BF               	movwf	___ftmul@f1+1
  2941  01E4  3040               	movlw	64
  2942  01E5  00C0               	movwf	___ftmul@f1+2
  2943  01E6  0021               	movlb	1	; select bank1
  2944  01E7  0838               	movf	HSVtoRGB@h^(0+128),w
  2945  01E8  0020               	movlb	0	; select bank0
  2946  01E9  00C1               	movwf	___ftmul@f2
  2947  01EA  0021               	movlb	1	; select bank1
  2948  01EB  0839               	movf	(HSVtoRGB@h+1)^(0+128),w
  2949  01EC  0020               	movlb	0	; select bank0
  2950  01ED  00C2               	movwf	___ftmul@f2+1
  2951  01EE  0021               	movlb	1	; select bank1
  2952  01EF  083A               	movf	(HSVtoRGB@h+2)^(0+128),w
  2953  01F0  0020               	movlb	0	; select bank0
  2954  01F1  00C3               	movwf	___ftmul@f2+2
  2955  01F2  318D  256D  3181   	fcall	___ftmul
  2956  01F5  0020               	movlb	0	; select bank0
  2957  01F6  083E               	movf	?___ftmul,w
  2958  01F7  0021               	movlb	1	; select bank1
  2959  01F8  00B8               	movwf	HSVtoRGB@h^(0+128)
  2960  01F9  0020               	movlb	0	; select bank0
  2961  01FA  083F               	movf	?___ftmul+1,w
  2962  01FB  0021               	movlb	1	; select bank1
  2963  01FC  00B9               	movwf	(HSVtoRGB@h+1)^(0+128)
  2964  01FD  0020               	movlb	0	; select bank0
  2965  01FE  0840               	movf	?___ftmul+2,w
  2966  01FF  0021               	movlb	1	; select bank1
  2967  0200  00BA               	movwf	(HSVtoRGB@h+2)^(0+128)
  2968                           
  2969                           ;fire.c: 79: i = (int)(floor(h));
  2970  0201  0838               	movf	HSVtoRGB@h^(0+128),w
  2971  0202  0020               	movlb	0	; select bank0
  2972  0203  00E4               	movwf	floor@x
  2973  0204  0021               	movlb	1	; select bank1
  2974  0205  0839               	movf	(HSVtoRGB@h+1)^(0+128),w
  2975  0206  0020               	movlb	0	; select bank0
  2976  0207  00E5               	movwf	floor@x+1
  2977  0208  0021               	movlb	1	; select bank1
  2978  0209  083A               	movf	(HSVtoRGB@h+2)^(0+128),w
  2979  020A  0020               	movlb	0	; select bank0
  2980  020B  00E6               	movwf	floor@x+2
  2981  020C  318B  23B8  3181   	fcall	_floor
  2982  020F  0020               	movlb	0	; select bank0
  2983  0210  0864               	movf	?_floor,w
  2984  0211  0021               	movlb	1	; select bank1
  2985  0212  00A0               	movwf	_HSVtoRGB$1186^(0+128)
  2986  0213  0020               	movlb	0	; select bank0
  2987  0214  0865               	movf	?_floor+1,w
  2988  0215  0021               	movlb	1	; select bank1
  2989  0216  00A1               	movwf	(_HSVtoRGB$1186+1)^(0+128)
  2990  0217  0020               	movlb	0	; select bank0
  2991  0218  0866               	movf	?_floor+2,w
  2992  0219  0021               	movlb	1	; select bank1
  2993  021A  00A2               	movwf	(_HSVtoRGB$1186+2)^(0+128)
  2994                           
  2995                           ;fire.c: 79: i = (int)(floor(h));
  2996  021B  0820               	movf	_HSVtoRGB$1186^(0+128),w
  2997  021C  0020               	movlb	0	; select bank0
  2998  021D  00CE               	movwf	___fttol@f1
  2999  021E  0021               	movlb	1	; select bank1
  3000  021F  0821               	movf	(_HSVtoRGB$1186+1)^(0+128),w
  3001  0220  0020               	movlb	0	; select bank0
  3002  0221  00CF               	movwf	___fttol@f1+1
  3003  0222  0021               	movlb	1	; select bank1
  3004  0223  0822               	movf	(_HSVtoRGB$1186+2)^(0+128),w
  3005  0224  0020               	movlb	0	; select bank0
  3006  0225  00D0               	movwf	___fttol@f1+2
  3007  0226  318C  243D  3181   	fcall	___fttol
  3008  0229  0020               	movlb	0	; select bank0
  3009  022A  084F               	movf	?___fttol+1,w
  3010  022B  0021               	movlb	1	; select bank1
  3011  022C  01AD               	clrf	(HSVtoRGB@i+1)^(0+128)
  3012  022D  07AD               	addwf	(HSVtoRGB@i+1)^(0+128),f
  3013  022E  0020               	movlb	0	; select bank0
  3014  022F  084E               	movf	?___fttol,w
  3015  0230  0021               	movlb	1	; select bank1
  3016  0231  01AC               	clrf	HSVtoRGB@i^(0+128)
  3017  0232  07AC               	addwf	HSVtoRGB@i^(0+128),f
  3018                           
  3019                           ;fire.c: 80: f = h - i;
  3020  0233  0838               	movf	HSVtoRGB@h^(0+128),w
  3021  0234  0020               	movlb	0	; select bank0
  3022  0235  00B1               	movwf	___ftadd@f1
  3023  0236  0021               	movlb	1	; select bank1
  3024  0237  0839               	movf	(HSVtoRGB@h+1)^(0+128),w
  3025  0238  0020               	movlb	0	; select bank0
  3026  0239  00B2               	movwf	___ftadd@f1+1
  3027  023A  0021               	movlb	1	; select bank1
  3028  023B  083A               	movf	(HSVtoRGB@h+2)^(0+128),w
  3029  023C  0020               	movlb	0	; select bank0
  3030  023D  00B3               	movwf	___ftadd@f1+2
  3031  023E  0021               	movlb	1	; select bank1
  3032  023F  082D               	movf	(HSVtoRGB@i+1)^(0+128),w
  3033  0240  0020               	movlb	0	; select bank0
  3034  0241  01A9               	clrf	___awtoft@c+1
  3035  0242  07A9               	addwf	___awtoft@c+1,f
  3036  0243  0021               	movlb	1	; select bank1
  3037  0244  082C               	movf	HSVtoRGB@i^(0+128),w
  3038  0245  0020               	movlb	0	; select bank0
  3039  0246  01A8               	clrf	___awtoft@c
  3040  0247  07A8               	addwf	___awtoft@c,f
  3041  0248  3197  2754  3181   	fcall	___awtoft
  3042  024B  0020               	movlb	0	; select bank0
  3043  024C  0828               	movf	?___awtoft,w
  3044  024D  00AE               	movwf	___ftneg@f1
  3045  024E  0829               	movf	?___awtoft+1,w
  3046  024F  00AF               	movwf	___ftneg@f1+1
  3047  0250  082A               	movf	?___awtoft+2,w
  3048  0251  00B0               	movwf	___ftneg@f1+2
  3049  0252  3188  2001  3181   	fcall	___ftneg
  3050  0255  0020               	movlb	0	; select bank0
  3051  0256  082E               	movf	?___ftneg,w
  3052  0257  00B4               	movwf	___ftadd@f2
  3053  0258  082F               	movf	?___ftneg+1,w
  3054  0259  00B5               	movwf	___ftadd@f2+1
  3055  025A  0830               	movf	?___ftneg+2,w
  3056  025B  00B6               	movwf	___ftadd@f2+2
  3057  025C  3186  268F  3181   	fcall	___ftadd
  3058  025F  0020               	movlb	0	; select bank0
  3059  0260  0831               	movf	?___ftadd,w
  3060  0261  0021               	movlb	1	; select bank1
  3061  0262  00A9               	movwf	HSVtoRGB@f^(0+128)
  3062  0263  0020               	movlb	0	; select bank0
  3063  0264  0832               	movf	?___ftadd+1,w
  3064  0265  0021               	movlb	1	; select bank1
  3065  0266  00AA               	movwf	(HSVtoRGB@f+1)^(0+128)
  3066  0267  0020               	movlb	0	; select bank0
  3067  0268  0833               	movf	?___ftadd+2,w
  3068  0269  0021               	movlb	1	; select bank1
  3069  026A  00AB               	movwf	(HSVtoRGB@f+2)^(0+128)
  3070                           
  3071                           ;fire.c: 82: p = (float)(v * (1.0 - s));
  3072  026B  0849               	movf	HSVtoRGB@v^(0+128),w
  3073  026C  0020               	movlb	0	; select bank0
  3074  026D  00BE               	movwf	___ftmul@f1
  3075  026E  0021               	movlb	1	; select bank1
  3076  026F  084A               	movf	(HSVtoRGB@v+1)^(0+128),w
  3077  0270  0020               	movlb	0	; select bank0
  3078  0271  00BF               	movwf	___ftmul@f1+1
  3079  0272  0021               	movlb	1	; select bank1
  3080  0273  084B               	movf	(HSVtoRGB@v+2)^(0+128),w
  3081  0274  0020               	movlb	0	; select bank0
  3082  0275  00C0               	movwf	___ftmul@f1+2
  3083  0276  3000               	movlw	0
  3084  0277  00B1               	movwf	___ftadd@f1
  3085  0278  3080               	movlw	128
  3086  0279  00B2               	movwf	___ftadd@f1+1
  3087  027A  303F               	movlw	63
  3088  027B  00B3               	movwf	___ftadd@f1+2
  3089  027C  0021               	movlb	1	; select bank1
  3090  027D  0843               	movf	HSVtoRGB@s^(0+128),w
  3091  027E  0020               	movlb	0	; select bank0
  3092  027F  00AE               	movwf	___ftneg@f1
  3093  0280  0021               	movlb	1	; select bank1
  3094  0281  0844               	movf	(HSVtoRGB@s+1)^(0+128),w
  3095  0282  0020               	movlb	0	; select bank0
  3096  0283  00AF               	movwf	___ftneg@f1+1
  3097  0284  0021               	movlb	1	; select bank1
  3098  0285  0845               	movf	(HSVtoRGB@s+2)^(0+128),w
  3099  0286  0020               	movlb	0	; select bank0
  3100  0287  00B0               	movwf	___ftneg@f1+2
  3101  0288  3188  2001  3181   	fcall	___ftneg
  3102  028B  0020               	movlb	0	; select bank0
  3103  028C  082E               	movf	?___ftneg,w
  3104  028D  00B4               	movwf	___ftadd@f2
  3105  028E  082F               	movf	?___ftneg+1,w
  3106  028F  00B5               	movwf	___ftadd@f2+1
  3107  0290  0830               	movf	?___ftneg+2,w
  3108  0291  00B6               	movwf	___ftadd@f2+2
  3109  0292  3186  268F  3181   	fcall	___ftadd
  3110  0295  0020               	movlb	0	; select bank0
  3111  0296  0831               	movf	?___ftadd,w
  3112  0297  00C1               	movwf	___ftmul@f2
  3113  0298  0832               	movf	?___ftadd+1,w
  3114  0299  00C2               	movwf	___ftmul@f2+1
  3115  029A  0833               	movf	?___ftadd+2,w
  3116  029B  00C3               	movwf	___ftmul@f2+2
  3117  029C  318D  256D  3181   	fcall	___ftmul
  3118  029F  0020               	movlb	0	; select bank0
  3119  02A0  083E               	movf	?___ftmul,w
  3120  02A1  0021               	movlb	1	; select bank1
  3121  02A2  00C6               	movwf	HSVtoRGB@p^(0+128)
  3122  02A3  0020               	movlb	0	; select bank0
  3123  02A4  083F               	movf	?___ftmul+1,w
  3124  02A5  0021               	movlb	1	; select bank1
  3125  02A6  00C7               	movwf	(HSVtoRGB@p+1)^(0+128)
  3126  02A7  0020               	movlb	0	; select bank0
  3127  02A8  0840               	movf	?___ftmul+2,w
  3128  02A9  0021               	movlb	1	; select bank1
  3129  02AA  00C8               	movwf	(HSVtoRGB@p+2)^(0+128)
  3130                           
  3131                           ;fire.c: 83: q = (float)(v * (1.0 - (s * f)));
  3132  02AB  3000               	movlw	0
  3133  02AC  0020               	movlb	0	; select bank0
  3134  02AD  00B1               	movwf	___ftadd@f1
  3135  02AE  3080               	movlw	128
  3136  02AF  00B2               	movwf	___ftadd@f1+1
  3137  02B0  303F               	movlw	63
  3138  02B1  00B3               	movwf	___ftadd@f1+2
  3139  02B2  0021               	movlb	1	; select bank1
  3140  02B3  0843               	movf	HSVtoRGB@s^(0+128),w
  3141  02B4  0020               	movlb	0	; select bank0
  3142  02B5  00C1               	movwf	___ftmul@f2
  3143  02B6  0021               	movlb	1	; select bank1
  3144  02B7  0844               	movf	(HSVtoRGB@s+1)^(0+128),w
  3145  02B8  0020               	movlb	0	; select bank0
  3146  02B9  00C2               	movwf	___ftmul@f2+1
  3147  02BA  0021               	movlb	1	; select bank1
  3148  02BB  0845               	movf	(HSVtoRGB@s+2)^(0+128),w
  3149  02BC  0020               	movlb	0	; select bank0
  3150  02BD  00C3               	movwf	___ftmul@f2+2
  3151  02BE  0021               	movlb	1	; select bank1
  3152  02BF  0829               	movf	HSVtoRGB@f^(0+128),w
  3153  02C0  0020               	movlb	0	; select bank0
  3154  02C1  00BE               	movwf	___ftmul@f1
  3155  02C2  0021               	movlb	1	; select bank1
  3156  02C3  082A               	movf	(HSVtoRGB@f+1)^(0+128),w
  3157  02C4  0020               	movlb	0	; select bank0
  3158  02C5  00BF               	movwf	___ftmul@f1+1
  3159  02C6  0021               	movlb	1	; select bank1
  3160  02C7  082B               	movf	(HSVtoRGB@f+2)^(0+128),w
  3161  02C8  0020               	movlb	0	; select bank0
  3162  02C9  00C0               	movwf	___ftmul@f1+2
  3163  02CA  318D  256D  3181   	fcall	___ftmul
  3164  02CD  0020               	movlb	0	; select bank0
  3165  02CE  083E               	movf	?___ftmul,w
  3166  02CF  00AE               	movwf	___ftneg@f1
  3167  02D0  083F               	movf	?___ftmul+1,w
  3168  02D1  00AF               	movwf	___ftneg@f1+1
  3169  02D2  0840               	movf	?___ftmul+2,w
  3170  02D3  00B0               	movwf	___ftneg@f1+2
  3171  02D4  3188  2001  3181   	fcall	___ftneg
  3172  02D7  0020               	movlb	0	; select bank0
  3173  02D8  082E               	movf	?___ftneg,w
  3174  02D9  00B4               	movwf	___ftadd@f2
  3175  02DA  082F               	movf	?___ftneg+1,w
  3176  02DB  00B5               	movwf	___ftadd@f2+1
  3177  02DC  0830               	movf	?___ftneg+2,w
  3178  02DD  00B6               	movwf	___ftadd@f2+2
  3179  02DE  3186  268F  3181   	fcall	___ftadd
  3180  02E1  0020               	movlb	0	; select bank0
  3181  02E2  0831               	movf	?___ftadd,w
  3182  02E3  0021               	movlb	1	; select bank1
  3183  02E4  00A3               	movwf	_HSVtoRGB$1187^(0+128)
  3184  02E5  0020               	movlb	0	; select bank0
  3185  02E6  0832               	movf	?___ftadd+1,w
  3186  02E7  0021               	movlb	1	; select bank1
  3187  02E8  00A4               	movwf	(_HSVtoRGB$1187+1)^(0+128)
  3188  02E9  0020               	movlb	0	; select bank0
  3189  02EA  0833               	movf	?___ftadd+2,w
  3190  02EB  0021               	movlb	1	; select bank1
  3191  02EC  00A5               	movwf	(_HSVtoRGB$1187+2)^(0+128)
  3192                           
  3193                           ;fire.c: 83: q = (float)(v * (1.0 - (s * f)));
  3194  02ED  0849               	movf	HSVtoRGB@v^(0+128),w
  3195  02EE  0020               	movlb	0	; select bank0
  3196  02EF  00BE               	movwf	___ftmul@f1
  3197  02F0  0021               	movlb	1	; select bank1
  3198  02F1  084A               	movf	(HSVtoRGB@v+1)^(0+128),w
  3199  02F2  0020               	movlb	0	; select bank0
  3200  02F3  00BF               	movwf	___ftmul@f1+1
  3201  02F4  0021               	movlb	1	; select bank1
  3202  02F5  084B               	movf	(HSVtoRGB@v+2)^(0+128),w
  3203  02F6  0020               	movlb	0	; select bank0
  3204  02F7  00C0               	movwf	___ftmul@f1+2
  3205  02F8  0021               	movlb	1	; select bank1
  3206  02F9  0823               	movf	_HSVtoRGB$1187^(0+128),w
  3207  02FA  0020               	movlb	0	; select bank0
  3208  02FB  00C1               	movwf	___ftmul@f2
  3209  02FC  0021               	movlb	1	; select bank1
  3210  02FD  0824               	movf	(_HSVtoRGB$1187+1)^(0+128),w
  3211  02FE  0020               	movlb	0	; select bank0
  3212  02FF  00C2               	movwf	___ftmul@f2+1
  3213  0300  0021               	movlb	1	; select bank1
  3214  0301  0825               	movf	(_HSVtoRGB$1187+2)^(0+128),w
  3215  0302  0020               	movlb	0	; select bank0
  3216  0303  00C3               	movwf	___ftmul@f2+2
  3217  0304  318D  256D  3181   	fcall	___ftmul
  3218  0307  0020               	movlb	0	; select bank0
  3219  0308  083E               	movf	?___ftmul,w
  3220  0309  0021               	movlb	1	; select bank1
  3221  030A  00B2               	movwf	HSVtoRGB@q^(0+128)
  3222  030B  0020               	movlb	0	; select bank0
  3223  030C  083F               	movf	?___ftmul+1,w
  3224  030D  0021               	movlb	1	; select bank1
  3225  030E  00B3               	movwf	(HSVtoRGB@q+1)^(0+128)
  3226  030F  0020               	movlb	0	; select bank0
  3227  0310  0840               	movf	?___ftmul+2,w
  3228  0311  0021               	movlb	1	; select bank1
  3229  0312  00B4               	movwf	(HSVtoRGB@q+2)^(0+128)
  3230                           
  3231                           ;fire.c: 84: t = (float)(v * (1.0 - (s * (1.0 - f))));
  3232  0313  0829               	movf	HSVtoRGB@f^(0+128),w
  3233  0314  0020               	movlb	0	; select bank0
  3234  0315  00AE               	movwf	___ftneg@f1
  3235  0316  0021               	movlb	1	; select bank1
  3236  0317  082A               	movf	(HSVtoRGB@f+1)^(0+128),w
  3237  0318  0020               	movlb	0	; select bank0
  3238  0319  00AF               	movwf	___ftneg@f1+1
  3239  031A  0021               	movlb	1	; select bank1
  3240  031B  082B               	movf	(HSVtoRGB@f+2)^(0+128),w
  3241  031C  0020               	movlb	0	; select bank0
  3242  031D  00B0               	movwf	___ftneg@f1+2
  3243  031E  3188  2001  3181   	fcall	___ftneg
  3244  0321  0020               	movlb	0	; select bank0
  3245  0322  082E               	movf	?___ftneg,w
  3246  0323  00B4               	movwf	___ftadd@f2
  3247  0324  082F               	movf	?___ftneg+1,w
  3248  0325  00B5               	movwf	___ftadd@f2+1
  3249  0326  0830               	movf	?___ftneg+2,w
  3250  0327  00B6               	movwf	___ftadd@f2+2
  3251  0328  3000               	movlw	0
  3252  0329  00B1               	movwf	___ftadd@f1
  3253  032A  3080               	movlw	128
  3254  032B  00B2               	movwf	___ftadd@f1+1
  3255  032C  303F               	movlw	63
  3256  032D  00B3               	movwf	___ftadd@f1+2
  3257  032E  3186  268F  3181   	fcall	___ftadd
  3258  0331  0020               	movlb	0	; select bank0
  3259  0332  0831               	movf	?___ftadd,w
  3260  0333  00C1               	movwf	___ftmul@f2
  3261  0334  0832               	movf	?___ftadd+1,w
  3262  0335  00C2               	movwf	___ftmul@f2+1
  3263  0336  0833               	movf	?___ftadd+2,w
  3264  0337  00C3               	movwf	___ftmul@f2+2
  3265  0338  0021               	movlb	1	; select bank1
  3266  0339  0843               	movf	HSVtoRGB@s^(0+128),w
  3267  033A  0020               	movlb	0	; select bank0
  3268  033B  00BE               	movwf	___ftmul@f1
  3269  033C  0021               	movlb	1	; select bank1
  3270  033D  0844               	movf	(HSVtoRGB@s+1)^(0+128),w
  3271  033E  0020               	movlb	0	; select bank0
  3272  033F  00BF               	movwf	___ftmul@f1+1
  3273  0340  0021               	movlb	1	; select bank1
  3274  0341  0845               	movf	(HSVtoRGB@s+2)^(0+128),w
  3275  0342  0020               	movlb	0	; select bank0
  3276  0343  00C0               	movwf	___ftmul@f1+2
  3277  0344  318D  256D  3181   	fcall	___ftmul
  3278  0347  0020               	movlb	0	; select bank0
  3279  0348  083E               	movf	?___ftmul,w
  3280  0349  0021               	movlb	1	; select bank1
  3281  034A  00A6               	movwf	_HSVtoRGB$1188^(0+128)
  3282  034B  0020               	movlb	0	; select bank0
  3283  034C  083F               	movf	?___ftmul+1,w
  3284  034D  0021               	movlb	1	; select bank1
  3285  034E  00A7               	movwf	(_HSVtoRGB$1188+1)^(0+128)
  3286  034F  0020               	movlb	0	; select bank0
  3287  0350  0840               	movf	?___ftmul+2,w
  3288  0351  0021               	movlb	1	; select bank1
  3289  0352  00A8               	movwf	(_HSVtoRGB$1188+2)^(0+128)
  3290                           
  3291                           ;fire.c: 84: t = (float)(v * (1.0 - (s * (1.0 - f))));
  3292  0353  0849               	movf	HSVtoRGB@v^(0+128),w
  3293  0354  0020               	movlb	0	; select bank0
  3294  0355  00BE               	movwf	___ftmul@f1
  3295  0356  0021               	movlb	1	; select bank1
  3296  0357  084A               	movf	(HSVtoRGB@v+1)^(0+128),w
  3297  0358  0020               	movlb	0	; select bank0
  3298  0359  00BF               	movwf	___ftmul@f1+1
  3299  035A  0021               	movlb	1	; select bank1
  3300  035B  084B               	movf	(HSVtoRGB@v+2)^(0+128),w
  3301  035C  0020               	movlb	0	; select bank0
  3302  035D  00C0               	movwf	___ftmul@f1+2
  3303  035E  3000               	movlw	0
  3304  035F  00B1               	movwf	___ftadd@f1
  3305  0360  3080               	movlw	128
  3306  0361  00B2               	movwf	___ftadd@f1+1
  3307  0362  303F               	movlw	63
  3308  0363  00B3               	movwf	___ftadd@f1+2
  3309  0364  0021               	movlb	1	; select bank1
  3310  0365  0826               	movf	_HSVtoRGB$1188^(0+128),w
  3311  0366  0020               	movlb	0	; select bank0
  3312  0367  00AE               	movwf	___ftneg@f1
  3313  0368  0021               	movlb	1	; select bank1
  3314  0369  0827               	movf	(_HSVtoRGB$1188+1)^(0+128),w
  3315  036A  0020               	movlb	0	; select bank0
  3316  036B  00AF               	movwf	___ftneg@f1+1
  3317  036C  0021               	movlb	1	; select bank1
  3318  036D  0828               	movf	(_HSVtoRGB$1188+2)^(0+128),w
  3319  036E  0020               	movlb	0	; select bank0
  3320  036F  00B0               	movwf	___ftneg@f1+2
  3321  0370  3188  2001  3181   	fcall	___ftneg
  3322  0373  0020               	movlb	0	; select bank0
  3323  0374  082E               	movf	?___ftneg,w
  3324  0375  00B4               	movwf	___ftadd@f2
  3325  0376  082F               	movf	?___ftneg+1,w
  3326  0377  00B5               	movwf	___ftadd@f2+1
  3327  0378  0830               	movf	?___ftneg+2,w
  3328  0379  00B6               	movwf	___ftadd@f2+2
  3329  037A  3186  268F  3181   	fcall	___ftadd
  3330  037D  0020               	movlb	0	; select bank0
  3331  037E  0831               	movf	?___ftadd,w
  3332  037F  00C1               	movwf	___ftmul@f2
  3333  0380  0832               	movf	?___ftadd+1,w
  3334  0381  00C2               	movwf	___ftmul@f2+1
  3335  0382  0833               	movf	?___ftadd+2,w
  3336  0383  00C3               	movwf	___ftmul@f2+2
  3337  0384  318D  256D  3181   	fcall	___ftmul
  3338  0387  0020               	movlb	0	; select bank0
  3339  0388  083E               	movf	?___ftmul,w
  3340  0389  0021               	movlb	1	; select bank1
  3341  038A  00B5               	movwf	HSVtoRGB@t^(0+128)
  3342  038B  0020               	movlb	0	; select bank0
  3343  038C  083F               	movf	?___ftmul+1,w
  3344  038D  0021               	movlb	1	; select bank1
  3345  038E  00B6               	movwf	(HSVtoRGB@t+1)^(0+128)
  3346  038F  0020               	movlb	0	; select bank0
  3347  0390  0840               	movf	?___ftmul+2,w
  3348  0391  0021               	movlb	1	; select bank1
  3349  0392  00B7               	movwf	(HSVtoRGB@t+2)^(0+128)
  3350                           
  3351                           ;fire.c: 86: switch(i)
  3352  0393  2C08               	goto	l2934
  3353  0394                     l2918:	
  3354                           ;fire.c: 87: {
  3355                           ;fire.c: 88: case 0: r=v; g=t; b=p; break;
  3356                           
  3357  0394  0849               	movf	HSVtoRGB@v^(0+128),w
  3358  0395  00AF               	movwf	HSVtoRGB@r^(0+128)
  3359  0396  084A               	movf	(HSVtoRGB@v+1)^(0+128),w
  3360  0397  00B0               	movwf	(HSVtoRGB@r+1)^(0+128)
  3361  0398  084B               	movf	(HSVtoRGB@v+2)^(0+128),w
  3362  0399  00B1               	movwf	(HSVtoRGB@r+2)^(0+128)
  3363  039A  0835               	movf	HSVtoRGB@t^(0+128),w
  3364  039B  00BD               	movwf	HSVtoRGB@g^(0+128)
  3365  039C  0836               	movf	(HSVtoRGB@t+1)^(0+128),w
  3366  039D  00BE               	movwf	(HSVtoRGB@g+1)^(0+128)
  3367  039E  0837               	movf	(HSVtoRGB@t+2)^(0+128),w
  3368  039F  2BAB               	goto	L7
  3369  03A0                     l2920:	
  3370                           ;fire.c: 89: case 1: r=q; g=v; b=p; break;
  3371                           
  3372  03A0  0832               	movf	HSVtoRGB@q^(0+128),w
  3373  03A1  00AF               	movwf	HSVtoRGB@r^(0+128)
  3374  03A2  0833               	movf	(HSVtoRGB@q+1)^(0+128),w
  3375  03A3  00B0               	movwf	(HSVtoRGB@r+1)^(0+128)
  3376  03A4  0834               	movf	(HSVtoRGB@q+2)^(0+128),w
  3377  03A5  00B1               	movwf	(HSVtoRGB@r+2)^(0+128)
  3378  03A6  0849               	movf	HSVtoRGB@v^(0+128),w
  3379  03A7  00BD               	movwf	HSVtoRGB@g^(0+128)
  3380  03A8  084A               	movf	(HSVtoRGB@v+1)^(0+128),w
  3381  03A9  00BE               	movwf	(HSVtoRGB@g+1)^(0+128)
  3382  03AA  084B               	movf	(HSVtoRGB@v+2)^(0+128),w
  3383  03AB                     L7:	
  3384  03AB  00BF               	movwf	(HSVtoRGB@g+2)^(0+128)
  3385  03AC  0846               	movf	HSVtoRGB@p^(0+128),w
  3386  03AD  00C0               	movwf	HSVtoRGB@b^(0+128)
  3387  03AE  0847               	movf	(HSVtoRGB@p+1)^(0+128),w
  3388  03AF  00C1               	movwf	(HSVtoRGB@b+1)^(0+128)
  3389  03B0  0848               	movf	(HSVtoRGB@p+2)^(0+128),w
  3390  03B1  2BF3               	goto	L11
  3391  03B2                     l2922:	
  3392                           ;fire.c: 90: case 2: r=p; g=v; b=t; break;
  3393                           
  3394  03B2  0846               	movf	HSVtoRGB@p^(0+128),w
  3395  03B3  00AF               	movwf	HSVtoRGB@r^(0+128)
  3396  03B4  0847               	movf	(HSVtoRGB@p+1)^(0+128),w
  3397  03B5  00B0               	movwf	(HSVtoRGB@r+1)^(0+128)
  3398  03B6  0848               	movf	(HSVtoRGB@p+2)^(0+128),w
  3399  03B7  00B1               	movwf	(HSVtoRGB@r+2)^(0+128)
  3400  03B8  0849               	movf	HSVtoRGB@v^(0+128),w
  3401  03B9  00BD               	movwf	HSVtoRGB@g^(0+128)
  3402  03BA  084A               	movf	(HSVtoRGB@v+1)^(0+128),w
  3403  03BB  00BE               	movwf	(HSVtoRGB@g+1)^(0+128)
  3404  03BC  084B               	movf	(HSVtoRGB@v+2)^(0+128),w
  3405  03BD  00BF               	movwf	(HSVtoRGB@g+2)^(0+128)
  3406  03BE  0835               	movf	HSVtoRGB@t^(0+128),w
  3407  03BF  00C0               	movwf	HSVtoRGB@b^(0+128)
  3408  03C0  0836               	movf	(HSVtoRGB@t+1)^(0+128),w
  3409  03C1  00C1               	movwf	(HSVtoRGB@b+1)^(0+128)
  3410  03C2  0837               	movf	(HSVtoRGB@t+2)^(0+128),w
  3411  03C3  2BF3               	goto	L11
  3412  03C4                     l2924:	
  3413                           ;fire.c: 91: case 3: r=p; g=q; b=v; break;
  3414                           
  3415  03C4  0846               	movf	HSVtoRGB@p^(0+128),w
  3416  03C5  00AF               	movwf	HSVtoRGB@r^(0+128)
  3417  03C6  0847               	movf	(HSVtoRGB@p+1)^(0+128),w
  3418  03C7  00B0               	movwf	(HSVtoRGB@r+1)^(0+128)
  3419  03C8  0848               	movf	(HSVtoRGB@p+2)^(0+128),w
  3420  03C9  00B1               	movwf	(HSVtoRGB@r+2)^(0+128)
  3421  03CA  0832               	movf	HSVtoRGB@q^(0+128),w
  3422  03CB  00BD               	movwf	HSVtoRGB@g^(0+128)
  3423  03CC  0833               	movf	(HSVtoRGB@q+1)^(0+128),w
  3424  03CD  00BE               	movwf	(HSVtoRGB@g+1)^(0+128)
  3425  03CE  0834               	movf	(HSVtoRGB@q+2)^(0+128),w
  3426  03CF  2BDB               	goto	L12
  3427  03D0                     l2926:	
  3428                           ;fire.c: 92: case 4: r=t; g=p; b=v; break;
  3429                           
  3430  03D0  0835               	movf	HSVtoRGB@t^(0+128),w
  3431  03D1  00AF               	movwf	HSVtoRGB@r^(0+128)
  3432  03D2  0836               	movf	(HSVtoRGB@t+1)^(0+128),w
  3433  03D3  00B0               	movwf	(HSVtoRGB@r+1)^(0+128)
  3434  03D4  0837               	movf	(HSVtoRGB@t+2)^(0+128),w
  3435  03D5  00B1               	movwf	(HSVtoRGB@r+2)^(0+128)
  3436  03D6  0846               	movf	HSVtoRGB@p^(0+128),w
  3437  03D7  00BD               	movwf	HSVtoRGB@g^(0+128)
  3438  03D8  0847               	movf	(HSVtoRGB@p+1)^(0+128),w
  3439  03D9  00BE               	movwf	(HSVtoRGB@g+1)^(0+128)
  3440  03DA  0848               	movf	(HSVtoRGB@p+2)^(0+128),w
  3441  03DB                     L12:	
  3442  03DB  00BF               	movwf	(HSVtoRGB@g+2)^(0+128)
  3443  03DC  0849               	movf	HSVtoRGB@v^(0+128),w
  3444  03DD  00C0               	movwf	HSVtoRGB@b^(0+128)
  3445  03DE  084A               	movf	(HSVtoRGB@v+1)^(0+128),w
  3446  03DF  00C1               	movwf	(HSVtoRGB@b+1)^(0+128)
  3447  03E0  084B               	movf	(HSVtoRGB@v+2)^(0+128),w
  3448  03E1  2BF3               	goto	L11
  3449  03E2                     l2928:	
  3450                           ;fire.c: 93: case 5: r=v; g=p; b=q; break;
  3451                           
  3452  03E2  0849               	movf	HSVtoRGB@v^(0+128),w
  3453  03E3  00AF               	movwf	HSVtoRGB@r^(0+128)
  3454  03E4  084A               	movf	(HSVtoRGB@v+1)^(0+128),w
  3455  03E5  00B0               	movwf	(HSVtoRGB@r+1)^(0+128)
  3456  03E6  084B               	movf	(HSVtoRGB@v+2)^(0+128),w
  3457  03E7  00B1               	movwf	(HSVtoRGB@r+2)^(0+128)
  3458  03E8  0846               	movf	HSVtoRGB@p^(0+128),w
  3459  03E9  00BD               	movwf	HSVtoRGB@g^(0+128)
  3460  03EA  0847               	movf	(HSVtoRGB@p+1)^(0+128),w
  3461  03EB  00BE               	movwf	(HSVtoRGB@g+1)^(0+128)
  3462  03EC  0848               	movf	(HSVtoRGB@p+2)^(0+128),w
  3463  03ED  00BF               	movwf	(HSVtoRGB@g+2)^(0+128)
  3464  03EE  0832               	movf	HSVtoRGB@q^(0+128),w
  3465  03EF  00C0               	movwf	HSVtoRGB@b^(0+128)
  3466  03F0  0833               	movf	(HSVtoRGB@q+1)^(0+128),w
  3467  03F1  00C1               	movwf	(HSVtoRGB@b+1)^(0+128)
  3468  03F2  0834               	movf	(HSVtoRGB@q+2)^(0+128),w
  3469  03F3                     L11:	
  3470  03F3  00C2               	movwf	(HSVtoRGB@b+2)^(0+128)
  3471  03F4  2C17               	goto	l2936
  3472  03F5                     l2930:	
  3473                           ;fire.c: 94: default: r = g = b = 0; break;
  3474                           
  3475  03F5  3000               	movlw	0
  3476  03F6  00C0               	movwf	HSVtoRGB@b^(0+128)
  3477  03F7  3000               	movlw	0
  3478  03F8  00C1               	movwf	(HSVtoRGB@b+1)^(0+128)
  3479  03F9  3000               	movlw	0
  3480  03FA                     L6:	
  3481  03FA  00C2               	movwf	(HSVtoRGB@b+2)^(0+128)
  3482  03FB  0840               	movf	HSVtoRGB@b^(0+128),w
  3483  03FC  00BD               	movwf	HSVtoRGB@g^(0+128)
  3484  03FD  0841               	movf	(HSVtoRGB@b+1)^(0+128),w
  3485  03FE  00BE               	movwf	(HSVtoRGB@g+1)^(0+128)
  3486  03FF  0842               	movf	(HSVtoRGB@b+2)^(0+128),w
  3487  0400  00BF               	movwf	(HSVtoRGB@g+2)^(0+128)
  3488  0401  083D               	movf	HSVtoRGB@g^(0+128),w
  3489  0402  00AF               	movwf	HSVtoRGB@r^(0+128)
  3490  0403  083E               	movf	(HSVtoRGB@g+1)^(0+128),w
  3491  0404  00B0               	movwf	(HSVtoRGB@r+1)^(0+128)
  3492  0405  083F               	movf	(HSVtoRGB@g+2)^(0+128),w
  3493  0406  00B1               	movwf	(HSVtoRGB@r+2)^(0+128)
  3494                           
  3495                           ;fire.c: 95: }
  3496  0407  2C17               	goto	l2936
  3497  0408                     l2934:	
  3498                           
  3499                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3500                           ; Switch size 1, requested type "space"
  3501                           ; Number of cases is 1, Range of values is 0 to 0
  3502                           ; switch strategies available:
  3503                           ; Name         Instructions Cycles
  3504                           ; simple_byte            4     3 (average)
  3505                           ; direct_byte            8     6 (fixed)
  3506                           ; jumptable            260     6 (fixed)
  3507                           ;	Chosen strategy is simple_byte
  3508  0408  082D               	movf	(HSVtoRGB@i+1)^(0+128),w
  3509  0409  3A00               	xorlw	0	; case 0
  3510  040A  1903               	skipnz
  3511  040B  2C0D               	goto	l3798
  3512  040C  2BF5               	goto	l2930
  3513  040D                     l3798:	
  3514                           
  3515                           ; Switch size 1, requested type "space"
  3516                           ; Number of cases is 6, Range of values is 0 to 5
  3517                           ; switch strategies available:
  3518                           ; Name         Instructions Cycles
  3519                           ; direct_byte           18     6 (fixed)
  3520                           ; simple_byte           19    10 (average)
  3521                           ; jumptable            260     6 (fixed)
  3522                           ;	Chosen strategy is direct_byte
  3523  040D  082C               	movf	HSVtoRGB@i^(0+128),w
  3524  040E  0084               	movwf	4
  3525  040F  3006               	movlw	6
  3526  0410  0204               	subwf	4,w
  3527  0411  1803               	skipnc
  3528  0412  2BF5               	goto	l2930
  3529  0413  3190               	movlp	high S3800
  3530  0414  3504               	lslf	4,w
  3531  0415  3E9C               	addlw	low S3800
  3532  0416  0082               	movwf	2
  3533  0417                     l2936:	
  3534                           
  3535                           ;fire.c: 96: }
  3536                           ;fire.c: 98: colorRGB->r = (int)(r * 255.0);
  3537  0417  082F               	movf	HSVtoRGB@r^(0+128),w
  3538  0418  0020               	movlb	0	; select bank0
  3539  0419  00C1               	movwf	___ftmul@f2
  3540  041A  0021               	movlb	1	; select bank1
  3541  041B  0830               	movf	(HSVtoRGB@r+1)^(0+128),w
  3542  041C  0020               	movlb	0	; select bank0
  3543  041D  00C2               	movwf	___ftmul@f2+1
  3544  041E  0021               	movlb	1	; select bank1
  3545  041F  0831               	movf	(HSVtoRGB@r+2)^(0+128),w
  3546  0420  0020               	movlb	0	; select bank0
  3547  0421  00C3               	movwf	___ftmul@f2+2
  3548  0422  3000               	movlw	0
  3549  0423  00BE               	movwf	___ftmul@f1
  3550  0424  307F               	movlw	127
  3551  0425  00BF               	movwf	___ftmul@f1+1
  3552  0426  3043               	movlw	67
  3553  0427  00C0               	movwf	___ftmul@f1+2
  3554  0428  318D  256D  3181   	fcall	___ftmul
  3555  042B  0020               	movlb	0	; select bank0
  3556  042C  083E               	movf	?___ftmul,w
  3557  042D  00CE               	movwf	___fttol@f1
  3558  042E  083F               	movf	?___ftmul+1,w
  3559  042F  00CF               	movwf	___fttol@f1+1
  3560  0430  0840               	movf	?___ftmul+2,w
  3561  0431  00D0               	movwf	___fttol@f1+2
  3562  0432  318C  243D  3181   	fcall	___fttol
  3563  0435  0020               	movlb	0	; select bank0
  3564  0436  084E               	movf	?___fttol,w
  3565  0437  00EE               	movwf	??_HSVtoRGB
  3566  0438  0021               	movlb	1	; select bank1
  3567  0439  083B               	movf	HSVtoRGB@colorRGB^(0+128),w
  3568  043A  0086               	movwf	6
  3569  043B  3001               	movlw	1	; select bank2/3
  3570  043C  0087               	movwf	7
  3571  043D  0020               	movlb	0	; select bank0
  3572  043E  086E               	movf	??_HSVtoRGB,w
  3573  043F  0081               	movwf	1
  3574                           
  3575                           ;fire.c: 99: colorRGB->g = (int)(g * 255.0);
  3576  0440  0021               	movlb	1	; select bank1
  3577  0441  083D               	movf	HSVtoRGB@g^(0+128),w
  3578  0442  0020               	movlb	0	; select bank0
  3579  0443  00C1               	movwf	___ftmul@f2
  3580  0444  0021               	movlb	1	; select bank1
  3581  0445  083E               	movf	(HSVtoRGB@g+1)^(0+128),w
  3582  0446  0020               	movlb	0	; select bank0
  3583  0447  00C2               	movwf	___ftmul@f2+1
  3584  0448  0021               	movlb	1	; select bank1
  3585  0449  083F               	movf	(HSVtoRGB@g+2)^(0+128),w
  3586  044A  0020               	movlb	0	; select bank0
  3587  044B  00C3               	movwf	___ftmul@f2+2
  3588  044C  3000               	movlw	0
  3589  044D  00BE               	movwf	___ftmul@f1
  3590  044E  307F               	movlw	127
  3591  044F  00BF               	movwf	___ftmul@f1+1
  3592  0450  3043               	movlw	67
  3593  0451  00C0               	movwf	___ftmul@f1+2
  3594  0452  318D  256D  3181   	fcall	___ftmul
  3595  0455  0020               	movlb	0	; select bank0
  3596  0456  083E               	movf	?___ftmul,w
  3597  0457  00CE               	movwf	___fttol@f1
  3598  0458  083F               	movf	?___ftmul+1,w
  3599  0459  00CF               	movwf	___fttol@f1+1
  3600  045A  0840               	movf	?___ftmul+2,w
  3601  045B  00D0               	movwf	___fttol@f1+2
  3602  045C  318C  243D  3181   	fcall	___fttol
  3603  045F  0020               	movlb	0	; select bank0
  3604  0460  084E               	movf	?___fttol,w
  3605  0461  00EE               	movwf	??_HSVtoRGB
  3606  0462  0021               	movlb	1	; select bank1
  3607  0463  0A3B               	incf	HSVtoRGB@colorRGB^(0+128),w
  3608  0464  0086               	movwf	6
  3609  0465  3001               	movlw	1	; select bank2/3
  3610  0466  0087               	movwf	7
  3611  0467  0020               	movlb	0	; select bank0
  3612  0468  086E               	movf	??_HSVtoRGB,w
  3613  0469  0081               	movwf	1
  3614                           
  3615                           ;fire.c: 100: colorRGB->b = (int)(b * 255.0);
  3616  046A  0021               	movlb	1	; select bank1
  3617  046B  0840               	movf	HSVtoRGB@b^(0+128),w
  3618  046C  0020               	movlb	0	; select bank0
  3619  046D  00C1               	movwf	___ftmul@f2
  3620  046E  0021               	movlb	1	; select bank1
  3621  046F  0841               	movf	(HSVtoRGB@b+1)^(0+128),w
  3622  0470  0020               	movlb	0	; select bank0
  3623  0471  00C2               	movwf	___ftmul@f2+1
  3624  0472  0021               	movlb	1	; select bank1
  3625  0473  0842               	movf	(HSVtoRGB@b+2)^(0+128),w
  3626  0474  0020               	movlb	0	; select bank0
  3627  0475  00C3               	movwf	___ftmul@f2+2
  3628  0476  3000               	movlw	0
  3629  0477  00BE               	movwf	___ftmul@f1
  3630  0478  307F               	movlw	127
  3631  0479  00BF               	movwf	___ftmul@f1+1
  3632  047A  3043               	movlw	67
  3633  047B  00C0               	movwf	___ftmul@f1+2
  3634  047C  318D  256D  3181   	fcall	___ftmul
  3635  047F  0020               	movlb	0	; select bank0
  3636  0480  083E               	movf	?___ftmul,w
  3637  0481  00CE               	movwf	___fttol@f1
  3638  0482  083F               	movf	?___ftmul+1,w
  3639  0483  00CF               	movwf	___fttol@f1+1
  3640  0484  0840               	movf	?___ftmul+2,w
  3641  0485  00D0               	movwf	___fttol@f1+2
  3642  0486  318C  243D         	fcall	___fttol
  3643  0488  0020               	movlb	0	; select bank0
  3644  0489  084E               	movf	?___fttol,w
  3645  048A  00EE               	movwf	??_HSVtoRGB
  3646  048B  0021               	movlb	1	; select bank1
  3647  048C  083B               	movf	HSVtoRGB@colorRGB^(0+128),w
  3648  048D  3E02               	addlw	2
  3649  048E  0086               	movwf	6
  3650  048F  3001               	movlw	1	; select bank2/3
  3651  0490  0087               	movwf	7
  3652  0491  0020               	movlb	0	; select bank0
  3653  0492  086E               	movf	??_HSVtoRGB,w
  3654  0493  0081               	movwf	1
  3655  0494  0008               	return
  3656  0495                     __end_of_HSVtoRGB:	
  3657                           
  3658                           	psect	swtext2
  3659  109C                     __pswtext2:	
  3660  109C                     S3800:	
  3661  109C  3183  2B94         	ljmp	l2918
  3662  109E  3183  2BA0         	ljmp	l2920
  3663  10A0  3183  2BB2         	ljmp	l2922
  3664  10A2  3183  2BC4         	ljmp	l2924
  3665  10A4  3183  2BD0         	ljmp	l2926
  3666  10A6  3183  2BE2         	ljmp	l2928
  3667                           
  3668                           	psect	text7
  3669  0BB8                     __ptext7:	
  3670 ;; *************** function _floor *****************
  3671 ;; Defined at:
  3672 ;;		line 13 in file "/Applications/microchip/xc8/v1.32/sources/common/floor.c"
  3673 ;; Parameters:    Size  Location     Type
  3674 ;;  x               3   68[BANK0 ] PTR struct .
  3675 ;; Auto vars:     Size  Location     Type
  3676 ;;  i               3   72[BANK0 ] PTR struct .
  3677 ;;  expon           2   75[BANK0 ] int 
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  3   68[BANK0 ] int 
  3680 ;; Registers used:
  3681 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3687 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3688 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3689 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3690 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3691 ;;Total ram usage:        9 bytes
  3692 ;; Hardware stack levels used:    1
  3693 ;; Hardware stack levels required when called:    3
  3694 ;; This function calls:
  3695 ;;		___altoft
  3696 ;;		___ftadd
  3697 ;;		___ftge
  3698 ;;		___fttol
  3699 ;;		_frexp
  3700 ;; This function is called by:
  3701 ;;		_HSVtoRGB
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705                           
  3706                           ;psect for function _floor
  3707  0BB8                     _floor:	
  3708                           
  3709                           ;incstack = 0
  3710                           ; Regs used in _floor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3711  0BB8  0020               	movlb	0	; select bank0
  3712  0BB9  0864               	movf	floor@x,w
  3713  0BBA  00A0               	movwf	frexp@value
  3714  0BBB  0865               	movf	floor@x+1,w
  3715  0BBC  00A1               	movwf	frexp@value+1
  3716  0BBD  0866               	movf	floor@x+2,w
  3717  0BBE  00A2               	movwf	frexp@value+2
  3718  0BBF  306B               	movlw	floor@expon& (0+255)
  3719  0BC0  00E7               	movwf	??_floor
  3720  0BC1  0867               	movf	??_floor,w
  3721  0BC2  00A3               	movwf	frexp@eptr
  3722  0BC3  3188  200A  318B   	fcall	_frexp
  3723  0BC6  0020               	movlb	0	; select bank0
  3724  0BC7  1FEC               	btfss	floor@expon+1,7
  3725  0BC8  2BEA               	goto	l2702
  3726  0BC9  0864               	movf	floor@x,w
  3727  0BCA  00A0               	movwf	___ftge@ff1
  3728  0BCB  0865               	movf	floor@x+1,w
  3729  0BCC  00A1               	movwf	___ftge@ff1+1
  3730  0BCD  0866               	movf	floor@x+2,w
  3731  0BCE  00A2               	movwf	___ftge@ff1+2
  3732  0BCF  3000               	movlw	0
  3733  0BD0  00A3               	movwf	___ftge@ff2
  3734  0BD1  3000               	movlw	0
  3735  0BD2  00A4               	movwf	___ftge@ff2+1
  3736  0BD3  3000               	movlw	0
  3737  0BD4  00A5               	movwf	___ftge@ff2+2
  3738  0BD5  3188  2040  318B   	fcall	___ftge
  3739  0BD8  1803               	btfsc	3,0
  3740  0BD9  2BE2               	goto	l2698
  3741  0BDA  3000               	movlw	0
  3742  0BDB  0020               	movlb	0	; select bank0
  3743  0BDC  00E4               	movwf	?_floor
  3744  0BDD  3080               	movlw	128
  3745  0BDE  00E5               	movwf	?_floor+1
  3746  0BDF  30BF               	movlw	191
  3747  0BE0  00E6               	movwf	?_floor+2
  3748  0BE1  0008               	return
  3749  0BE2                     l2698:	
  3750  0BE2  3000               	movlw	0
  3751  0BE3  0020               	movlb	0	; select bank0
  3752  0BE4  00E4               	movwf	?_floor
  3753  0BE5  3000               	movlw	0
  3754  0BE6  00E5               	movwf	?_floor+1
  3755  0BE7  3000               	movlw	0
  3756  0BE8  00E6               	movwf	?_floor+2
  3757  0BE9  0008               	return
  3758  0BEA                     l2702:	
  3759  0BEA  3000               	movlw	0
  3760  0BEB  026C               	subwf	floor@expon+1,w
  3761  0BEC  3015               	movlw	21
  3762  0BED  1903               	skipnz
  3763  0BEE  026B               	subwf	floor@expon,w
  3764  0BEF  1803               	btfsc	3,0
  3765  0BF0  0008               	return
  3766  0BF1  0864               	movf	floor@x,w
  3767  0BF2  00CE               	movwf	___fttol@f1
  3768  0BF3  0865               	movf	floor@x+1,w
  3769  0BF4  00CF               	movwf	___fttol@f1+1
  3770  0BF5  0866               	movf	floor@x+2,w
  3771  0BF6  00D0               	movwf	___fttol@f1+2
  3772  0BF7  318C  243D  318B   	fcall	___fttol
  3773  0BFA  0020               	movlb	0	; select bank0
  3774  0BFB  0851               	movf	?___fttol+3,w
  3775  0BFC  00DF               	movwf	___altoft@c+3
  3776  0BFD  0850               	movf	?___fttol+2,w
  3777  0BFE  00DE               	movwf	___altoft@c+2
  3778  0BFF  084F               	movf	?___fttol+1,w
  3779  0C00  00DD               	movwf	___altoft@c+1
  3780  0C01  084E               	movf	?___fttol,w
  3781  0C02  00DC               	movwf	___altoft@c
  3782  0C03  3188  20B8  318B   	fcall	___altoft
  3783  0C06  0020               	movlb	0	; select bank0
  3784  0C07  085C               	movf	?___altoft,w
  3785  0C08  00E8               	movwf	floor@i
  3786  0C09  085D               	movf	?___altoft+1,w
  3787  0C0A  00E9               	movwf	floor@i+1
  3788  0C0B  085E               	movf	?___altoft+2,w
  3789  0C0C  00EA               	movwf	floor@i+2
  3790  0C0D  0864               	movf	floor@x,w
  3791  0C0E  00A0               	movwf	___ftge@ff1
  3792  0C0F  0865               	movf	floor@x+1,w
  3793  0C10  00A1               	movwf	___ftge@ff1+1
  3794  0C11  0866               	movf	floor@x+2,w
  3795  0C12  00A2               	movwf	___ftge@ff1+2
  3796  0C13  0868               	movf	floor@i,w
  3797  0C14  00A3               	movwf	___ftge@ff2
  3798  0C15  0869               	movf	floor@i+1,w
  3799  0C16  00A4               	movwf	___ftge@ff2+1
  3800  0C17  086A               	movf	floor@i+2,w
  3801  0C18  00A5               	movwf	___ftge@ff2+2
  3802  0C19  3188  2040  318B   	fcall	___ftge
  3803  0C1C  1803               	btfsc	3,0
  3804  0C1D  2C35               	goto	l2712
  3805  0C1E  3000               	movlw	0
  3806  0C1F  0020               	movlb	0	; select bank0
  3807  0C20  00B1               	movwf	___ftadd@f1
  3808  0C21  3080               	movlw	128
  3809  0C22  00B2               	movwf	___ftadd@f1+1
  3810  0C23  30BF               	movlw	191
  3811  0C24  00B3               	movwf	___ftadd@f1+2
  3812  0C25  0868               	movf	floor@i,w
  3813  0C26  00B4               	movwf	___ftadd@f2
  3814  0C27  0869               	movf	floor@i+1,w
  3815  0C28  00B5               	movwf	___ftadd@f2+1
  3816  0C29  086A               	movf	floor@i+2,w
  3817  0C2A  00B6               	movwf	___ftadd@f2+2
  3818  0C2B  3186  268F         	fcall	___ftadd
  3819  0C2D  0020               	movlb	0	; select bank0
  3820  0C2E  0831               	movf	?___ftadd,w
  3821  0C2F  00E4               	movwf	?_floor
  3822  0C30  0832               	movf	?___ftadd+1,w
  3823  0C31  00E5               	movwf	?_floor+1
  3824  0C32  0833               	movf	?___ftadd+2,w
  3825  0C33  00E6               	movwf	?_floor+2
  3826  0C34  0008               	return
  3827  0C35                     l2712:	
  3828  0C35  0020               	movlb	0	; select bank0
  3829  0C36  0868               	movf	floor@i,w
  3830  0C37  00E4               	movwf	?_floor
  3831  0C38  0869               	movf	floor@i+1,w
  3832  0C39  00E5               	movwf	?_floor+1
  3833  0C3A  086A               	movf	floor@i+2,w
  3834  0C3B  00E6               	movwf	?_floor+2
  3835  0C3C  0008               	return
  3836  0C3D                     __end_of_floor:	
  3837                           
  3838                           	psect	text8
  3839  080A                     __ptext8:	
  3840 ;; *************** function _frexp *****************
  3841 ;; Defined at:
  3842 ;;		line 254 in file "/Applications/microchip/xc8/v1.32/sources/common/frexp.c"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;  value           3    0[BANK0 ] int 
  3845 ;;  eptr            1    3[BANK0 ] PTR int 
  3846 ;;		 -> floor@expon(2), 
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;		None
  3849 ;; Return value:  Size  Location     Type
  3850 ;;                  3    0[BANK0 ] PTR int 
  3851 ;; Registers used:
  3852 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3853 ;; Tracked objects:
  3854 ;;		On entry : 0/0
  3855 ;;		On exit  : 0/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3858 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3860 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3861 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3862 ;;Total ram usage:        6 bytes
  3863 ;; Hardware stack levels used:    1
  3864 ;; Hardware stack levels required when called:    1
  3865 ;; This function calls:
  3866 ;;		Nothing
  3867 ;; This function is called by:
  3868 ;;		_floor
  3869 ;; This function uses a non-reentrant model
  3870 ;;
  3871                           
  3872                           
  3873                           ;psect for function _frexp
  3874  080A                     _frexp:	
  3875                           
  3876                           ;incstack = 0
  3877                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  3878  080A  0020               	movlb	0	; select bank0
  3879  080B  0822               	movf	frexp@value+2,w
  3880  080C  0421               	iorwf	frexp@value+1,w
  3881  080D  0420               	iorwf	frexp@value,w
  3882  080E  1D03               	skipz
  3883  080F  2817               	goto	l2522
  3884  0810  0823               	movf	frexp@eptr,w
  3885  0811  0086               	movwf	6
  3886  0812  0187               	clrf	7
  3887  0813  3000               	movlw	0
  3888  0814  3FC0               	movwi [0]fsr1
  3889  0815  3FC1               	movwi [1]fsr1
  3890                           
  3891                           ;	Return value of _frexp is never used
  3892  0816  0008               	return
  3893  0817                     l2522:	
  3894  0817  0822               	movf	frexp@value+2,w
  3895  0818  397F               	andlw	127
  3896  0819  00A4               	movwf	??_frexp
  3897  081A  01A5               	clrf	??_frexp+1
  3898  081B  35A4               	lslf	??_frexp,f
  3899  081C  0DA5               	rlf	??_frexp+1,f
  3900  081D  0823               	movf	frexp@eptr,w
  3901  081E  0086               	movwf	6
  3902  081F  0187               	clrf	7
  3903  0820  0824               	movf	??_frexp,w
  3904  0821  3FC0               	movwi [0]fsr1
  3905  0822  0825               	movf	??_frexp+1,w
  3906  0823  3FC1               	movwi [1]fsr1
  3907  0824  0D21               	rlf	frexp@value+1,w
  3908  0825  0D21               	rlf	frexp@value+1,w
  3909  0826  3901               	andlw	1
  3910  0827  00A4               	movwf	??_frexp
  3911  0828  01A5               	clrf	??_frexp+1
  3912  0829  0823               	movf	frexp@eptr,w
  3913  082A  0086               	movwf	6
  3914  082B  0187               	clrf	7
  3915  082C  0824               	movf	??_frexp,w
  3916  082D  0481               	iorwf	1,f
  3917  082E  3141               	addfsr 1,1
  3918  082F  0825               	movf	??_frexp+1,w
  3919  0830  0481               	iorwf	1,f
  3920  0831  0823               	movf	frexp@eptr,w
  3921  0832  0086               	movwf	6
  3922  0833  0187               	clrf	7
  3923  0834  3082               	movlw	130
  3924  0835  0781               	addwf	1,f
  3925  0836  3141               	addfsr 1,1
  3926  0837  30FF               	movlw	255
  3927  0838  3D81               	addwfc	1,f
  3928  0839  317F               	addfsr 1,-1
  3929  083A  0822               	movf	frexp@value+2,w
  3930  083B  3980               	andlw	-128
  3931  083C  383F               	iorlw	63
  3932  083D  00A2               	movwf	frexp@value+2
  3933  083E  13A1               	bcf	frexp@value+1,7
  3934  083F  0008               	return
  3935  0840                     __end_of_frexp:	
  3936                           ;	Return value of _frexp is never used
  3937                           
  3938                           
  3939                           	psect	text9
  3940  0C3D                     __ptext9:	
  3941 ;; *************** function ___fttol *****************
  3942 ;; Defined at:
  3943 ;;		line 44 in file "/Applications/microchip/xc8/v1.32/sources/common/fttol.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;  f1              3   46[BANK0 ] float 
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;  lval            4   55[BANK0 ] unsigned long 
  3948 ;;  exp1            1   59[BANK0 ] unsigned char 
  3949 ;;  sign1           1   54[BANK0 ] unsigned char 
  3950 ;; Return value:  Size  Location     Type
  3951 ;;                  4   46[BANK0 ] long 
  3952 ;; Registers used:
  3953 ;;		wreg, status,2, status,0
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 0/0
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3959 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3960 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3961 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3962 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3963 ;;Total ram usage:       14 bytes
  3964 ;; Hardware stack levels used:    1
  3965 ;; Hardware stack levels required when called:    1
  3966 ;; This function calls:
  3967 ;;		Nothing
  3968 ;; This function is called by:
  3969 ;;		_HSVtoRGB
  3970 ;;		_floor
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973                           
  3974                           
  3975                           ;psect for function ___fttol
  3976  0C3D                     ___fttol:	
  3977                           
  3978                           ;incstack = 0
  3979                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3980  0C3D  0020               	movlb	0	; select bank0
  3981  0C3E  084E               	movf	___fttol@f1,w
  3982  0C3F  00D2               	movwf	??___fttol
  3983  0C40  084F               	movf	___fttol@f1+1,w
  3984  0C41  00D3               	movwf	??___fttol+1
  3985  0C42  0850               	movf	___fttol@f1+2,w
  3986  0C43  00D4               	movwf	??___fttol+2
  3987  0C44  1003               	clrc
  3988  0C45  0D53               	rlf	??___fttol+1,w
  3989  0C46  0D54               	rlf	??___fttol+2,w
  3990  0C47  00D5               	movwf	??___fttol+3
  3991  0C48  0855               	movf	??___fttol+3,w
  3992  0C49  00DB               	movwf	___fttol@exp1
  3993  0C4A  08DB               	movf	___fttol@exp1,f
  3994  0C4B  1D03               	skipz
  3995  0C4C  2C56               	goto	l2630
  3996  0C4D  3000               	movlw	0
  3997  0C4E  00D1               	movwf	?___fttol+3
  3998  0C4F  3000               	movlw	0
  3999  0C50  00D0               	movwf	?___fttol+2
  4000  0C51  3000               	movlw	0
  4001  0C52  00CF               	movwf	?___fttol+1
  4002  0C53  3000               	movlw	0
  4003  0C54  00CE               	movwf	?___fttol
  4004  0C55  0008               	return
  4005  0C56                     l2630:	
  4006  0C56  084E               	movf	___fttol@f1,w
  4007  0C57  00D2               	movwf	??___fttol
  4008  0C58  084F               	movf	___fttol@f1+1,w
  4009  0C59  00D3               	movwf	??___fttol+1
  4010  0C5A  0850               	movf	___fttol@f1+2,w
  4011  0C5B  00D4               	movwf	??___fttol+2
  4012  0C5C  3017               	movlw	23
  4013  0C5D                     u2555:	
  4014  0C5D  36D4               	lsrf	??___fttol+2,f
  4015  0C5E  0CD3               	rrf	??___fttol+1,f
  4016  0C5F  0CD2               	rrf	??___fttol,f
  4017  0C60  0B89               	decfsz	9,f
  4018  0C61  2C5D               	goto	u2555
  4019  0C62  0852               	movf	??___fttol,w
  4020  0C63  00D5               	movwf	??___fttol+3
  4021  0C64  0855               	movf	??___fttol+3,w
  4022  0C65  00D6               	movwf	___fttol@sign1
  4023  0C66  17CF               	bsf	___fttol@f1+1,7
  4024  0C67  30FF               	movlw	255
  4025  0C68  05CE               	andwf	___fttol@f1,f
  4026  0C69  30FF               	movlw	255
  4027  0C6A  05CF               	andwf	___fttol@f1+1,f
  4028  0C6B  3000               	movlw	0
  4029  0C6C  05D0               	andwf	___fttol@f1+2,f
  4030  0C6D  084E               	movf	___fttol@f1,w
  4031  0C6E  00D7               	movwf	___fttol@lval
  4032  0C6F  084F               	movf	___fttol@f1+1,w
  4033  0C70  00D8               	movwf	___fttol@lval+1
  4034  0C71  0850               	movf	___fttol@f1+2,w
  4035  0C72  00D9               	movwf	___fttol@lval+2
  4036  0C73  01DA               	clrf	___fttol@lval+3
  4037  0C74  308E               	movlw	142
  4038  0C75  02DB               	subwf	___fttol@exp1,f
  4039  0C76  1FDB               	btfss	___fttol@exp1,7
  4040  0C77  2C94               	goto	l2650
  4041  0C78  085B               	movf	___fttol@exp1,w
  4042  0C79  3A80               	xorlw	128
  4043  0C7A  3E8F               	addlw	143
  4044  0C7B  1803               	skipnc
  4045  0C7C  2C86               	goto	l2648
  4046  0C7D  3000               	movlw	0
  4047  0C7E  00D1               	movwf	?___fttol+3
  4048  0C7F  3000               	movlw	0
  4049  0C80  00D0               	movwf	?___fttol+2
  4050  0C81  3000               	movlw	0
  4051  0C82  00CF               	movwf	?___fttol+1
  4052  0C83  3000               	movlw	0
  4053  0C84  00CE               	movwf	?___fttol
  4054  0C85  0008               	return
  4055  0C86                     l2648:	
  4056  0C86  3001               	movlw	1
  4057  0C87                     u2585:	
  4058  0C87  36DA               	lsrf	___fttol@lval+3,f
  4059  0C88  0CD9               	rrf	___fttol@lval+2,f
  4060  0C89  0CD8               	rrf	___fttol@lval+1,f
  4061  0C8A  0CD7               	rrf	___fttol@lval,f
  4062  0C8B  0B89               	decfsz	9,f
  4063  0C8C  2C87               	goto	u2585
  4064  0C8D  3001               	movlw	1
  4065  0C8E  00D2               	movwf	??___fttol
  4066  0C8F  0852               	movf	??___fttol,w
  4067  0C90  07DB               	addwf	___fttol@exp1,f
  4068  0C91  1903               	btfsc	3,2
  4069  0C92  2CAD               	goto	l2660
  4070  0C93  2C86               	goto	l2648
  4071  0C94                     l2650:	
  4072  0C94  3018               	movlw	24
  4073  0C95  025B               	subwf	___fttol@exp1,w
  4074  0C96  1C03               	skipc
  4075  0C97  2CAA               	goto	l2658
  4076  0C98  3000               	movlw	0
  4077  0C99  00D1               	movwf	?___fttol+3
  4078  0C9A  3000               	movlw	0
  4079  0C9B  00D0               	movwf	?___fttol+2
  4080  0C9C  3000               	movlw	0
  4081  0C9D  00CF               	movwf	?___fttol+1
  4082  0C9E  3000               	movlw	0
  4083  0C9F  00CE               	movwf	?___fttol
  4084  0CA0  0008               	return
  4085  0CA1                     l2656:	
  4086  0CA1  3001               	movlw	1
  4087  0CA2                     u2615:	
  4088  0CA2  35D7               	lslf	___fttol@lval,f
  4089  0CA3  0DD8               	rlf	___fttol@lval+1,f
  4090  0CA4  0DD9               	rlf	___fttol@lval+2,f
  4091  0CA5  0DDA               	rlf	___fttol@lval+3,f
  4092  0CA6  0B89               	decfsz	9,f
  4093  0CA7  2CA2               	goto	u2615
  4094  0CA8  3001               	movlw	1
  4095  0CA9  02DB               	subwf	___fttol@exp1,f
  4096  0CAA                     l2658:	
  4097  0CAA  08DB               	movf	___fttol@exp1,f
  4098  0CAB  1D03               	skipz
  4099  0CAC  2CA1               	goto	l2656
  4100  0CAD                     l2660:	
  4101  0CAD  0856               	movf	___fttol@sign1,w
  4102  0CAE  1903               	btfsc	3,2
  4103  0CAF  2CBB               	goto	l2664
  4104  0CB0  09D7               	comf	___fttol@lval,f
  4105  0CB1  09D8               	comf	___fttol@lval+1,f
  4106  0CB2  09D9               	comf	___fttol@lval+2,f
  4107  0CB3  09DA               	comf	___fttol@lval+3,f
  4108  0CB4  0AD7               	incf	___fttol@lval,f
  4109  0CB5  1903               	skipnz
  4110  0CB6  0AD8               	incf	___fttol@lval+1,f
  4111  0CB7  1903               	skipnz
  4112  0CB8  0AD9               	incf	___fttol@lval+2,f
  4113  0CB9  1903               	skipnz
  4114  0CBA  0ADA               	incf	___fttol@lval+3,f
  4115  0CBB                     l2664:	
  4116  0CBB  085A               	movf	___fttol@lval+3,w
  4117  0CBC  00D1               	movwf	?___fttol+3
  4118  0CBD  0859               	movf	___fttol@lval+2,w
  4119  0CBE  00D0               	movwf	?___fttol+2
  4120  0CBF  0858               	movf	___fttol@lval+1,w
  4121  0CC0  00CF               	movwf	?___fttol+1
  4122  0CC1  0857               	movf	___fttol@lval,w
  4123  0CC2  00CE               	movwf	?___fttol
  4124  0CC3  0008               	return
  4125  0CC4                     __end_of___fttol:	
  4126                           
  4127                           	psect	text10
  4128  0840                     __ptext10:	
  4129 ;; *************** function ___ftge *****************
  4130 ;; Defined at:
  4131 ;;		line 4 in file "/Applications/microchip/xc8/v1.32/sources/common/ftge.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;  ff1             3    0[BANK0 ] float 
  4134 ;;  ff2             3    3[BANK0 ] float 
  4135 ;; Auto vars:     Size  Location     Type
  4136 ;;		None
  4137 ;; Return value:  Size  Location     Type
  4138 ;;		None               void
  4139 ;; Registers used:
  4140 ;;		wreg, status,2, status,0
  4141 ;; Tracked objects:
  4142 ;;		On entry : 0/0
  4143 ;;		On exit  : 0/0
  4144 ;;		Unchanged: 0/0
  4145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4146 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4148 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4149 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4150 ;;Total ram usage:        9 bytes
  4151 ;; Hardware stack levels used:    1
  4152 ;; Hardware stack levels required when called:    1
  4153 ;; This function calls:
  4154 ;;		Nothing
  4155 ;; This function is called by:
  4156 ;;		_floor
  4157 ;; This function uses a non-reentrant model
  4158 ;;
  4159                           
  4160                           
  4161                           ;psect for function ___ftge
  4162  0840                     ___ftge:	
  4163                           
  4164                           ;incstack = 0
  4165                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  4166  0840  0020               	movlb	0	; select bank0
  4167  0841  1FA2               	btfss	___ftge@ff1+2,7
  4168  0842  2857               	goto	l2608
  4169  0843  0920               	comf	___ftge@ff1,w
  4170  0844  00A6               	movwf	??___ftge
  4171  0845  0921               	comf	___ftge@ff1+1,w
  4172  0846  00A7               	movwf	??___ftge+1
  4173  0847  0922               	comf	___ftge@ff1+2,w
  4174  0848  00A8               	movwf	??___ftge+2
  4175  0849  0AA6               	incf	??___ftge,f
  4176  084A  1903               	skipnz
  4177  084B  0AA7               	incf	??___ftge+1,f
  4178  084C  1903               	skipnz
  4179  084D  0AA8               	incf	??___ftge+2,f
  4180  084E  3000               	movlw	0
  4181  084F  0726               	addwf	??___ftge,w
  4182  0850  00A0               	movwf	___ftge@ff1
  4183  0851  3000               	movlw	0
  4184  0852  3D27               	addwfc	??___ftge+1,w
  4185  0853  00A1               	movwf	___ftge@ff1+1
  4186  0854  3080               	movlw	128
  4187  0855  3D28               	addwfc	??___ftge+2,w
  4188  0856  00A2               	movwf	___ftge@ff1+2
  4189  0857                     l2608:	
  4190  0857  1FA5               	btfss	___ftge@ff2+2,7
  4191  0858  286D               	goto	l2612
  4192  0859  0923               	comf	___ftge@ff2,w
  4193  085A  00A6               	movwf	??___ftge
  4194  085B  0924               	comf	___ftge@ff2+1,w
  4195  085C  00A7               	movwf	??___ftge+1
  4196  085D  0925               	comf	___ftge@ff2+2,w
  4197  085E  00A8               	movwf	??___ftge+2
  4198  085F  0AA6               	incf	??___ftge,f
  4199  0860  1903               	skipnz
  4200  0861  0AA7               	incf	??___ftge+1,f
  4201  0862  1903               	skipnz
  4202  0863  0AA8               	incf	??___ftge+2,f
  4203  0864  3000               	movlw	0
  4204  0865  0726               	addwf	??___ftge,w
  4205  0866  00A3               	movwf	___ftge@ff2
  4206  0867  3000               	movlw	0
  4207  0868  3D27               	addwfc	??___ftge+1,w
  4208  0869  00A4               	movwf	___ftge@ff2+1
  4209  086A  3080               	movlw	128
  4210  086B  3D28               	addwfc	??___ftge+2,w
  4211  086C  00A5               	movwf	___ftge@ff2+2
  4212  086D                     l2612:	
  4213  086D  3080               	movlw	128
  4214  086E  06A2               	xorwf	___ftge@ff1+2,f
  4215  086F  3080               	movlw	128
  4216  0870  06A5               	xorwf	___ftge@ff2+2,f
  4217  0871  0825               	movf	___ftge@ff2+2,w
  4218  0872  0222               	subwf	___ftge@ff1+2,w
  4219  0873  1D03               	skipz
  4220  0874  0008               	return
  4221  0875  0824               	movf	___ftge@ff2+1,w
  4222  0876  0221               	subwf	___ftge@ff1+1,w
  4223  0877  1D03               	skipz
  4224  0878  0008               	return
  4225  0879  0823               	movf	___ftge@ff2,w
  4226  087A  0220               	subwf	___ftge@ff1,w
  4227  087B  0008               	return
  4228  087C                     __end_of___ftge:	
  4229                           
  4230                           	psect	text11
  4231  068F                     __ptext11:	
  4232 ;; *************** function ___ftadd *****************
  4233 ;; Defined at:
  4234 ;;		line 86 in file "/Applications/microchip/xc8/v1.32/sources/common/ftadd.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;  f1              3   17[BANK0 ] float 
  4237 ;;  f2              3   20[BANK0 ] float 
  4238 ;; Auto vars:     Size  Location     Type
  4239 ;;  exp1            1   29[BANK0 ] unsigned char 
  4240 ;;  exp2            1   28[BANK0 ] unsigned char 
  4241 ;;  sign            1   27[BANK0 ] unsigned char 
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  3   17[BANK0 ] float 
  4244 ;; Registers used:
  4245 ;;		wreg, status,2, status,0, pclath, cstack
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4251 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4252 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4253 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4254 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4255 ;;Total ram usage:       13 bytes
  4256 ;; Hardware stack levels used:    1
  4257 ;; Hardware stack levels required when called:    2
  4258 ;; This function calls:
  4259 ;;		___ftpack
  4260 ;; This function is called by:
  4261 ;;		_HSVtoRGB
  4262 ;;		_floor
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           
  4267                           ;psect for function ___ftadd
  4268  068F                     ___ftadd:	
  4269                           
  4270                           ;incstack = 0
  4271                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4272  068F  0020               	movlb	0	; select bank0
  4273  0690  0831               	movf	___ftadd@f1,w
  4274  0691  00B7               	movwf	??___ftadd
  4275  0692  0832               	movf	___ftadd@f1+1,w
  4276  0693  00B8               	movwf	??___ftadd+1
  4277  0694  0833               	movf	___ftadd@f1+2,w
  4278  0695  00B9               	movwf	??___ftadd+2
  4279  0696  1003               	clrc
  4280  0697  0D38               	rlf	??___ftadd+1,w
  4281  0698  0D39               	rlf	??___ftadd+2,w
  4282  0699  00BA               	movwf	??___ftadd+3
  4283  069A  083A               	movf	??___ftadd+3,w
  4284  069B  00BD               	movwf	___ftadd@exp1
  4285  069C  0834               	movf	___ftadd@f2,w
  4286  069D  00B7               	movwf	??___ftadd
  4287  069E  0835               	movf	___ftadd@f2+1,w
  4288  069F  00B8               	movwf	??___ftadd+1
  4289  06A0  0836               	movf	___ftadd@f2+2,w
  4290  06A1  00B9               	movwf	??___ftadd+2
  4291  06A2  1003               	clrc
  4292  06A3  0D38               	rlf	??___ftadd+1,w
  4293  06A4  0D39               	rlf	??___ftadd+2,w
  4294  06A5  00BA               	movwf	??___ftadd+3
  4295  06A6  083A               	movf	??___ftadd+3,w
  4296  06A7  00BC               	movwf	___ftadd@exp2
  4297  06A8  083D               	movf	___ftadd@exp1,w
  4298  06A9  1903               	btfsc	3,2
  4299  06AA  2EB7               	goto	l2540
  4300  06AB  083C               	movf	___ftadd@exp2,w
  4301  06AC  023D               	subwf	___ftadd@exp1,w
  4302  06AD  1803               	skipnc
  4303  06AE  2EBE               	goto	l2544
  4304  06AF  033D               	decf	___ftadd@exp1,w
  4305  06B0  3AFF               	xorlw	255
  4306  06B1  073C               	addwf	___ftadd@exp2,w
  4307  06B2  00B7               	movwf	??___ftadd
  4308  06B3  3019               	movlw	25
  4309  06B4  0237               	subwf	??___ftadd,w
  4310  06B5  1C03               	skipc
  4311  06B6  2EBE               	goto	l2544
  4312  06B7                     l2540:	
  4313  06B7  0834               	movf	___ftadd@f2,w
  4314  06B8  00B1               	movwf	?___ftadd
  4315  06B9  0835               	movf	___ftadd@f2+1,w
  4316  06BA  00B2               	movwf	?___ftadd+1
  4317  06BB  0836               	movf	___ftadd@f2+2,w
  4318  06BC  00B3               	movwf	?___ftadd+2
  4319  06BD  0008               	return
  4320  06BE                     l2544:	
  4321  06BE  083C               	movf	___ftadd@exp2,w
  4322  06BF  1903               	btfsc	3,2
  4323  06C0  0008               	return
  4324  06C1  083D               	movf	___ftadd@exp1,w
  4325  06C2  023C               	subwf	___ftadd@exp2,w
  4326  06C3  1803               	skipnc
  4327  06C4  2ECD               	goto	l2550
  4328  06C5  033C               	decf	___ftadd@exp2,w
  4329  06C6  3AFF               	xorlw	255
  4330  06C7  073D               	addwf	___ftadd@exp1,w
  4331  06C8  00B7               	movwf	??___ftadd
  4332  06C9  3019               	movlw	25
  4333  06CA  0237               	subwf	??___ftadd,w
  4334  06CB  1803               	btfsc	3,0
  4335  06CC  0008               	return
  4336  06CD                     l2550:	
  4337  06CD  3006               	movlw	6
  4338  06CE  00B7               	movwf	??___ftadd
  4339  06CF  0837               	movf	??___ftadd,w
  4340  06D0  00BB               	movwf	___ftadd@sign
  4341  06D1  1BB3               	btfsc	___ftadd@f1+2,7
  4342  06D2  17BB               	bsf	___ftadd@sign,7
  4343  06D3  1BB6               	btfsc	___ftadd@f2+2,7
  4344  06D4  173B               	bsf	___ftadd@sign,6
  4345  06D5  17B2               	bsf	___ftadd@f1+1,7
  4346  06D6  30FF               	movlw	255
  4347  06D7  05B1               	andwf	___ftadd@f1,f
  4348  06D8  30FF               	movlw	255
  4349  06D9  05B2               	andwf	___ftadd@f1+1,f
  4350  06DA  3000               	movlw	0
  4351  06DB  05B3               	andwf	___ftadd@f1+2,f
  4352  06DC  17B5               	bsf	___ftadd@f2+1,7
  4353  06DD  30FF               	movlw	255
  4354  06DE  05B4               	andwf	___ftadd@f2,f
  4355  06DF  30FF               	movlw	255
  4356  06E0  05B5               	andwf	___ftadd@f2+1,f
  4357  06E1  3000               	movlw	0
  4358  06E2  05B6               	andwf	___ftadd@f2+2,f
  4359  06E3  083C               	movf	___ftadd@exp2,w
  4360  06E4  023D               	subwf	___ftadd@exp1,w
  4361  06E5  1803               	skipnc
  4362  06E6  2F09               	goto	l2572
  4363  06E7                     l2562:	
  4364  06E7  3001               	movlw	1
  4365  06E8                     u2375:	
  4366  06E8  35B4               	lslf	___ftadd@f2,f
  4367  06E9  0DB5               	rlf	___ftadd@f2+1,f
  4368  06EA  0DB6               	rlf	___ftadd@f2+2,f
  4369  06EB  0B89               	decfsz	9,f
  4370  06EC  2EE8               	goto	u2375
  4371  06ED  3001               	movlw	1
  4372  06EE  02BC               	subwf	___ftadd@exp2,f
  4373  06EF  083C               	movf	___ftadd@exp2,w
  4374  06F0  063D               	xorwf	___ftadd@exp1,w
  4375  06F1  1903               	skipnz
  4376  06F2  2F04               	goto	l2570
  4377  06F3  3001               	movlw	1
  4378  06F4  02BB               	subwf	___ftadd@sign,f
  4379  06F5  083B               	movf	___ftadd@sign,w
  4380  06F6  3907               	andlw	7
  4381  06F7  1903               	btfsc	3,2
  4382  06F8  2F04               	goto	l2570
  4383  06F9  2EE7               	goto	l2562
  4384  06FA                     l2568:	
  4385  06FA  3001               	movlw	1
  4386  06FB                     u2405:	
  4387  06FB  36B3               	lsrf	___ftadd@f1+2,f
  4388  06FC  0CB2               	rrf	___ftadd@f1+1,f
  4389  06FD  0CB1               	rrf	___ftadd@f1,f
  4390  06FE  0B89               	decfsz	9,f
  4391  06FF  2EFB               	goto	u2405
  4392  0700  3001               	movlw	1
  4393  0701  00B7               	movwf	??___ftadd
  4394  0702  0837               	movf	??___ftadd,w
  4395  0703  07BD               	addwf	___ftadd@exp1,f
  4396  0704                     l2570:	
  4397  0704  083D               	movf	___ftadd@exp1,w
  4398  0705  063C               	xorwf	___ftadd@exp2,w
  4399  0706  1903               	btfsc	3,2
  4400  0707  2F2E               	goto	l736
  4401  0708  2EFA               	goto	l2568
  4402  0709                     l2572:	
  4403  0709  083D               	movf	___ftadd@exp1,w
  4404  070A  023C               	subwf	___ftadd@exp2,w
  4405  070B  1803               	skipnc
  4406  070C  2F2E               	goto	l736
  4407  070D                     l2574:	
  4408  070D  3001               	movlw	1
  4409  070E                     u2435:	
  4410  070E  35B1               	lslf	___ftadd@f1,f
  4411  070F  0DB2               	rlf	___ftadd@f1+1,f
  4412  0710  0DB3               	rlf	___ftadd@f1+2,f
  4413  0711  0B89               	decfsz	9,f
  4414  0712  2F0E               	goto	u2435
  4415  0713  3001               	movlw	1
  4416  0714  02BD               	subwf	___ftadd@exp1,f
  4417  0715  083C               	movf	___ftadd@exp2,w
  4418  0716  063D               	xorwf	___ftadd@exp1,w
  4419  0717  1903               	skipnz
  4420  0718  2F2A               	goto	l2582
  4421  0719  3001               	movlw	1
  4422  071A  02BB               	subwf	___ftadd@sign,f
  4423  071B  083B               	movf	___ftadd@sign,w
  4424  071C  3907               	andlw	7
  4425  071D  1903               	btfsc	3,2
  4426  071E  2F2A               	goto	l2582
  4427  071F  2F0D               	goto	l2574
  4428  0720                     l2580:	
  4429  0720  3001               	movlw	1
  4430  0721                     u2465:	
  4431  0721  36B6               	lsrf	___ftadd@f2+2,f
  4432  0722  0CB5               	rrf	___ftadd@f2+1,f
  4433  0723  0CB4               	rrf	___ftadd@f2,f
  4434  0724  0B89               	decfsz	9,f
  4435  0725  2F21               	goto	u2465
  4436  0726  3001               	movlw	1
  4437  0727  00B7               	movwf	??___ftadd
  4438  0728  0837               	movf	??___ftadd,w
  4439  0729  07BC               	addwf	___ftadd@exp2,f
  4440  072A                     l2582:	
  4441  072A  083D               	movf	___ftadd@exp1,w
  4442  072B  063C               	xorwf	___ftadd@exp2,w
  4443  072C  1D03               	skipz
  4444  072D  2F20               	goto	l2580
  4445  072E                     l736:	
  4446  072E  1FBB               	btfss	___ftadd@sign,7
  4447  072F  2F40               	goto	l2586
  4448  0730  30FF               	movlw	255
  4449  0731  06B1               	xorwf	___ftadd@f1,f
  4450  0732  30FF               	movlw	255
  4451  0733  06B2               	xorwf	___ftadd@f1+1,f
  4452  0734  30FF               	movlw	255
  4453  0735  06B3               	xorwf	___ftadd@f1+2,f
  4454  0736  3001               	movlw	1
  4455  0737  07B1               	addwf	___ftadd@f1,f
  4456  0738  3000               	movlw	0
  4457  0739  1803               	skipnc
  4458  073A  3001               	movlw	1
  4459  073B  07B2               	addwf	___ftadd@f1+1,f
  4460  073C  3000               	movlw	0
  4461  073D  1803               	skipnc
  4462  073E  3001               	movlw	1
  4463  073F  07B3               	addwf	___ftadd@f1+2,f
  4464  0740                     l2586:	
  4465  0740  1F3B               	btfss	___ftadd@sign,6
  4466  0741  2F52               	goto	l2590
  4467  0742  30FF               	movlw	255
  4468  0743  06B4               	xorwf	___ftadd@f2,f
  4469  0744  30FF               	movlw	255
  4470  0745  06B5               	xorwf	___ftadd@f2+1,f
  4471  0746  30FF               	movlw	255
  4472  0747  06B6               	xorwf	___ftadd@f2+2,f
  4473  0748  3001               	movlw	1
  4474  0749  07B4               	addwf	___ftadd@f2,f
  4475  074A  3000               	movlw	0
  4476  074B  1803               	skipnc
  4477  074C  3001               	movlw	1
  4478  074D  07B5               	addwf	___ftadd@f2+1,f
  4479  074E  3000               	movlw	0
  4480  074F  1803               	skipnc
  4481  0750  3001               	movlw	1
  4482  0751  07B6               	addwf	___ftadd@f2+2,f
  4483  0752                     l2590:	
  4484  0752  01BB               	clrf	___ftadd@sign
  4485  0753  0831               	movf	___ftadd@f1,w
  4486  0754  07B4               	addwf	___ftadd@f2,f
  4487  0755  0832               	movf	___ftadd@f1+1,w
  4488  0756  3DB5               	addwfc	___ftadd@f2+1,f
  4489  0757  0833               	movf	___ftadd@f1+2,w
  4490  0758  3DB6               	addwfc	___ftadd@f2+2,f
  4491  0759  1FB6               	btfss	___ftadd@f2+2,7
  4492  075A  2F6D               	goto	l2600
  4493  075B  30FF               	movlw	255
  4494  075C  06B4               	xorwf	___ftadd@f2,f
  4495  075D  30FF               	movlw	255
  4496  075E  06B5               	xorwf	___ftadd@f2+1,f
  4497  075F  30FF               	movlw	255
  4498  0760  06B6               	xorwf	___ftadd@f2+2,f
  4499  0761  3001               	movlw	1
  4500  0762  07B4               	addwf	___ftadd@f2,f
  4501  0763  3000               	movlw	0
  4502  0764  1803               	skipnc
  4503  0765  3001               	movlw	1
  4504  0766  07B5               	addwf	___ftadd@f2+1,f
  4505  0767  3000               	movlw	0
  4506  0768  1803               	skipnc
  4507  0769  3001               	movlw	1
  4508  076A  07B6               	addwf	___ftadd@f2+2,f
  4509  076B  01BB               	clrf	___ftadd@sign
  4510  076C  0ABB               	incf	___ftadd@sign,f
  4511  076D                     l2600:	
  4512  076D  0834               	movf	___ftadd@f2,w
  4513  076E  00A0               	movwf	___ftpack@arg
  4514  076F  0835               	movf	___ftadd@f2+1,w
  4515  0770  00A1               	movwf	___ftpack@arg+1
  4516  0771  0836               	movf	___ftadd@f2+2,w
  4517  0772  00A2               	movwf	___ftpack@arg+2
  4518  0773  083D               	movf	___ftadd@exp1,w
  4519  0774  00B7               	movwf	??___ftadd
  4520  0775  0837               	movf	??___ftadd,w
  4521  0776  00A3               	movwf	___ftpack@exp
  4522  0777  083B               	movf	___ftadd@sign,w
  4523  0778  00B8               	movwf	??___ftadd+1
  4524  0779  0838               	movf	??___ftadd+1,w
  4525  077A  00A4               	movwf	___ftpack@sign
  4526  077B  318A  22D4         	fcall	___ftpack
  4527  077D  0020               	movlb	0	; select bank0
  4528  077E  0820               	movf	?___ftpack,w
  4529  077F  00B1               	movwf	?___ftadd
  4530  0780  0821               	movf	?___ftpack+1,w
  4531  0781  00B2               	movwf	?___ftadd+1
  4532  0782  0822               	movf	?___ftpack+2,w
  4533  0783  00B3               	movwf	?___ftadd+2
  4534  0784  0008               	return
  4535  0785                     __end_of___ftadd:	
  4536                           
  4537                           	psect	text12
  4538  08B8                     __ptext12:	
  4539 ;; *************** function ___altoft *****************
  4540 ;; Defined at:
  4541 ;;		line 42 in file "/Applications/microchip/xc8/v1.32/sources/common/altoft.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;  c               4   60[BANK0 ] long 
  4544 ;; Auto vars:     Size  Location     Type
  4545 ;;  sign            1   67[BANK0 ] unsigned char 
  4546 ;;  exp             1   66[BANK0 ] unsigned char 
  4547 ;; Return value:  Size  Location     Type
  4548 ;;                  3   60[BANK0 ] float 
  4549 ;; Registers used:
  4550 ;;		wreg, status,2, status,0, pclath, cstack
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4556 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4557 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4558 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4559 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4560 ;;Total ram usage:        8 bytes
  4561 ;; Hardware stack levels used:    1
  4562 ;; Hardware stack levels required when called:    2
  4563 ;; This function calls:
  4564 ;;		___ftpack
  4565 ;; This function is called by:
  4566 ;;		_floor
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           
  4570                           
  4571                           ;psect for function ___altoft
  4572  08B8                     ___altoft:	
  4573                           
  4574                           ;incstack = 0
  4575                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  4576  08B8  0020               	movlb	0	; select bank0
  4577  08B9  01E3               	clrf	___altoft@sign
  4578  08BA  308E               	movlw	142
  4579  08BB  00E0               	movwf	??___altoft
  4580  08BC  0860               	movf	??___altoft,w
  4581  08BD  00E2               	movwf	___altoft@exp
  4582  08BE  1FDF               	btfss	___altoft@c+3,7
  4583  08BF  28CD               	goto	l2510
  4584  08C0  09DC               	comf	___altoft@c,f
  4585  08C1  09DD               	comf	___altoft@c+1,f
  4586  08C2  09DE               	comf	___altoft@c+2,f
  4587  08C3  09DF               	comf	___altoft@c+3,f
  4588  08C4  0ADC               	incf	___altoft@c,f
  4589  08C5  1903               	skipnz
  4590  08C6  0ADD               	incf	___altoft@c+1,f
  4591  08C7  1903               	skipnz
  4592  08C8  0ADE               	incf	___altoft@c+2,f
  4593  08C9  1903               	skipnz
  4594  08CA  0ADF               	incf	___altoft@c+3,f
  4595  08CB  01E3               	clrf	___altoft@sign
  4596  08CC  0AE3               	incf	___altoft@sign,f
  4597  08CD                     l2510:	
  4598  08CD  30FF               	movlw	255
  4599  08CE  055F               	andwf	___altoft@c+3,w
  4600  08CF  1903               	btfsc	3,2
  4601  08D0  28DD               	goto	l2512
  4602  08D1  3001               	movlw	1
  4603  08D2                     u2255:	
  4604  08D2  36DF               	lsrf	___altoft@c+3,f
  4605  08D3  0CDE               	rrf	___altoft@c+2,f
  4606  08D4  0CDD               	rrf	___altoft@c+1,f
  4607  08D5  0CDC               	rrf	___altoft@c,f
  4608  08D6  0B89               	decfsz	9,f
  4609  08D7  28D2               	goto	u2255
  4610  08D8  3001               	movlw	1
  4611  08D9  00E0               	movwf	??___altoft
  4612  08DA  0860               	movf	??___altoft,w
  4613  08DB  07E2               	addwf	___altoft@exp,f
  4614  08DC  28CD               	goto	l2510
  4615  08DD                     l2512:	
  4616  08DD  085C               	movf	___altoft@c,w
  4617  08DE  00A0               	movwf	___ftpack@arg
  4618  08DF  085D               	movf	___altoft@c+1,w
  4619  08E0  00A1               	movwf	___ftpack@arg+1
  4620  08E1  085E               	movf	___altoft@c+2,w
  4621  08E2  00A2               	movwf	___ftpack@arg+2
  4622  08E3  0862               	movf	___altoft@exp,w
  4623  08E4  00E0               	movwf	??___altoft
  4624  08E5  0860               	movf	??___altoft,w
  4625  08E6  00A3               	movwf	___ftpack@exp
  4626  08E7  0863               	movf	___altoft@sign,w
  4627  08E8  00E1               	movwf	??___altoft+1
  4628  08E9  0861               	movf	??___altoft+1,w
  4629  08EA  00A4               	movwf	___ftpack@sign
  4630  08EB  318A  22D4         	fcall	___ftpack
  4631  08ED  0020               	movlb	0	; select bank0
  4632  08EE  0820               	movf	?___ftpack,w
  4633  08EF  00DC               	movwf	?___altoft
  4634  08F0  0821               	movf	?___ftpack+1,w
  4635  08F1  00DD               	movwf	?___altoft+1
  4636  08F2  0822               	movf	?___ftpack+2,w
  4637  08F3  00DE               	movwf	?___altoft+2
  4638  08F4  0008               	return
  4639  08F5                     __end_of___altoft:	
  4640                           
  4641                           	psect	text13
  4642  171B                     __ptext13:	
  4643 ;; *************** function ___lbtoft *****************
  4644 ;; Defined at:
  4645 ;;		line 27 in file "/Applications/microchip/xc8/v1.32/sources/common/lbtoft.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;  c               1    wreg     unsigned char 
  4648 ;; Auto vars:     Size  Location     Type
  4649 ;;  c               1   15[BANK0 ] unsigned char 
  4650 ;; Return value:  Size  Location     Type
  4651 ;;                  3    8[BANK0 ] float 
  4652 ;; Registers used:
  4653 ;;		wreg, status,2, status,0, pclath, cstack
  4654 ;; Tracked objects:
  4655 ;;		On entry : 0/0
  4656 ;;		On exit  : 0/0
  4657 ;;		Unchanged: 0/0
  4658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4659 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4660 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4661 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4662 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4663 ;;Total ram usage:        8 bytes
  4664 ;; Hardware stack levels used:    1
  4665 ;; Hardware stack levels required when called:    2
  4666 ;; This function calls:
  4667 ;;		___ftpack
  4668 ;; This function is called by:
  4669 ;;		_HSVtoRGB
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672                           
  4673                           
  4674                           ;psect for function ___lbtoft
  4675  171B                     ___lbtoft:	
  4676                           
  4677                           ;incstack = 0
  4678                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  4679                           ;___lbtoft@c stored from wreg
  4680  171B  0020               	movlb	0	; select bank0
  4681  171C  00AF               	movwf	___lbtoft@c
  4682  171D  082F               	movf	___lbtoft@c,w
  4683  171E  00AB               	movwf	??___lbtoft
  4684  171F  01AC               	clrf	??___lbtoft+1
  4685  1720  01AD               	clrf	??___lbtoft+2
  4686  1721  082B               	movf	??___lbtoft,w
  4687  1722  00A0               	movwf	___ftpack@arg
  4688  1723  082C               	movf	??___lbtoft+1,w
  4689  1724  00A1               	movwf	___ftpack@arg+1
  4690  1725  082D               	movf	??___lbtoft+2,w
  4691  1726  00A2               	movwf	___ftpack@arg+2
  4692  1727  308E               	movlw	142
  4693  1728  00AE               	movwf	??___lbtoft+3
  4694  1729  082E               	movf	??___lbtoft+3,w
  4695  172A  00A3               	movwf	___ftpack@exp
  4696  172B  01A4               	clrf	___ftpack@sign
  4697  172C  318A  22D4         	fcall	___ftpack
  4698  172E  0020               	movlb	0	; select bank0
  4699  172F  0820               	movf	?___ftpack,w
  4700  1730  00A8               	movwf	?___lbtoft
  4701  1731  0821               	movf	?___ftpack+1,w
  4702  1732  00A9               	movwf	?___lbtoft+1
  4703  1733  0822               	movf	?___ftpack+2,w
  4704  1734  00AA               	movwf	?___lbtoft+2
  4705  1735  0008               	return
  4706  1736                     __end_of___lbtoft:	
  4707                           
  4708                           	psect	text14
  4709  0801                     __ptext14:	
  4710 ;; *************** function ___ftneg *****************
  4711 ;; Defined at:
  4712 ;;		line 15 in file "/Applications/microchip/xc8/v1.32/sources/common/ftneg.c"
  4713 ;; Parameters:    Size  Location     Type
  4714 ;;  f1              3   14[BANK0 ] float 
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;		None
  4717 ;; Return value:  Size  Location     Type
  4718 ;;                  3   14[BANK0 ] float 
  4719 ;; Registers used:
  4720 ;;		wreg
  4721 ;; Tracked objects:
  4722 ;;		On entry : 0/0
  4723 ;;		On exit  : 0/0
  4724 ;;		Unchanged: 0/0
  4725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4726 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4729 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4730 ;;Total ram usage:        3 bytes
  4731 ;; Hardware stack levels used:    1
  4732 ;; Hardware stack levels required when called:    1
  4733 ;; This function calls:
  4734 ;;		Nothing
  4735 ;; This function is called by:
  4736 ;;		_HSVtoRGB
  4737 ;; This function uses a non-reentrant model
  4738 ;;
  4739                           
  4740                           
  4741                           ;psect for function ___ftneg
  4742  0801                     ___ftneg:	
  4743                           
  4744                           ;incstack = 0
  4745                           ; Regs used in ___ftneg: [wreg]
  4746  0801  0020               	movlb	0	; select bank0
  4747  0802  0830               	movf	___ftneg@f1+2,w
  4748  0803  042F               	iorwf	___ftneg@f1+1,w
  4749  0804  042E               	iorwf	___ftneg@f1,w
  4750  0805  1903               	skipnz
  4751  0806  0008               	return
  4752  0807  3080               	movlw	128
  4753  0808  06B0               	xorwf	___ftneg@f1+2,f
  4754  0809  0008               	return
  4755  080A                     __end_of___ftneg:	
  4756                           
  4757                           	psect	text15
  4758  0D6D                     __ptext15:	
  4759 ;; *************** function ___ftmul *****************
  4760 ;; Defined at:
  4761 ;;		line 62 in file "/Applications/microchip/xc8/v1.32/sources/common/ftmul.c"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;  f1              3   30[BANK0 ] float 
  4764 ;;  f2              3   33[BANK0 ] float 
  4765 ;; Auto vars:     Size  Location     Type
  4766 ;;  f3_as_produc    3   41[BANK0 ] unsigned um
  4767 ;;  sign            1   45[BANK0 ] unsigned char 
  4768 ;;  cntr            1   44[BANK0 ] unsigned char 
  4769 ;;  exp             1   40[BANK0 ] unsigned char 
  4770 ;; Return value:  Size  Location     Type
  4771 ;;                  3   30[BANK0 ] float 
  4772 ;; Registers used:
  4773 ;;		wreg, status,2, status,0, pclath, cstack
  4774 ;; Tracked objects:
  4775 ;;		On entry : 0/0
  4776 ;;		On exit  : 0/0
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4779 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4780 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4781 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4782 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4783 ;;Total ram usage:       16 bytes
  4784 ;; Hardware stack levels used:    1
  4785 ;; Hardware stack levels required when called:    2
  4786 ;; This function calls:
  4787 ;;		___ftpack
  4788 ;; This function is called by:
  4789 ;;		_HSVtoRGB
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793                           
  4794                           ;psect for function ___ftmul
  4795  0D6D                     ___ftmul:	
  4796                           
  4797                           ;incstack = 0
  4798                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4799  0D6D  0020               	movlb	0	; select bank0
  4800  0D6E  083E               	movf	___ftmul@f1,w
  4801  0D6F  00C4               	movwf	??___ftmul
  4802  0D70  083F               	movf	___ftmul@f1+1,w
  4803  0D71  00C5               	movwf	??___ftmul+1
  4804  0D72  0840               	movf	___ftmul@f1+2,w
  4805  0D73  00C6               	movwf	??___ftmul+2
  4806  0D74  1003               	clrc
  4807  0D75  0D45               	rlf	??___ftmul+1,w
  4808  0D76  0D46               	rlf	??___ftmul+2,w
  4809  0D77  00C7               	movwf	??___ftmul+3
  4810  0D78  0847               	movf	??___ftmul+3,w
  4811  0D79  00C8               	movwf	___ftmul@exp
  4812  0D7A  08C8               	movf	___ftmul@exp,f
  4813  0D7B  1D03               	skipz
  4814  0D7C  2D84               	goto	l2820
  4815  0D7D  3000               	movlw	0
  4816  0D7E  00BE               	movwf	?___ftmul
  4817  0D7F  3000               	movlw	0
  4818  0D80  00BF               	movwf	?___ftmul+1
  4819  0D81  3000               	movlw	0
  4820  0D82  00C0               	movwf	?___ftmul+2
  4821  0D83  0008               	return
  4822  0D84                     l2820:	
  4823  0D84  0841               	movf	___ftmul@f2,w
  4824  0D85  00C4               	movwf	??___ftmul
  4825  0D86  0842               	movf	___ftmul@f2+1,w
  4826  0D87  00C5               	movwf	??___ftmul+1
  4827  0D88  0843               	movf	___ftmul@f2+2,w
  4828  0D89  00C6               	movwf	??___ftmul+2
  4829  0D8A  1003               	clrc
  4830  0D8B  0D45               	rlf	??___ftmul+1,w
  4831  0D8C  0D46               	rlf	??___ftmul+2,w
  4832  0D8D  00C7               	movwf	??___ftmul+3
  4833  0D8E  0847               	movf	??___ftmul+3,w
  4834  0D8F  00CD               	movwf	___ftmul@sign
  4835  0D90  08CD               	movf	___ftmul@sign,f
  4836  0D91  1D03               	skipz
  4837  0D92  2D9A               	goto	l2826
  4838  0D93  3000               	movlw	0
  4839  0D94  00BE               	movwf	?___ftmul
  4840  0D95  3000               	movlw	0
  4841  0D96  00BF               	movwf	?___ftmul+1
  4842  0D97  3000               	movlw	0
  4843  0D98  00C0               	movwf	?___ftmul+2
  4844  0D99  0008               	return
  4845  0D9A                     l2826:	
  4846  0D9A  084D               	movf	___ftmul@sign,w
  4847  0D9B  3E7B               	addlw	123
  4848  0D9C  00C4               	movwf	??___ftmul
  4849  0D9D  0844               	movf	??___ftmul,w
  4850  0D9E  07C8               	addwf	___ftmul@exp,f
  4851  0D9F  083E               	movf	___ftmul@f1,w
  4852  0DA0  00C4               	movwf	??___ftmul
  4853  0DA1  083F               	movf	___ftmul@f1+1,w
  4854  0DA2  00C5               	movwf	??___ftmul+1
  4855  0DA3  0840               	movf	___ftmul@f1+2,w
  4856  0DA4  00C6               	movwf	??___ftmul+2
  4857  0DA5  3010               	movlw	16
  4858  0DA6                     u2925:	
  4859  0DA6  36C6               	lsrf	??___ftmul+2,f
  4860  0DA7  0CC5               	rrf	??___ftmul+1,f
  4861  0DA8  0CC4               	rrf	??___ftmul,f
  4862  0DA9  0B89               	decfsz	9,f
  4863  0DAA  2DA6               	goto	u2925
  4864  0DAB  0844               	movf	??___ftmul,w
  4865  0DAC  00C7               	movwf	??___ftmul+3
  4866  0DAD  0847               	movf	??___ftmul+3,w
  4867  0DAE  00CD               	movwf	___ftmul@sign
  4868  0DAF  0841               	movf	___ftmul@f2,w
  4869  0DB0  00C4               	movwf	??___ftmul
  4870  0DB1  0842               	movf	___ftmul@f2+1,w
  4871  0DB2  00C5               	movwf	??___ftmul+1
  4872  0DB3  0843               	movf	___ftmul@f2+2,w
  4873  0DB4  00C6               	movwf	??___ftmul+2
  4874  0DB5  3010               	movlw	16
  4875  0DB6                     u2935:	
  4876  0DB6  36C6               	lsrf	??___ftmul+2,f
  4877  0DB7  0CC5               	rrf	??___ftmul+1,f
  4878  0DB8  0CC4               	rrf	??___ftmul,f
  4879  0DB9  0B89               	decfsz	9,f
  4880  0DBA  2DB6               	goto	u2935
  4881  0DBB  0844               	movf	??___ftmul,w
  4882  0DBC  00C7               	movwf	??___ftmul+3
  4883  0DBD  0847               	movf	??___ftmul+3,w
  4884  0DBE  06CD               	xorwf	___ftmul@sign,f
  4885  0DBF  3080               	movlw	128
  4886  0DC0  00C4               	movwf	??___ftmul
  4887  0DC1  0844               	movf	??___ftmul,w
  4888  0DC2  05CD               	andwf	___ftmul@sign,f
  4889  0DC3  17BF               	bsf	___ftmul@f1+1,7
  4890  0DC4  17C2               	bsf	___ftmul@f2+1,7
  4891  0DC5  30FF               	movlw	255
  4892  0DC6  05C1               	andwf	___ftmul@f2,f
  4893  0DC7  30FF               	movlw	255
  4894  0DC8  05C2               	andwf	___ftmul@f2+1,f
  4895  0DC9  3000               	movlw	0
  4896  0DCA  05C3               	andwf	___ftmul@f2+2,f
  4897  0DCB  3000               	movlw	0
  4898  0DCC  00C9               	movwf	___ftmul@f3_as_product
  4899  0DCD  3000               	movlw	0
  4900  0DCE  00CA               	movwf	___ftmul@f3_as_product+1
  4901  0DCF  3000               	movlw	0
  4902  0DD0  00CB               	movwf	___ftmul@f3_as_product+2
  4903  0DD1  3007               	movlw	7
  4904  0DD2  00C4               	movwf	??___ftmul
  4905  0DD3  0844               	movf	??___ftmul,w
  4906  0DD4  00CC               	movwf	___ftmul@cntr
  4907  0DD5                     l2838:	
  4908  0DD5  1C3E               	btfss	___ftmul@f1,0
  4909  0DD6  2DDD               	goto	l2842
  4910  0DD7  0841               	movf	___ftmul@f2,w
  4911  0DD8  07C9               	addwf	___ftmul@f3_as_product,f
  4912  0DD9  0842               	movf	___ftmul@f2+1,w
  4913  0DDA  3DCA               	addwfc	___ftmul@f3_as_product+1,f
  4914  0DDB  0843               	movf	___ftmul@f2+2,w
  4915  0DDC  3DCB               	addwfc	___ftmul@f3_as_product+2,f
  4916  0DDD                     l2842:	
  4917  0DDD  3001               	movlw	1
  4918  0DDE                     u2955:	
  4919  0DDE  36C0               	lsrf	___ftmul@f1+2,f
  4920  0DDF  0CBF               	rrf	___ftmul@f1+1,f
  4921  0DE0  0CBE               	rrf	___ftmul@f1,f
  4922  0DE1  0B89               	decfsz	9,f
  4923  0DE2  2DDE               	goto	u2955
  4924  0DE3  3001               	movlw	1
  4925  0DE4                     u2965:	
  4926  0DE4  35C1               	lslf	___ftmul@f2,f
  4927  0DE5  0DC2               	rlf	___ftmul@f2+1,f
  4928  0DE6  0DC3               	rlf	___ftmul@f2+2,f
  4929  0DE7  0B89               	decfsz	9,f
  4930  0DE8  2DE4               	goto	u2965
  4931  0DE9  3001               	movlw	1
  4932  0DEA  02CC               	subwf	___ftmul@cntr,f
  4933  0DEB  1D03               	btfss	3,2
  4934  0DEC  2DD5               	goto	l2838
  4935  0DED  3009               	movlw	9
  4936  0DEE  00C4               	movwf	??___ftmul
  4937  0DEF  0844               	movf	??___ftmul,w
  4938  0DF0  00CC               	movwf	___ftmul@cntr
  4939  0DF1                     l2850:	
  4940  0DF1  1C3E               	btfss	___ftmul@f1,0
  4941  0DF2  2DF9               	goto	l2854
  4942  0DF3  0841               	movf	___ftmul@f2,w
  4943  0DF4  07C9               	addwf	___ftmul@f3_as_product,f
  4944  0DF5  0842               	movf	___ftmul@f2+1,w
  4945  0DF6  3DCA               	addwfc	___ftmul@f3_as_product+1,f
  4946  0DF7  0843               	movf	___ftmul@f2+2,w
  4947  0DF8  3DCB               	addwfc	___ftmul@f3_as_product+2,f
  4948  0DF9                     l2854:	
  4949  0DF9  3001               	movlw	1
  4950  0DFA                     u2995:	
  4951  0DFA  36C0               	lsrf	___ftmul@f1+2,f
  4952  0DFB  0CBF               	rrf	___ftmul@f1+1,f
  4953  0DFC  0CBE               	rrf	___ftmul@f1,f
  4954  0DFD  0B89               	decfsz	9,f
  4955  0DFE  2DFA               	goto	u2995
  4956  0DFF  3001               	movlw	1
  4957  0E00                     u3005:	
  4958  0E00  36CB               	lsrf	___ftmul@f3_as_product+2,f
  4959  0E01  0CCA               	rrf	___ftmul@f3_as_product+1,f
  4960  0E02  0CC9               	rrf	___ftmul@f3_as_product,f
  4961  0E03  0B89               	decfsz	9,f
  4962  0E04  2E00               	goto	u3005
  4963  0E05  3001               	movlw	1
  4964  0E06  02CC               	subwf	___ftmul@cntr,f
  4965  0E07  1D03               	btfss	3,2
  4966  0E08  2DF1               	goto	l2850
  4967  0E09  0849               	movf	___ftmul@f3_as_product,w
  4968  0E0A  00A0               	movwf	___ftpack@arg
  4969  0E0B  084A               	movf	___ftmul@f3_as_product+1,w
  4970  0E0C  00A1               	movwf	___ftpack@arg+1
  4971  0E0D  084B               	movf	___ftmul@f3_as_product+2,w
  4972  0E0E  00A2               	movwf	___ftpack@arg+2
  4973  0E0F  0848               	movf	___ftmul@exp,w
  4974  0E10  00C4               	movwf	??___ftmul
  4975  0E11  0844               	movf	??___ftmul,w
  4976  0E12  00A3               	movwf	___ftpack@exp
  4977  0E13  084D               	movf	___ftmul@sign,w
  4978  0E14  00C5               	movwf	??___ftmul+1
  4979  0E15  0845               	movf	??___ftmul+1,w
  4980  0E16  00A4               	movwf	___ftpack@sign
  4981  0E17  318A  22D4         	fcall	___ftpack
  4982  0E19  0020               	movlb	0	; select bank0
  4983  0E1A  0820               	movf	?___ftpack,w
  4984  0E1B  00BE               	movwf	?___ftmul
  4985  0E1C  0821               	movf	?___ftpack+1,w
  4986  0E1D  00BF               	movwf	?___ftmul+1
  4987  0E1E  0822               	movf	?___ftpack+2,w
  4988  0E1F  00C0               	movwf	?___ftmul+2
  4989  0E20  0008               	return
  4990  0E21                     __end_of___ftmul:	
  4991                           
  4992                           	psect	text16
  4993  0CC4                     __ptext16:	
  4994 ;; *************** function ___ftdiv *****************
  4995 ;; Defined at:
  4996 ;;		line 49 in file "/Applications/microchip/xc8/v1.32/sources/pic/ftdiv.c"
  4997 ;; Parameters:    Size  Location     Type
  4998 ;;  f2              3   16[BANK0 ] float 
  4999 ;;  f1              3   19[BANK0 ] float 
  5000 ;; Auto vars:     Size  Location     Type
  5001 ;;  f3              3   27[BANK0 ] float 
  5002 ;;  sign            1   31[BANK0 ] unsigned char 
  5003 ;;  exp             1   30[BANK0 ] unsigned char 
  5004 ;;  cntr            1   26[BANK0 ] unsigned char 
  5005 ;; Return value:  Size  Location     Type
  5006 ;;                  3   16[BANK0 ] float 
  5007 ;; Registers used:
  5008 ;;		wreg, status,2, status,0, pclath, cstack
  5009 ;; Tracked objects:
  5010 ;;		On entry : 0/0
  5011 ;;		On exit  : 0/0
  5012 ;;		Unchanged: 0/0
  5013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5014 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5015 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5016 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5017 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5018 ;;Total ram usage:       16 bytes
  5019 ;; Hardware stack levels used:    1
  5020 ;; Hardware stack levels required when called:    2
  5021 ;; This function calls:
  5022 ;;		___ftpack
  5023 ;; This function is called by:
  5024 ;;		_HSVtoRGB
  5025 ;; This function uses a non-reentrant model
  5026 ;;
  5027                           
  5028                           
  5029                           ;psect for function ___ftdiv
  5030  0CC4                     ___ftdiv:	
  5031                           
  5032                           ;incstack = 0
  5033                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  5034  0CC4  0020               	movlb	0	; select bank0
  5035  0CC5  0833               	movf	___ftdiv@f1,w
  5036  0CC6  00B6               	movwf	??___ftdiv
  5037  0CC7  0834               	movf	___ftdiv@f1+1,w
  5038  0CC8  00B7               	movwf	??___ftdiv+1
  5039  0CC9  0835               	movf	___ftdiv@f1+2,w
  5040  0CCA  00B8               	movwf	??___ftdiv+2
  5041  0CCB  1003               	clrc
  5042  0CCC  0D37               	rlf	??___ftdiv+1,w
  5043  0CCD  0D38               	rlf	??___ftdiv+2,w
  5044  0CCE  00B9               	movwf	??___ftdiv+3
  5045  0CCF  0839               	movf	??___ftdiv+3,w
  5046  0CD0  00BE               	movwf	___ftdiv@exp
  5047  0CD1  08BE               	movf	___ftdiv@exp,f
  5048  0CD2  1D03               	skipz
  5049  0CD3  2CDB               	goto	l2778
  5050  0CD4  3000               	movlw	0
  5051  0CD5  00B0               	movwf	?___ftdiv
  5052  0CD6  3000               	movlw	0
  5053  0CD7  00B1               	movwf	?___ftdiv+1
  5054  0CD8  3000               	movlw	0
  5055  0CD9  00B2               	movwf	?___ftdiv+2
  5056  0CDA  0008               	return
  5057  0CDB                     l2778:	
  5058  0CDB  0830               	movf	___ftdiv@f2,w
  5059  0CDC  00B6               	movwf	??___ftdiv
  5060  0CDD  0831               	movf	___ftdiv@f2+1,w
  5061  0CDE  00B7               	movwf	??___ftdiv+1
  5062  0CDF  0832               	movf	___ftdiv@f2+2,w
  5063  0CE0  00B8               	movwf	??___ftdiv+2
  5064  0CE1  1003               	clrc
  5065  0CE2  0D37               	rlf	??___ftdiv+1,w
  5066  0CE3  0D38               	rlf	??___ftdiv+2,w
  5067  0CE4  00B9               	movwf	??___ftdiv+3
  5068  0CE5  0839               	movf	??___ftdiv+3,w
  5069  0CE6  00BF               	movwf	___ftdiv@sign
  5070  0CE7  08BF               	movf	___ftdiv@sign,f
  5071  0CE8  1D03               	skipz
  5072  0CE9  2CF1               	goto	l2784
  5073  0CEA  3000               	movlw	0
  5074  0CEB  00B0               	movwf	?___ftdiv
  5075  0CEC  3000               	movlw	0
  5076  0CED  00B1               	movwf	?___ftdiv+1
  5077  0CEE  3000               	movlw	0
  5078  0CEF  00B2               	movwf	?___ftdiv+2
  5079  0CF0  0008               	return
  5080  0CF1                     l2784:	
  5081  0CF1  3000               	movlw	0
  5082  0CF2  00BB               	movwf	___ftdiv@f3
  5083  0CF3  3000               	movlw	0
  5084  0CF4  00BC               	movwf	___ftdiv@f3+1
  5085  0CF5  3000               	movlw	0
  5086  0CF6  00BD               	movwf	___ftdiv@f3+2
  5087  0CF7  3089               	movlw	137
  5088  0CF8  073F               	addwf	___ftdiv@sign,w
  5089  0CF9  00B6               	movwf	??___ftdiv
  5090  0CFA  0836               	movf	??___ftdiv,w
  5091  0CFB  02BE               	subwf	___ftdiv@exp,f
  5092  0CFC  0833               	movf	___ftdiv@f1,w
  5093  0CFD  00B6               	movwf	??___ftdiv
  5094  0CFE  0834               	movf	___ftdiv@f1+1,w
  5095  0CFF  00B7               	movwf	??___ftdiv+1
  5096  0D00  0835               	movf	___ftdiv@f1+2,w
  5097  0D01  00B8               	movwf	??___ftdiv+2
  5098  0D02  3010               	movlw	16
  5099  0D03                     u2845:	
  5100  0D03  36B8               	lsrf	??___ftdiv+2,f
  5101  0D04  0CB7               	rrf	??___ftdiv+1,f
  5102  0D05  0CB6               	rrf	??___ftdiv,f
  5103  0D06  0B89               	decfsz	9,f
  5104  0D07  2D03               	goto	u2845
  5105  0D08  0836               	movf	??___ftdiv,w
  5106  0D09  00B9               	movwf	??___ftdiv+3
  5107  0D0A  0839               	movf	??___ftdiv+3,w
  5108  0D0B  00BF               	movwf	___ftdiv@sign
  5109  0D0C  0830               	movf	___ftdiv@f2,w
  5110  0D0D  00B6               	movwf	??___ftdiv
  5111  0D0E  0831               	movf	___ftdiv@f2+1,w
  5112  0D0F  00B7               	movwf	??___ftdiv+1
  5113  0D10  0832               	movf	___ftdiv@f2+2,w
  5114  0D11  00B8               	movwf	??___ftdiv+2
  5115  0D12  3010               	movlw	16
  5116  0D13                     u2855:	
  5117  0D13  36B8               	lsrf	??___ftdiv+2,f
  5118  0D14  0CB7               	rrf	??___ftdiv+1,f
  5119  0D15  0CB6               	rrf	??___ftdiv,f
  5120  0D16  0B89               	decfsz	9,f
  5121  0D17  2D13               	goto	u2855
  5122  0D18  0836               	movf	??___ftdiv,w
  5123  0D19  00B9               	movwf	??___ftdiv+3
  5124  0D1A  0839               	movf	??___ftdiv+3,w
  5125  0D1B  06BF               	xorwf	___ftdiv@sign,f
  5126  0D1C  3080               	movlw	128
  5127  0D1D  00B6               	movwf	??___ftdiv
  5128  0D1E  0836               	movf	??___ftdiv,w
  5129  0D1F  05BF               	andwf	___ftdiv@sign,f
  5130  0D20  17B4               	bsf	___ftdiv@f1+1,7
  5131  0D21  30FF               	movlw	255
  5132  0D22  05B3               	andwf	___ftdiv@f1,f
  5133  0D23  30FF               	movlw	255
  5134  0D24  05B4               	andwf	___ftdiv@f1+1,f
  5135  0D25  3000               	movlw	0
  5136  0D26  05B5               	andwf	___ftdiv@f1+2,f
  5137  0D27  17B1               	bsf	___ftdiv@f2+1,7
  5138  0D28  30FF               	movlw	255
  5139  0D29  05B0               	andwf	___ftdiv@f2,f
  5140  0D2A  30FF               	movlw	255
  5141  0D2B  05B1               	andwf	___ftdiv@f2+1,f
  5142  0D2C  3000               	movlw	0
  5143  0D2D  05B2               	andwf	___ftdiv@f2+2,f
  5144  0D2E  3018               	movlw	24
  5145  0D2F  00B6               	movwf	??___ftdiv
  5146  0D30  0836               	movf	??___ftdiv,w
  5147  0D31  00BA               	movwf	___ftdiv@cntr
  5148  0D32                     l2798:	
  5149  0D32  3001               	movlw	1
  5150  0D33                     u2865:	
  5151  0D33  35BB               	lslf	___ftdiv@f3,f
  5152  0D34  0DBC               	rlf	___ftdiv@f3+1,f
  5153  0D35  0DBD               	rlf	___ftdiv@f3+2,f
  5154  0D36  0B89               	decfsz	9,f
  5155  0D37  2D33               	goto	u2865
  5156  0D38  0832               	movf	___ftdiv@f2+2,w
  5157  0D39  0235               	subwf	___ftdiv@f1+2,w
  5158  0D3A  1D03               	skipz
  5159  0D3B  2D42               	goto	u2875
  5160  0D3C  0831               	movf	___ftdiv@f2+1,w
  5161  0D3D  0234               	subwf	___ftdiv@f1+1,w
  5162  0D3E  1D03               	skipz
  5163  0D3F  2D42               	goto	u2875
  5164  0D40  0830               	movf	___ftdiv@f2,w
  5165  0D41  0233               	subwf	___ftdiv@f1,w
  5166  0D42                     u2875:	
  5167  0D42  1C03               	skipc
  5168  0D43  2D4B               	goto	l2806
  5169  0D44  0830               	movf	___ftdiv@f2,w
  5170  0D45  02B3               	subwf	___ftdiv@f1,f
  5171  0D46  0831               	movf	___ftdiv@f2+1,w
  5172  0D47  3BB4               	subwfb	___ftdiv@f1+1,f
  5173  0D48  0832               	movf	___ftdiv@f2+2,w
  5174  0D49  3BB5               	subwfb	___ftdiv@f1+2,f
  5175  0D4A  143B               	bsf	___ftdiv@f3,0
  5176  0D4B                     l2806:	
  5177  0D4B  3001               	movlw	1
  5178  0D4C                     u2885:	
  5179  0D4C  35B3               	lslf	___ftdiv@f1,f
  5180  0D4D  0DB4               	rlf	___ftdiv@f1+1,f
  5181  0D4E  0DB5               	rlf	___ftdiv@f1+2,f
  5182  0D4F  0B89               	decfsz	9,f
  5183  0D50  2D4C               	goto	u2885
  5184  0D51  3001               	movlw	1
  5185  0D52  02BA               	subwf	___ftdiv@cntr,f
  5186  0D53  1D03               	btfss	3,2
  5187  0D54  2D32               	goto	l2798
  5188  0D55  083B               	movf	___ftdiv@f3,w
  5189  0D56  00A0               	movwf	___ftpack@arg
  5190  0D57  083C               	movf	___ftdiv@f3+1,w
  5191  0D58  00A1               	movwf	___ftpack@arg+1
  5192  0D59  083D               	movf	___ftdiv@f3+2,w
  5193  0D5A  00A2               	movwf	___ftpack@arg+2
  5194  0D5B  083E               	movf	___ftdiv@exp,w
  5195  0D5C  00B6               	movwf	??___ftdiv
  5196  0D5D  0836               	movf	??___ftdiv,w
  5197  0D5E  00A3               	movwf	___ftpack@exp
  5198  0D5F  083F               	movf	___ftdiv@sign,w
  5199  0D60  00B7               	movwf	??___ftdiv+1
  5200  0D61  0837               	movf	??___ftdiv+1,w
  5201  0D62  00A4               	movwf	___ftpack@sign
  5202  0D63  318A  22D4         	fcall	___ftpack
  5203  0D65  0020               	movlb	0	; select bank0
  5204  0D66  0820               	movf	?___ftpack,w
  5205  0D67  00B0               	movwf	?___ftdiv
  5206  0D68  0821               	movf	?___ftpack+1,w
  5207  0D69  00B1               	movwf	?___ftdiv+1
  5208  0D6A  0822               	movf	?___ftpack+2,w
  5209  0D6B  00B2               	movwf	?___ftdiv+2
  5210  0D6C  0008               	return
  5211  0D6D                     __end_of___ftdiv:	
  5212                           
  5213                           	psect	text17
  5214  1754                     __ptext17:	
  5215 ;; *************** function ___awtoft *****************
  5216 ;; Defined at:
  5217 ;;		line 32 in file "/Applications/microchip/xc8/v1.32/sources/common/awtoft.c"
  5218 ;; Parameters:    Size  Location     Type
  5219 ;;  c               2    8[BANK0 ] int 
  5220 ;; Auto vars:     Size  Location     Type
  5221 ;;  sign            1   13[BANK0 ] unsigned char 
  5222 ;; Return value:  Size  Location     Type
  5223 ;;                  3    8[BANK0 ] float 
  5224 ;; Registers used:
  5225 ;;		wreg, status,2, status,0, pclath, cstack
  5226 ;; Tracked objects:
  5227 ;;		On entry : 0/0
  5228 ;;		On exit  : 0/0
  5229 ;;		Unchanged: 0/0
  5230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5231 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5232 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5233 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5234 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5235 ;;Total ram usage:        6 bytes
  5236 ;; Hardware stack levels used:    1
  5237 ;; Hardware stack levels required when called:    2
  5238 ;; This function calls:
  5239 ;;		___ftpack
  5240 ;; This function is called by:
  5241 ;;		_HSVtoRGB
  5242 ;; This function uses a non-reentrant model
  5243 ;;
  5244                           
  5245                           
  5246                           ;psect for function ___awtoft
  5247  1754                     ___awtoft:	
  5248                           
  5249                           ;incstack = 0
  5250                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5251  1754  0020               	movlb	0	; select bank0
  5252  1755  01AD               	clrf	___awtoft@sign
  5253  1756  1FA9               	btfss	___awtoft@c+1,7
  5254  1757  2F5F               	goto	l2768
  5255  1758  09A8               	comf	___awtoft@c,f
  5256  1759  09A9               	comf	___awtoft@c+1,f
  5257  175A  0AA8               	incf	___awtoft@c,f
  5258  175B  1903               	skipnz
  5259  175C  0AA9               	incf	___awtoft@c+1,f
  5260  175D  01AD               	clrf	___awtoft@sign
  5261  175E  0AAD               	incf	___awtoft@sign,f
  5262  175F                     l2768:	
  5263  175F  0828               	movf	___awtoft@c,w
  5264  1760  00A0               	movwf	___ftpack@arg
  5265  1761  0829               	movf	___awtoft@c+1,w
  5266  1762  00A1               	movwf	___ftpack@arg+1
  5267  1763  01A2               	clrf	___ftpack@arg+2
  5268  1764  308E               	movlw	142
  5269  1765  00AB               	movwf	??___awtoft
  5270  1766  082B               	movf	??___awtoft,w
  5271  1767  00A3               	movwf	___ftpack@exp
  5272  1768  082D               	movf	___awtoft@sign,w
  5273  1769  00AC               	movwf	??___awtoft+1
  5274  176A  082C               	movf	??___awtoft+1,w
  5275  176B  00A4               	movwf	___ftpack@sign
  5276  176C  318A  22D4         	fcall	___ftpack
  5277  176E  0020               	movlb	0	; select bank0
  5278  176F  0820               	movf	?___ftpack,w
  5279  1770  00A8               	movwf	?___awtoft
  5280  1771  0821               	movf	?___ftpack+1,w
  5281  1772  00A9               	movwf	?___awtoft+1
  5282  1773  0822               	movf	?___ftpack+2,w
  5283  1774  00AA               	movwf	?___awtoft+2
  5284  1775  0008               	return
  5285  1776                     __end_of___awtoft:	
  5286                           
  5287                           	psect	text18
  5288  0AD4                     __ptext18:	
  5289 ;; *************** function ___ftpack *****************
  5290 ;; Defined at:
  5291 ;;		line 62 in file "/Applications/microchip/xc8/v1.32/sources/common/float.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;  arg             3    0[BANK0 ] unsigned um
  5294 ;;  exp             1    3[BANK0 ] unsigned char 
  5295 ;;  sign            1    4[BANK0 ] unsigned char 
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;		None
  5298 ;; Return value:  Size  Location     Type
  5299 ;;                  3    0[BANK0 ] float 
  5300 ;; Registers used:
  5301 ;;		wreg, status,2, status,0
  5302 ;; Tracked objects:
  5303 ;;		On entry : 0/0
  5304 ;;		On exit  : 0/0
  5305 ;;		Unchanged: 0/0
  5306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5307 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5309 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5310 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5311 ;;Total ram usage:        8 bytes
  5312 ;; Hardware stack levels used:    1
  5313 ;; Hardware stack levels required when called:    1
  5314 ;; This function calls:
  5315 ;;		Nothing
  5316 ;; This function is called by:
  5317 ;;		___altoft
  5318 ;;		___awtoft
  5319 ;;		___ftadd
  5320 ;;		___ftdiv
  5321 ;;		___ftmul
  5322 ;;		___lbtoft
  5323 ;; This function uses a non-reentrant model
  5324 ;;
  5325                           
  5326                           
  5327                           ;psect for function ___ftpack
  5328  0AD4                     ___ftpack:	
  5329                           
  5330                           ;incstack = 0
  5331                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  5332  0AD4  0020               	movlb	0	; select bank0
  5333  0AD5  0823               	movf	___ftpack@exp,w
  5334  0AD6  1903               	btfsc	3,2
  5335  0AD7  2ADD               	goto	l2456
  5336  0AD8  0822               	movf	___ftpack@arg+2,w
  5337  0AD9  0421               	iorwf	___ftpack@arg+1,w
  5338  0ADA  0420               	iorwf	___ftpack@arg,w
  5339  0ADB  1D03               	skipz
  5340  0ADC  2AEE               	goto	l2462
  5341  0ADD                     l2456:	
  5342  0ADD  3000               	movlw	0
  5343  0ADE  00A0               	movwf	?___ftpack
  5344  0ADF  3000               	movlw	0
  5345  0AE0  00A1               	movwf	?___ftpack+1
  5346  0AE1  3000               	movlw	0
  5347  0AE2  00A2               	movwf	?___ftpack+2
  5348  0AE3  0008               	return
  5349  0AE4                     l2460:	
  5350  0AE4  3001               	movlw	1
  5351  0AE5  00A5               	movwf	??___ftpack
  5352  0AE6  0825               	movf	??___ftpack,w
  5353  0AE7  07A3               	addwf	___ftpack@exp,f
  5354  0AE8  3001               	movlw	1
  5355  0AE9                     u2115:	
  5356  0AE9  36A2               	lsrf	___ftpack@arg+2,f
  5357  0AEA  0CA1               	rrf	___ftpack@arg+1,f
  5358  0AEB  0CA0               	rrf	___ftpack@arg,f
  5359  0AEC  0B89               	decfsz	9,f
  5360  0AED  2AE9               	goto	u2115
  5361  0AEE                     l2462:	
  5362  0AEE  30FE               	movlw	254
  5363  0AEF  0522               	andwf	___ftpack@arg+2,w
  5364  0AF0  1903               	btfsc	3,2
  5365  0AF1  2B07               	goto	l674
  5366  0AF2  2AE4               	goto	l2460
  5367  0AF3                     l2464:	
  5368  0AF3  3001               	movlw	1
  5369  0AF4  00A5               	movwf	??___ftpack
  5370  0AF5  0825               	movf	??___ftpack,w
  5371  0AF6  07A3               	addwf	___ftpack@exp,f
  5372  0AF7  3001               	movlw	1
  5373  0AF8  07A0               	addwf	___ftpack@arg,f
  5374  0AF9  3000               	movlw	0
  5375  0AFA  1803               	skipnc
  5376  0AFB  3001               	movlw	1
  5377  0AFC  07A1               	addwf	___ftpack@arg+1,f
  5378  0AFD  3000               	movlw	0
  5379  0AFE  1803               	skipnc
  5380  0AFF  3001               	movlw	1
  5381  0B00  07A2               	addwf	___ftpack@arg+2,f
  5382  0B01  3001               	movlw	1
  5383  0B02                     u2135:	
  5384  0B02  36A2               	lsrf	___ftpack@arg+2,f
  5385  0B03  0CA1               	rrf	___ftpack@arg+1,f
  5386  0B04  0CA0               	rrf	___ftpack@arg,f
  5387  0B05  0B89               	decfsz	9,f
  5388  0B06  2B02               	goto	u2135
  5389  0B07                     l674:	
  5390  0B07  30FF               	movlw	255
  5391  0B08  0522               	andwf	___ftpack@arg+2,w
  5392  0B09  1903               	btfsc	3,2
  5393  0B0A  2B14               	goto	l2472
  5394  0B0B  2AF3               	goto	l2464
  5395  0B0C                     l2470:	
  5396  0B0C  3001               	movlw	1
  5397  0B0D  02A3               	subwf	___ftpack@exp,f
  5398  0B0E  3001               	movlw	1
  5399  0B0F                     u2155:	
  5400  0B0F  35A0               	lslf	___ftpack@arg,f
  5401  0B10  0DA1               	rlf	___ftpack@arg+1,f
  5402  0B11  0DA2               	rlf	___ftpack@arg+2,f
  5403  0B12  0B89               	decfsz	9,f
  5404  0B13  2B0F               	goto	u2155
  5405  0B14                     l2472:	
  5406  0B14  1FA1               	btfss	___ftpack@arg+1,7
  5407  0B15  2B0C               	goto	l2470
  5408  0B16  1823               	btfsc	___ftpack@exp,0
  5409  0B17  2B1E               	goto	l680
  5410  0B18  30FF               	movlw	255
  5411  0B19  05A0               	andwf	___ftpack@arg,f
  5412  0B1A  307F               	movlw	127
  5413  0B1B  05A1               	andwf	___ftpack@arg+1,f
  5414  0B1C  30FF               	movlw	255
  5415  0B1D  05A2               	andwf	___ftpack@arg+2,f
  5416  0B1E                     l680:	
  5417  0B1E  1003               	clrc
  5418  0B1F  0CA3               	rrf	___ftpack@exp,f
  5419  0B20  0823               	movf	___ftpack@exp,w
  5420  0B21  00A5               	movwf	??___ftpack
  5421  0B22  01A6               	clrf	??___ftpack+1
  5422  0B23  01A7               	clrf	??___ftpack+2
  5423  0B24  3010               	movlw	16
  5424  0B25                     u2185:	
  5425  0B25  35A5               	lslf	??___ftpack,f
  5426  0B26  0DA6               	rlf	??___ftpack+1,f
  5427  0B27  0DA7               	rlf	??___ftpack+2,f
  5428  0B28  0B89               	decfsz	9,f
  5429  0B29  2B25               	goto	u2185
  5430  0B2A  0825               	movf	??___ftpack,w
  5431  0B2B  04A0               	iorwf	___ftpack@arg,f
  5432  0B2C  0826               	movf	??___ftpack+1,w
  5433  0B2D  04A1               	iorwf	___ftpack@arg+1,f
  5434  0B2E  0827               	movf	??___ftpack+2,w
  5435  0B2F  04A2               	iorwf	___ftpack@arg+2,f
  5436  0B30  0824               	movf	___ftpack@sign,w
  5437  0B31  1903               	btfsc	3,2
  5438  0B32  0008               	return
  5439  0B33  17A2               	bsf	___ftpack@arg+2,7
  5440  0B34  0008               	return
  5441  0B35                     __end_of___ftpack:	
  5442                           
  5443                           	psect	text19
  5444  0495                     __ptext19:	
  5445 ;; *************** function _setTime *****************
  5446 ;; Defined at:
  5447 ;;		line 695 in file "../main.c"
  5448 ;; Parameters:    Size  Location     Type
  5449 ;;		None
  5450 ;; Auto vars:     Size  Location     Type
  5451 ;;  currentField    2   41[BANK0 ] unsigned int 
  5452 ;;  tempValue       2   39[BANK0 ] int 
  5453 ;;  currentField    2   36[BANK0 ] int 
  5454 ;;  tempValueUni    2   31[BANK0 ] int 
  5455 ;;  tempValueTen    2   29[BANK0 ] int 
  5456 ;;  i               1   38[BANK0 ] unsigned char 
  5457 ;;  tempMinutes     1   35[BANK0 ] unsigned char 
  5458 ;;  tempHours       1   34[BANK0 ] unsigned char 
  5459 ;;  changesMadeF    1   33[BANK0 ] unsigned char 
  5460 ;; Return value:  Size  Location     Type
  5461 ;;		None               void
  5462 ;; Registers used:
  5463 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5464 ;; Tracked objects:
  5465 ;;		On entry : 0/0
  5466 ;;		On exit  : 0/0
  5467 ;;		Unchanged: 0/0
  5468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5470 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5471 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5472 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5473 ;;Total ram usage:       17 bytes
  5474 ;; Hardware stack levels used:    1
  5475 ;; Hardware stack levels required when called:    3
  5476 ;; This function calls:
  5477 ;;		_DelayMs
  5478 ;;		___awdiv
  5479 ;;		___awmod
  5480 ;;		_bitmapClear
  5481 ;;		_bitmapPutPixel
  5482 ;; This function is called by:
  5483 ;;		_main
  5484 ;; This function uses a non-reentrant model
  5485 ;;
  5486                           
  5487                           
  5488                           ;psect for function _setTime
  5489  0495                     _setTime:	
  5490                           
  5491                           ;main.c: 697: unsigned char i, changesMadeFlag;
  5492                           ;main.c: 698: signed int currentFieldValue, tempValue, tempValueTens, tempValueUnits;
  5493                           ;main.c: 699: unsigned int currentFieldSelected;
  5494                           ;main.c: 700: unsigned char tempHours, tempMinutes;
  5495                           ;main.c: 702: currentFieldValue = currentFieldSelected = 0;
  5496                           
  5497                           ;incstack = 0
  5498                           ; Regs used in _setTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5499  0495  0020               	movlb	0	; select bank0
  5500  0496  01C9               	clrf	setTime@currentFieldSelected
  5501  0497  01CA               	clrf	setTime@currentFieldSelected+1
  5502  0498  01C4               	clrf	setTime@currentFieldValue
  5503  0499  01C5               	clrf	setTime@currentFieldValue+1
  5504                           
  5505                           ;main.c: 703: changesMadeFlag = 1;
  5506  049A  01C1               	clrf	setTime@changesMadeFlag
  5507  049B  0AC1               	incf	setTime@changesMadeFlag,f
  5508                           
  5509                           ;main.c: 706: tempHours = hours;
  5510  049C  087C               	movf	_hours,w	;volatile
  5511  049D  00BA               	movwf	??_setTime
  5512  049E  083A               	movf	??_setTime,w
  5513  049F  00C2               	movwf	setTime@tempHours
  5514                           
  5515                           ;main.c: 707: tempMinutes = minutes;
  5516  04A0  0021               	movlb	1	; select bank1
  5517  04A1  086D               	movf	_minutes^(0+128),w	;volatile
  5518  04A2  0020               	movlb	0	; select bank0
  5519  04A3  00BA               	movwf	??_setTime
  5520  04A4  083A               	movf	??_setTime,w
  5521  04A5  00C3               	movwf	setTime@tempMinutes
  5522                           
  5523                           ;main.c: 710: TMR0IE = 1;
  5524  04A6  168B               	bsf	11,5	;volatile
  5525                           
  5526                           ;main.c: 713: timerTicks = 0;
  5527  04A7  0022               	movlb	2	; select bank2
  5528  04A8  01AE               	clrf	_timerTicks^(0+256)	;volatile
  5529  04A9  01AF               	clrf	(_timerTicks+1)^(0+256)	;volatile
  5530                           
  5531                           ;main.c: 714: TMR2 = 0;
  5532  04AA  0020               	movlb	0	; select bank0
  5533  04AB  019A               	clrf	26	;volatile
  5534                           
  5535                           ;main.c: 715: T2CONbits.TMR2ON = 1;
  5536  04AC  151C               	bsf	28,2	;volatile
  5537  04AD                     l3284:	
  5538                           ;main.c: 718: while(1)
  5539                           
  5540                           
  5541                           ;main.c: 719: {
  5542                           ;main.c: 720: if(timerTicks > 10000) break;
  5543  04AD  3027               	movlw	39
  5544  04AE  0022               	movlb	2	; select bank2
  5545  04AF  022F               	subwf	(_timerTicks+1)^(0+256),w	;volatile
  5546  04B0  3011               	movlw	17
  5547  04B1  1903               	skipnz
  5548  04B2  022E               	subwf	_timerTicks^(0+256),w	;volatile
  5549  04B3  1803               	btfsc	3,0
  5550  04B4  2E86               	goto	l263
  5551                           
  5552                           ;main.c: 722: if(PORTBbits.RB2 == 0 )
  5553  04B5  0020               	movlb	0	; select bank0
  5554  04B6  190D               	btfsc	13,2	;volatile
  5555  04B7  2CCE               	goto	l264
  5556                           
  5557                           ;main.c: 723: {
  5558                           ;main.c: 724: DelayMs(10);
  5559  04B8  300A               	movlw	10
  5560  04B9  00AC               	movwf	DelayMs@ms
  5561  04BA  3000               	movlw	0
  5562  04BB  00AD               	movwf	DelayMs@ms+1
  5563  04BC  318A  2225  3184   	fcall	_DelayMs
  5564  04BF                     l265:	
  5565                           ;main.c: 725: while(!PORTBbits.RB2);
  5566                           
  5567  04BF  0020               	movlb	0	; select bank0
  5568  04C0  1D0D               	btfss	13,2	;volatile
  5569  04C1  2CBF               	goto	l265
  5570                           
  5571                           ;main.c: 726: DelayMs(10);
  5572  04C2  300A               	movlw	10
  5573  04C3  00AC               	movwf	DelayMs@ms
  5574  04C4  3000               	movlw	0
  5575  04C5  00AD               	movwf	DelayMs@ms+1
  5576  04C6  318A  2225  3184   	fcall	_DelayMs
  5577                           
  5578                           ;main.c: 728: currentFieldValue--;
  5579  04C9  30FF               	movlw	255
  5580  04CA  0020               	movlb	0	; select bank0
  5581  04CB  07C4               	addwf	setTime@currentFieldValue,f
  5582  04CC  30FF               	movlw	255
  5583  04CD  2CE5               	goto	L16
  5584  04CE                     l264:	
  5585                           ;main.c: 730: }
  5586                           
  5587                           ;main.c: 729: changesMadeFlag = 1;
  5588                           
  5589                           
  5590                           ;main.c: 731: else if(PORTBbits.RB3 == 0 )
  5591  04CE  198D               	btfsc	13,3	;volatile
  5592  04CF  2CE7               	goto	l269
  5593                           
  5594                           ;main.c: 732: {
  5595                           ;main.c: 733: DelayMs(10);
  5596  04D0  300A               	movlw	10
  5597  04D1  00AC               	movwf	DelayMs@ms
  5598  04D2  3000               	movlw	0
  5599  04D3  00AD               	movwf	DelayMs@ms+1
  5600  04D4  318A  2225  3184   	fcall	_DelayMs
  5601  04D7                     l270:	
  5602                           ;main.c: 734: while(!PORTBbits.RB3);
  5603                           
  5604  04D7  0020               	movlb	0	; select bank0
  5605  04D8  1D8D               	btfss	13,3	;volatile
  5606  04D9  2CD7               	goto	l270
  5607                           
  5608                           ;main.c: 735: DelayMs(10);
  5609  04DA  300A               	movlw	10
  5610  04DB  00AC               	movwf	DelayMs@ms
  5611  04DC  3000               	movlw	0
  5612  04DD  00AD               	movwf	DelayMs@ms+1
  5613  04DE  318A  2225  3184   	fcall	_DelayMs
  5614                           
  5615                           ;main.c: 737: currentFieldValue++;
  5616  04E1  3001               	movlw	1
  5617  04E2  0020               	movlb	0	; select bank0
  5618  04E3  07C4               	addwf	setTime@currentFieldValue,f
  5619  04E4  3000               	movlw	0
  5620  04E5                     L16:	
  5621  04E5  3DC5               	addwfc	setTime@currentFieldValue+1,f
  5622  04E6  2CFF               	goto	l3310
  5623  04E7                     l269:	
  5624                           ;main.c: 739: }
  5625                           
  5626                           ;main.c: 738: changesMadeFlag = 1;
  5627                           
  5628                           
  5629                           ;main.c: 740: else if(PORTBbits.RB4 == 0 )
  5630  04E7  1A0D               	btfsc	13,4	;volatile
  5631  04E8  2D01               	goto	l3312
  5632                           
  5633                           ;main.c: 741: {
  5634                           ;main.c: 742: DelayMs(10);
  5635  04E9  300A               	movlw	10
  5636  04EA  00AC               	movwf	DelayMs@ms
  5637  04EB  3000               	movlw	0
  5638  04EC  00AD               	movwf	DelayMs@ms+1
  5639  04ED  318A  2225  3184   	fcall	_DelayMs
  5640  04F0                     l275:	
  5641                           ;main.c: 743: while(!PORTBbits.RB4);
  5642                           
  5643  04F0  0020               	movlb	0	; select bank0
  5644  04F1  1E0D               	btfss	13,4	;volatile
  5645  04F2  2CF0               	goto	l275
  5646                           
  5647                           ;main.c: 744: DelayMs(10);
  5648  04F3  300A               	movlw	10
  5649  04F4  00AC               	movwf	DelayMs@ms
  5650  04F5  3000               	movlw	0
  5651  04F6  00AD               	movwf	DelayMs@ms+1
  5652  04F7  318A  2225  3184   	fcall	_DelayMs
  5653                           
  5654                           ;main.c: 746: currentFieldSelected++;
  5655  04FA  3001               	movlw	1
  5656  04FB  0020               	movlb	0	; select bank0
  5657  04FC  07C9               	addwf	setTime@currentFieldSelected,f
  5658  04FD  3000               	movlw	0
  5659  04FE  3DCA               	addwfc	setTime@currentFieldSelected+1,f
  5660  04FF                     l3310:	
  5661                           
  5662                           ;main.c: 747: changesMadeFlag = 1;
  5663  04FF  01C1               	clrf	setTime@changesMadeFlag
  5664  0500  0AC1               	incf	setTime@changesMadeFlag,f
  5665  0501                     l3312:	
  5666                           
  5667                           ;main.c: 748: }
  5668                           ;main.c: 750: if(changesMadeFlag)
  5669  0501  0841               	movf	setTime@changesMadeFlag,w
  5670  0502  1903               	btfsc	3,2
  5671  0503  2E75               	goto	l3376
  5672                           
  5673                           ;main.c: 751: {
  5674                           ;main.c: 752: switch(currentFieldSelected)
  5675  0504  2D4F               	goto	l3338
  5676  0505                     l3316:	
  5677                           ;main.c: 753: {
  5678                           ;main.c: 754: case 0:
  5679                           
  5680                           
  5681                           ;main.c: 755: tempValue = tempHours;
  5682  0505  0842               	movf	setTime@tempHours,w
  5683  0506  00BA               	movwf	??_setTime
  5684  0507  01BB               	clrf	??_setTime+1
  5685  0508  083A               	movf	??_setTime,w
  5686  0509  00C7               	movwf	setTime@tempValue
  5687  050A  083B               	movf	??_setTime+1,w
  5688  050B  00C8               	movwf	setTime@tempValue+1
  5689                           
  5690                           ;main.c: 756: tempValue += currentFieldValue;
  5691  050C  0844               	movf	setTime@currentFieldValue,w
  5692  050D  07C7               	addwf	setTime@tempValue,f
  5693  050E  0845               	movf	setTime@currentFieldValue+1,w
  5694  050F  3DC8               	addwfc	setTime@tempValue+1,f
  5695                           
  5696                           ;main.c: 759: if(tempValue < 0) tempValue = 23;
  5697  0510  1FC8               	btfss	setTime@tempValue+1,7
  5698  0511  2D16               	goto	l281
  5699  0512  3017               	movlw	23
  5700  0513  00C7               	movwf	setTime@tempValue
  5701  0514  3000               	movlw	0
  5702  0515  00C8               	movwf	setTime@tempValue+1
  5703  0516                     l281:	
  5704                           
  5705                           ;main.c: 760: if(tempValue > 23) tempValue = 0;
  5706  0516  0848               	movf	setTime@tempValue+1,w
  5707  0517  3A80               	xorlw	128
  5708  0518  00BA               	movwf	??_setTime
  5709  0519  3080               	movlw	128
  5710  051A  023A               	subwf	??_setTime,w
  5711  051B  1D03               	skipz
  5712  051C  2D1F               	goto	u3595
  5713  051D  3018               	movlw	24
  5714  051E  0247               	subwf	setTime@tempValue,w
  5715  051F                     u3595:	
  5716  051F  1C03               	skipc
  5717  0520  2D24               	goto	l3324
  5718  0521  0020               	movlb	0	; select bank0
  5719  0522  01C7               	clrf	setTime@tempValue
  5720  0523  01C8               	clrf	setTime@tempValue+1
  5721  0524                     l3324:	
  5722                           
  5723                           ;main.c: 761: tempHours = tempValue;
  5724  0524  0020               	movlb	0	; select bank0
  5725  0525  0847               	movf	setTime@tempValue,w
  5726  0526  00BA               	movwf	??_setTime
  5727  0527  083A               	movf	??_setTime,w
  5728  0528  00C2               	movwf	setTime@tempHours
  5729                           
  5730                           ;main.c: 762: break;
  5731  0529  2D5C               	goto	l3340
  5732  052A                     l3326:	
  5733                           ;main.c: 764: case 1:
  5734                           
  5735                           
  5736                           ;main.c: 765: tempValue = tempMinutes;
  5737  052A  0843               	movf	setTime@tempMinutes,w
  5738  052B  00BA               	movwf	??_setTime
  5739  052C  01BB               	clrf	??_setTime+1
  5740  052D  083A               	movf	??_setTime,w
  5741  052E  00C7               	movwf	setTime@tempValue
  5742  052F  083B               	movf	??_setTime+1,w
  5743  0530  00C8               	movwf	setTime@tempValue+1
  5744                           
  5745                           ;main.c: 766: tempValue += currentFieldValue;
  5746  0531  0844               	movf	setTime@currentFieldValue,w
  5747  0532  07C7               	addwf	setTime@tempValue,f
  5748  0533  0845               	movf	setTime@currentFieldValue+1,w
  5749  0534  3DC8               	addwfc	setTime@tempValue+1,f
  5750                           
  5751                           ;main.c: 769: if(tempValue < 0) tempValue = 59;
  5752  0535  1FC8               	btfss	setTime@tempValue+1,7
  5753  0536  2D3B               	goto	l285
  5754  0537  303B               	movlw	59
  5755  0538  00C7               	movwf	setTime@tempValue
  5756  0539  3000               	movlw	0
  5757  053A  00C8               	movwf	setTime@tempValue+1
  5758  053B                     l285:	
  5759                           
  5760                           ;main.c: 770: if(tempValue > 59) tempValue = 0;
  5761  053B  0848               	movf	setTime@tempValue+1,w
  5762  053C  3A80               	xorlw	128
  5763  053D  00BA               	movwf	??_setTime
  5764  053E  3080               	movlw	128
  5765  053F  023A               	subwf	??_setTime,w
  5766  0540  1D03               	skipz
  5767  0541  2D44               	goto	u3615
  5768  0542  303C               	movlw	60
  5769  0543  0247               	subwf	setTime@tempValue,w
  5770  0544                     u3615:	
  5771  0544  1C03               	skipc
  5772  0545  2D49               	goto	l3334
  5773  0546  0020               	movlb	0	; select bank0
  5774  0547  01C7               	clrf	setTime@tempValue
  5775  0548  01C8               	clrf	setTime@tempValue+1
  5776  0549                     l3334:	
  5777                           
  5778                           ;main.c: 771: tempMinutes = tempValue;
  5779  0549  0020               	movlb	0	; select bank0
  5780  054A  0847               	movf	setTime@tempValue,w
  5781  054B  00BA               	movwf	??_setTime
  5782  054C  083A               	movf	??_setTime,w
  5783  054D  00C3               	movwf	setTime@tempMinutes
  5784                           
  5785                           ;main.c: 776: }
  5786                           
  5787                           ;main.c: 775: break;
  5788                           
  5789                           ;main.c: 774: default:
  5790                           
  5791                           ;main.c: 772: break;
  5792  054E  2D5C               	goto	l3340
  5793  054F                     l3338:	
  5794                           
  5795                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5796                           ; Switch size 1, requested type "space"
  5797                           ; Number of cases is 1, Range of values is 0 to 0
  5798                           ; switch strategies available:
  5799                           ; Name         Instructions Cycles
  5800                           ; simple_byte            4     3 (average)
  5801                           ; direct_byte            8     6 (fixed)
  5802                           ; jumptable            260     6 (fixed)
  5803                           ;	Chosen strategy is simple_byte
  5804  054F  084A               	movf	setTime@currentFieldSelected+1,w
  5805  0550  3A00               	xorlw	0	; case 0
  5806  0551  1903               	skipnz
  5807  0552  2D54               	goto	l3802
  5808  0553  2D5C               	goto	l3340
  5809  0554                     l3802:	
  5810                           
  5811                           ; Switch size 1, requested type "space"
  5812                           ; Number of cases is 2, Range of values is 0 to 1
  5813                           ; switch strategies available:
  5814                           ; Name         Instructions Cycles
  5815                           ; simple_byte            7     4 (average)
  5816                           ; direct_byte           10     6 (fixed)
  5817                           ; jumptable            260     6 (fixed)
  5818                           ;	Chosen strategy is simple_byte
  5819  0554  0849               	movf	setTime@currentFieldSelected,w
  5820  0555  3A00               	xorlw	0	; case 0
  5821  0556  1903               	skipnz
  5822  0557  2D05               	goto	l3316
  5823  0558  3A01               	xorlw	1	; case 1
  5824  0559  1903               	skipnz
  5825  055A  2D2A               	goto	l3326
  5826  055B  2D5C               	goto	l3340
  5827  055C                     l3340:	
  5828                           
  5829                           ;main.c: 780: bitmapClear();
  5830  055C  3197  2709  3184   	fcall	_bitmapClear
  5831                           
  5832                           ;main.c: 781: tempValueTens = (tempValue/10);
  5833  055F  300A               	movlw	10
  5834  0560  0020               	movlb	0	; select bank0
  5835  0561  00A6               	movwf	___awdiv@divisor
  5836  0562  3000               	movlw	0
  5837  0563  00A7               	movwf	___awdiv@divisor+1
  5838  0564  0848               	movf	setTime@tempValue+1,w
  5839  0565  01A9               	clrf	___awdiv@dividend+1
  5840  0566  07A9               	addwf	___awdiv@dividend+1,f
  5841  0567  0847               	movf	setTime@tempValue,w
  5842  0568  01A8               	clrf	___awdiv@dividend
  5843  0569  07A8               	addwf	___awdiv@dividend,f
  5844  056A  3189  21D1  3184   	fcall	___awdiv
  5845  056D  0020               	movlb	0	; select bank0
  5846  056E  0827               	movf	?___awdiv+1,w
  5847  056F  01BE               	clrf	setTime@tempValueTens+1
  5848  0570  07BE               	addwf	setTime@tempValueTens+1,f
  5849  0571  0826               	movf	?___awdiv,w
  5850  0572  01BD               	clrf	setTime@tempValueTens
  5851  0573  07BD               	addwf	setTime@tempValueTens,f
  5852                           
  5853                           ;main.c: 782: tempValueUnits = (tempValue%10);
  5854  0574  300A               	movlw	10
  5855  0575  00B3               	movwf	___awmod@divisor
  5856  0576  3000               	movlw	0
  5857  0577  00B4               	movwf	___awmod@divisor+1
  5858  0578  0848               	movf	setTime@tempValue+1,w
  5859  0579  01B6               	clrf	___awmod@dividend+1
  5860  057A  07B6               	addwf	___awmod@dividend+1,f
  5861  057B  0847               	movf	setTime@tempValue,w
  5862  057C  01B5               	clrf	___awmod@dividend
  5863  057D  07B5               	addwf	___awmod@dividend,f
  5864  057E  3188  20F5  3184   	fcall	___awmod
  5865  0581  0020               	movlb	0	; select bank0
  5866  0582  0834               	movf	?___awmod+1,w
  5867  0583  01C0               	clrf	setTime@tempValueUnits+1
  5868  0584  07C0               	addwf	setTime@tempValueUnits+1,f
  5869  0585  0833               	movf	?___awmod,w
  5870  0586  01BF               	clrf	setTime@tempValueUnits
  5871  0587  07BF               	addwf	setTime@tempValueUnits,f
  5872                           
  5873                           ;main.c: 784: for(i=0; i<tempValueTens; i++)
  5874  0588  01C6               	clrf	setTime@i
  5875  0589                     l3356:	
  5876  0589  083E               	movf	setTime@tempValueTens+1,w
  5877  058A  3A80               	xorlw	128
  5878  058B  3C80               	sublw	128
  5879  058C  1D03               	skipz
  5880  058D  2D90               	goto	u3675
  5881  058E  083D               	movf	setTime@tempValueTens,w
  5882  058F  0246               	subwf	setTime@i,w
  5883  0590                     u3675:	
  5884  0590  1803               	btfsc	3,0
  5885  0591  2DF2               	goto	l3358
  5886                           
  5887                           ;main.c: 785: {
  5888                           ;main.c: 786: if(i < 8)
  5889  0592  3008               	movlw	8
  5890  0593  0020               	movlb	0	; select bank0
  5891  0594  0246               	subwf	setTime@i,w
  5892  0595  1803               	skipnc
  5893  0596  2DBF               	goto	l3352
  5894                           
  5895                           ;main.c: 787: {
  5896                           ;main.c: 788: bitmapPutPixel((currentFieldSelected<<2), i, 0, 0, 15);
  5897  0597  0846               	movf	setTime@i,w
  5898  0598  00BA               	movwf	??_setTime
  5899  0599  083A               	movf	??_setTime,w
  5900  059A  00A0               	movwf	bitmapPutPixel@y
  5901  059B  01A1               	clrf	bitmapPutPixel@r
  5902  059C  01A2               	clrf	bitmapPutPixel@g
  5903  059D  300F               	movlw	15
  5904  059E  00BB               	movwf	??_setTime+1
  5905  059F  083B               	movf	??_setTime+1,w
  5906  05A0  00A3               	movwf	bitmapPutPixel@b
  5907  05A1  0849               	movf	setTime@currentFieldSelected,w
  5908  05A2  00BC               	movwf	??_setTime+2
  5909  05A3  3001               	movlw	1
  5910  05A4                     u3635:	
  5911  05A4  35BC               	lslf	??_setTime+2,f
  5912  05A5  3EFF               	addlw	-1
  5913  05A6  1D03               	skipz
  5914  05A7  2DA4               	goto	u3635
  5915  05A8  353C               	lslf	??_setTime+2,w
  5916  05A9  3189  2185  3184   	fcall	_bitmapPutPixel
  5917                           
  5918                           ;main.c: 789: bitmapPutPixel((currentFieldSelected<<2)+1, i, 0, 0, 15);
  5919  05AC  0020               	movlb	0	; select bank0
  5920  05AD  0846               	movf	setTime@i,w
  5921  05AE  00BA               	movwf	??_setTime
  5922  05AF  083A               	movf	??_setTime,w
  5923  05B0  00A0               	movwf	bitmapPutPixel@y
  5924  05B1  01A1               	clrf	bitmapPutPixel@r
  5925  05B2  01A2               	clrf	bitmapPutPixel@g
  5926  05B3  300F               	movlw	15
  5927  05B4  00BB               	movwf	??_setTime+1
  5928  05B5  083B               	movf	??_setTime+1,w
  5929  05B6  00A3               	movwf	bitmapPutPixel@b
  5930  05B7  0849               	movf	setTime@currentFieldSelected,w
  5931  05B8  00BC               	movwf	??_setTime+2
  5932  05B9  3001               	movlw	1
  5933  05BA                     u3645:	
  5934  05BA  35BC               	lslf	??_setTime+2,f
  5935  05BB  3EFF               	addlw	-1
  5936  05BC  1D03               	skipz
  5937  05BD  2DBA               	goto	u3645
  5938  05BE  2DE7               	goto	L14
  5939  05BF                     l3352:	
  5940                           ;main.c: 790: }
  5941                           
  5942                           
  5943                           ;main.c: 791: else
  5944                           ;main.c: 792: {
  5945                           ;main.c: 793: bitmapPutPixel((currentFieldSelected<<2), 7, 15, 0, 0);
  5946  05BF  3007               	movlw	7
  5947  05C0  0020               	movlb	0	; select bank0
  5948  05C1  00BA               	movwf	??_setTime
  5949  05C2  083A               	movf	??_setTime,w
  5950  05C3  00A0               	movwf	bitmapPutPixel@y
  5951  05C4  300F               	movlw	15
  5952  05C5  00BB               	movwf	??_setTime+1
  5953  05C6  083B               	movf	??_setTime+1,w
  5954  05C7  00A1               	movwf	bitmapPutPixel@r
  5955  05C8  01A2               	clrf	bitmapPutPixel@g
  5956  05C9  01A3               	clrf	bitmapPutPixel@b
  5957  05CA  0849               	movf	setTime@currentFieldSelected,w
  5958  05CB  00BC               	movwf	??_setTime+2
  5959  05CC  3001               	movlw	1
  5960  05CD                     u3655:	
  5961  05CD  35BC               	lslf	??_setTime+2,f
  5962  05CE  3EFF               	addlw	-1
  5963  05CF  1D03               	skipz
  5964  05D0  2DCD               	goto	u3655
  5965  05D1  353C               	lslf	??_setTime+2,w
  5966  05D2  3189  2185  3184   	fcall	_bitmapPutPixel
  5967                           
  5968                           ;main.c: 794: bitmapPutPixel((currentFieldSelected<<2)+1, 7, 15, 0, 0);
  5969  05D5  3007               	movlw	7
  5970  05D6  0020               	movlb	0	; select bank0
  5971  05D7  00BA               	movwf	??_setTime
  5972  05D8  083A               	movf	??_setTime,w
  5973  05D9  00A0               	movwf	bitmapPutPixel@y
  5974  05DA  300F               	movlw	15
  5975  05DB  00BB               	movwf	??_setTime+1
  5976  05DC  083B               	movf	??_setTime+1,w
  5977  05DD  00A1               	movwf	bitmapPutPixel@r
  5978  05DE  01A2               	clrf	bitmapPutPixel@g
  5979  05DF  01A3               	clrf	bitmapPutPixel@b
  5980  05E0  0849               	movf	setTime@currentFieldSelected,w
  5981  05E1  00BC               	movwf	??_setTime+2
  5982  05E2  3001               	movlw	1
  5983  05E3                     u3665:	
  5984  05E3  35BC               	lslf	??_setTime+2,f
  5985  05E4  3EFF               	addlw	-1
  5986  05E5  1D03               	skipz
  5987  05E6  2DE3               	goto	u3665
  5988  05E7                     L14:	
  5989  05E7  353C               	lslf	??_setTime+2,w
  5990  05E8  3E01               	addlw	1
  5991  05E9  3189  2185  3184   	fcall	_bitmapPutPixel
  5992  05EC  3001               	movlw	1
  5993  05ED  0020               	movlb	0	; select bank0
  5994  05EE  00BA               	movwf	??_setTime
  5995  05EF  083A               	movf	??_setTime,w
  5996  05F0  07C6               	addwf	setTime@i,f
  5997  05F1  2D89               	goto	l3356
  5998  05F2                     l3358:	
  5999                           
  6000                           ;main.c: 795: }
  6001                           ;main.c: 796: }
  6002                           ;main.c: 798: for(i=0; i<tempValueUnits; i++)
  6003  05F2  0020               	movlb	0	; select bank0
  6004  05F3  01C6               	clrf	setTime@i
  6005  05F4                     l3368:	
  6006  05F4  0840               	movf	setTime@tempValueUnits+1,w
  6007  05F5  3A80               	xorlw	128
  6008  05F6  3C80               	sublw	128
  6009  05F7  1D03               	skipz
  6010  05F8  2DFB               	goto	u3735
  6011  05F9  083F               	movf	setTime@tempValueUnits,w
  6012  05FA  0246               	subwf	setTime@i,w
  6013  05FB                     u3735:	
  6014  05FB  1803               	btfsc	3,0
  6015  05FC  2E5F               	goto	l3372
  6016                           
  6017                           ;main.c: 799: {
  6018                           ;main.c: 800: if(i < 8)
  6019  05FD  3008               	movlw	8
  6020  05FE  0020               	movlb	0	; select bank0
  6021  05FF  0246               	subwf	setTime@i,w
  6022  0600  1803               	skipnc
  6023  0601  2E2B               	goto	l3364
  6024                           
  6025                           ;main.c: 801: {
  6026                           ;main.c: 802: bitmapPutPixel((currentFieldSelected<<2)+2, i, 0, 0, 15);
  6027  0602  0846               	movf	setTime@i,w
  6028  0603  00BA               	movwf	??_setTime
  6029  0604  083A               	movf	??_setTime,w
  6030  0605  00A0               	movwf	bitmapPutPixel@y
  6031  0606  01A1               	clrf	bitmapPutPixel@r
  6032  0607  01A2               	clrf	bitmapPutPixel@g
  6033  0608  300F               	movlw	15
  6034  0609  00BB               	movwf	??_setTime+1
  6035  060A  083B               	movf	??_setTime+1,w
  6036  060B  00A3               	movwf	bitmapPutPixel@b
  6037  060C  0849               	movf	setTime@currentFieldSelected,w
  6038  060D  00BC               	movwf	??_setTime+2
  6039  060E  3001               	movlw	1
  6040  060F                     u3695:	
  6041  060F  35BC               	lslf	??_setTime+2,f
  6042  0610  3EFF               	addlw	-1
  6043  0611  1D03               	skipz
  6044  0612  2E0F               	goto	u3695
  6045  0613  353C               	lslf	??_setTime+2,w
  6046  0614  3E02               	addlw	2
  6047  0615  3189  2185  3184   	fcall	_bitmapPutPixel
  6048                           
  6049                           ;main.c: 803: bitmapPutPixel((currentFieldSelected<<2)+3, i, 0, 0, 15);
  6050  0618  0020               	movlb	0	; select bank0
  6051  0619  0846               	movf	setTime@i,w
  6052  061A  00BA               	movwf	??_setTime
  6053  061B  083A               	movf	??_setTime,w
  6054  061C  00A0               	movwf	bitmapPutPixel@y
  6055  061D  01A1               	clrf	bitmapPutPixel@r
  6056  061E  01A2               	clrf	bitmapPutPixel@g
  6057  061F  300F               	movlw	15
  6058  0620  00BB               	movwf	??_setTime+1
  6059  0621  083B               	movf	??_setTime+1,w
  6060  0622  00A3               	movwf	bitmapPutPixel@b
  6061  0623  0849               	movf	setTime@currentFieldSelected,w
  6062  0624  00BC               	movwf	??_setTime+2
  6063  0625  3001               	movlw	1
  6064  0626                     u3705:	
  6065  0626  35BC               	lslf	??_setTime+2,f
  6066  0627  3EFF               	addlw	-1
  6067  0628  1D03               	skipz
  6068  0629  2E26               	goto	u3705
  6069  062A  2E54               	goto	L15
  6070  062B                     l3364:	
  6071                           ;main.c: 804: }
  6072                           
  6073                           
  6074                           ;main.c: 805: else
  6075                           ;main.c: 806: {
  6076                           ;main.c: 807: bitmapPutPixel((currentFieldSelected<<2)+2, 7, 15, 0, 0);
  6077  062B  3007               	movlw	7
  6078  062C  0020               	movlb	0	; select bank0
  6079  062D  00BA               	movwf	??_setTime
  6080  062E  083A               	movf	??_setTime,w
  6081  062F  00A0               	movwf	bitmapPutPixel@y
  6082  0630  300F               	movlw	15
  6083  0631  00BB               	movwf	??_setTime+1
  6084  0632  083B               	movf	??_setTime+1,w
  6085  0633  00A1               	movwf	bitmapPutPixel@r
  6086  0634  01A2               	clrf	bitmapPutPixel@g
  6087  0635  01A3               	clrf	bitmapPutPixel@b
  6088  0636  0849               	movf	setTime@currentFieldSelected,w
  6089  0637  00BC               	movwf	??_setTime+2
  6090  0638  3001               	movlw	1
  6091  0639                     u3715:	
  6092  0639  35BC               	lslf	??_setTime+2,f
  6093  063A  3EFF               	addlw	-1
  6094  063B  1D03               	skipz
  6095  063C  2E39               	goto	u3715
  6096  063D  353C               	lslf	??_setTime+2,w
  6097  063E  3E02               	addlw	2
  6098  063F  3189  2185  3184   	fcall	_bitmapPutPixel
  6099                           
  6100                           ;main.c: 808: bitmapPutPixel((currentFieldSelected<<2)+3, 7, 15, 0, 0);
  6101  0642  3007               	movlw	7
  6102  0643  0020               	movlb	0	; select bank0
  6103  0644  00BA               	movwf	??_setTime
  6104  0645  083A               	movf	??_setTime,w
  6105  0646  00A0               	movwf	bitmapPutPixel@y
  6106  0647  300F               	movlw	15
  6107  0648  00BB               	movwf	??_setTime+1
  6108  0649  083B               	movf	??_setTime+1,w
  6109  064A  00A1               	movwf	bitmapPutPixel@r
  6110  064B  01A2               	clrf	bitmapPutPixel@g
  6111  064C  01A3               	clrf	bitmapPutPixel@b
  6112  064D  0849               	movf	setTime@currentFieldSelected,w
  6113  064E  00BC               	movwf	??_setTime+2
  6114  064F  3001               	movlw	1
  6115  0650                     u3725:	
  6116  0650  35BC               	lslf	??_setTime+2,f
  6117  0651  3EFF               	addlw	-1
  6118  0652  1D03               	skipz
  6119  0653  2E50               	goto	u3725
  6120  0654                     L15:	
  6121  0654  353C               	lslf	??_setTime+2,w
  6122  0655  3E03               	addlw	3
  6123  0656  3189  2185  3184   	fcall	_bitmapPutPixel
  6124  0659  3001               	movlw	1
  6125  065A  0020               	movlb	0	; select bank0
  6126  065B  00BA               	movwf	??_setTime
  6127  065C  083A               	movf	??_setTime,w
  6128  065D  07C6               	addwf	setTime@i,f
  6129  065E  2DF4               	goto	l3368
  6130  065F                     l3372:	
  6131                           ;main.c: 827: }
  6132                           
  6133                           ;main.c: 826: break;
  6134                           
  6135                           ;main.c: 825: default:
  6136                           
  6137                           ;main.c: 823: break;
  6138                           
  6139                           ;main.c: 820: case 1:
  6140                           
  6141                           ;main.c: 818: break;
  6142                           
  6143                           ;main.c: 814: {
  6144                           ;main.c: 815: case 0:
  6145                           
  6146                           ;main.c: 809: }
  6147                           ;main.c: 810: }
  6148                           ;main.c: 813: switch(currentFieldSelected)
  6149                           
  6150                           
  6151                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6152                           ; Switch size 1, requested type "space"
  6153                           ; Number of cases is 1, Range of values is 0 to 0
  6154                           ; switch strategies available:
  6155                           ; Name         Instructions Cycles
  6156                           ; simple_byte            4     3 (average)
  6157                           ; direct_byte            8     6 (fixed)
  6158                           ; jumptable            260     6 (fixed)
  6159                           ;	Chosen strategy is simple_byte
  6160  065F  0020               	movlb	0	; select bank0
  6161  0660  084A               	movf	setTime@currentFieldSelected+1,w
  6162  0661  3A00               	xorlw	0	; case 0
  6163  0662  1903               	skipnz
  6164  0663  2E65               	goto	l3804
  6165  0664  2E6D               	goto	l3374
  6166  0665                     l3804:	
  6167                           
  6168                           ; Switch size 1, requested type "space"
  6169                           ; Number of cases is 2, Range of values is 0 to 1
  6170                           ; switch strategies available:
  6171                           ; Name         Instructions Cycles
  6172                           ; simple_byte            7     4 (average)
  6173                           ; direct_byte           10     6 (fixed)
  6174                           ; jumptable            260     6 (fixed)
  6175                           ;	Chosen strategy is simple_byte
  6176  0665  0849               	movf	setTime@currentFieldSelected,w
  6177  0666  3A00               	xorlw	0	; case 0
  6178  0667  1903               	skipnz
  6179  0668  2E6D               	goto	l3374
  6180  0669  3A01               	xorlw	1	; case 1
  6181  066A  1903               	skipnz
  6182  066B  2E6D               	goto	l3374
  6183  066C  2E6D               	goto	l3374
  6184  066D                     l3374:	
  6185                           
  6186                           ;main.c: 829: currentFieldValue = 0;
  6187  066D  0020               	movlb	0	; select bank0
  6188  066E  01C4               	clrf	setTime@currentFieldValue
  6189  066F  01C5               	clrf	setTime@currentFieldValue+1
  6190                           
  6191                           ;main.c: 830: timerTicks = 0;
  6192  0670  0022               	movlb	2	; select bank2
  6193  0671  01AE               	clrf	_timerTicks^(0+256)	;volatile
  6194  0672  01AF               	clrf	(_timerTicks+1)^(0+256)	;volatile
  6195                           
  6196                           ;main.c: 831: changesMadeFlag = 0;
  6197  0673  0020               	movlb	0	; select bank0
  6198  0674  01C1               	clrf	setTime@changesMadeFlag
  6199  0675                     l3376:	
  6200                           
  6201                           ;main.c: 832: }
  6202                           ;main.c: 834: if(currentFieldSelected > 1)
  6203  0675  3000               	movlw	0
  6204  0676  024A               	subwf	setTime@currentFieldSelected+1,w
  6205  0677  3002               	movlw	2
  6206  0678  1903               	skipnz
  6207  0679  0249               	subwf	setTime@currentFieldSelected,w
  6208  067A  1C03               	skipc
  6209  067B  2CAD               	goto	l3284
  6210                           
  6211                           ;main.c: 835: {
  6212                           ;main.c: 837: hours = tempHours;
  6213  067C  0842               	movf	setTime@tempHours,w
  6214  067D  00BA               	movwf	??_setTime
  6215  067E  083A               	movf	??_setTime,w
  6216  067F  00FC               	movwf	_hours	;volatile
  6217                           
  6218                           ;main.c: 838: minutes = tempMinutes;
  6219  0680  0843               	movf	setTime@tempMinutes,w
  6220  0681  00BA               	movwf	??_setTime
  6221  0682  083A               	movf	??_setTime,w
  6222  0683  0021               	movlb	1	; select bank1
  6223  0684  00ED               	movwf	_minutes^(0+128)	;volatile
  6224                           
  6225                           ;main.c: 839: seconds = 0;
  6226  0685  01EF               	clrf	_seconds^(0+128)	;volatile
  6227  0686                     l263:	
  6228                           ;main.c: 842: break;
  6229                           
  6230                           
  6231                           ;main.c: 843: }
  6232                           ;main.c: 844: }
  6233                           ;main.c: 847: TMR0IE = 0;
  6234  0686  128B               	bcf	11,5	;volatile
  6235                           
  6236                           ;main.c: 850: T2CONbits.TMR2ON = 0;
  6237  0687  0020               	movlb	0	; select bank0
  6238  0688  111C               	bcf	28,2	;volatile
  6239                           
  6240                           ;main.c: 851: timerTicks = 0;
  6241  0689  0022               	movlb	2	; select bank2
  6242  068A  01AE               	clrf	_timerTicks^(0+256)	;volatile
  6243  068B  01AF               	clrf	(_timerTicks+1)^(0+256)	;volatile
  6244                           
  6245                           ;main.c: 852: TMR2 = 0;
  6246  068C  0020               	movlb	0	; select bank0
  6247  068D  019A               	clrf	26	;volatile
  6248  068E  0008               	return
  6249  068F                     __end_of_setTime:	
  6250                           
  6251                           	psect	text20
  6252  0985                     __ptext20:	
  6253 ;; *************** function _bitmapPutPixel *****************
  6254 ;; Defined at:
  6255 ;;		line 637 in file "../main.c"
  6256 ;; Parameters:    Size  Location     Type
  6257 ;;  x               1    wreg     unsigned char 
  6258 ;;  y               1    0[BANK0 ] unsigned char 
  6259 ;;  r               1    1[BANK0 ] unsigned char 
  6260 ;;  g               1    2[BANK0 ] unsigned char 
  6261 ;;  b               1    3[BANK0 ] unsigned char 
  6262 ;; Auto vars:     Size  Location     Type
  6263 ;;  x               1    6[BANK0 ] unsigned char 
  6264 ;;  currentPixel    1    8[BANK0 ] unsigned char 
  6265 ;;  i               1    7[BANK0 ] unsigned char 
  6266 ;; Return value:  Size  Location     Type
  6267 ;;		None               void
  6268 ;; Registers used:
  6269 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6270 ;; Tracked objects:
  6271 ;;		On entry : 0/0
  6272 ;;		On exit  : 0/0
  6273 ;;		Unchanged: 0/0
  6274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6275 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6276 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6277 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6278 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6279 ;;Total ram usage:        9 bytes
  6280 ;; Hardware stack levels used:    1
  6281 ;; Hardware stack levels required when called:    1
  6282 ;; This function calls:
  6283 ;;		Nothing
  6284 ;; This function is called by:
  6285 ;;		_setTime
  6286 ;;		_setPixel
  6287 ;;		_bitmapTest
  6288 ;; This function uses a non-reentrant model
  6289 ;;
  6290                           
  6291                           
  6292                           ;psect for function _bitmapPutPixel
  6293  0985                     _bitmapPutPixel:	
  6294                           
  6295                           ;incstack = 0
  6296                           ; Regs used in _bitmapPutPixel: [wreg+fsr1l+fsr1h+status,2+status,0]
  6297                           ;bitmapPutPixel@x stored from wreg
  6298  0985  0020               	movlb	0	; select bank0
  6299  0986  00A6               	movwf	bitmapPutPixel@x
  6300                           
  6301                           ;main.c: 639: unsigned char i, currentPixelPosition;
  6302                           ;main.c: 641: i = currentPixelPosition = 0;
  6303  0987  01A8               	clrf	bitmapPutPixel@currentPixelPosition
  6304  0988  01A7               	clrf	bitmapPutPixel@i
  6305  0989                     l2672:	
  6306                           ;main.c: 643: while(i < y)
  6307                           
  6308  0989  0820               	movf	bitmapPutPixel@y,w
  6309  098A  0227               	subwf	bitmapPutPixel@i,w
  6310  098B  1803               	btfsc	3,0
  6311  098C  2996               	goto	l2674
  6312                           
  6313                           ;main.c: 644: {
  6314                           ;main.c: 645: currentPixelPosition += (8*3);
  6315  098D  3018               	movlw	24
  6316  098E  00A4               	movwf	??_bitmapPutPixel
  6317  098F  0824               	movf	??_bitmapPutPixel,w
  6318  0990  07A8               	addwf	bitmapPutPixel@currentPixelPosition,f
  6319                           
  6320                           ;main.c: 646: i++;
  6321  0991  3001               	movlw	1
  6322  0992  00A4               	movwf	??_bitmapPutPixel
  6323  0993  0824               	movf	??_bitmapPutPixel,w
  6324  0994  07A7               	addwf	bitmapPutPixel@i,f
  6325  0995  2989               	goto	l2672
  6326  0996                     l2674:	
  6327                           
  6328                           ;main.c: 647: }
  6329                           ;main.c: 649: i = 0;
  6330  0996  01A7               	clrf	bitmapPutPixel@i
  6331  0997                     l2678:	
  6332                           ;main.c: 650: while(i < x)
  6333                           
  6334  0997  0826               	movf	bitmapPutPixel@x,w
  6335  0998  0227               	subwf	bitmapPutPixel@i,w
  6336  0999  1803               	btfsc	3,0
  6337  099A  29A4               	goto	l2680
  6338                           
  6339                           ;main.c: 651: {
  6340                           ;main.c: 652: currentPixelPosition += 3;
  6341  099B  3003               	movlw	3
  6342  099C  00A4               	movwf	??_bitmapPutPixel
  6343  099D  0824               	movf	??_bitmapPutPixel,w
  6344  099E  07A8               	addwf	bitmapPutPixel@currentPixelPosition,f
  6345                           
  6346                           ;main.c: 653: i++;
  6347  099F  3001               	movlw	1
  6348  09A0  00A4               	movwf	??_bitmapPutPixel
  6349  09A1  0824               	movf	??_bitmapPutPixel,w
  6350  09A2  07A7               	addwf	bitmapPutPixel@i,f
  6351  09A3  2997               	goto	l2678
  6352  09A4                     l2680:	
  6353                           
  6354                           ;main.c: 654: }
  6355                           ;main.c: 656: bitmap[currentPixelPosition++] = r;
  6356  09A4  0828               	movf	bitmapPutPixel@currentPixelPosition,w
  6357  09A5  3E30               	addlw	48
  6358  09A6  00A4               	movwf	??_bitmapPutPixel
  6359  09A7  01A5               	clrf	??_bitmapPutPixel+1
  6360  09A8  3023               	movlw	35
  6361  09A9  3DA5               	addwfc	??_bitmapPutPixel+1,f
  6362  09AA  0824               	movf	??_bitmapPutPixel,w
  6363  09AB  0086               	movwf	6
  6364  09AC  0825               	movf	??_bitmapPutPixel+1,w
  6365  09AD  0087               	movwf	7
  6366  09AE  0821               	movf	bitmapPutPixel@r,w
  6367  09AF  0081               	movwf	1
  6368  09B0  3001               	movlw	1
  6369  09B1  00A4               	movwf	??_bitmapPutPixel
  6370  09B2  0824               	movf	??_bitmapPutPixel,w
  6371  09B3  07A8               	addwf	bitmapPutPixel@currentPixelPosition,f
  6372                           
  6373                           ;main.c: 657: bitmap[currentPixelPosition++] = g;
  6374  09B4  0828               	movf	bitmapPutPixel@currentPixelPosition,w
  6375  09B5  3E30               	addlw	48
  6376  09B6  00A4               	movwf	??_bitmapPutPixel
  6377  09B7  01A5               	clrf	??_bitmapPutPixel+1
  6378  09B8  3023               	movlw	35
  6379  09B9  3DA5               	addwfc	??_bitmapPutPixel+1,f
  6380  09BA  0824               	movf	??_bitmapPutPixel,w
  6381  09BB  0086               	movwf	6
  6382  09BC  0825               	movf	??_bitmapPutPixel+1,w
  6383  09BD  0087               	movwf	7
  6384  09BE  0822               	movf	bitmapPutPixel@g,w
  6385  09BF  0081               	movwf	1
  6386  09C0  3001               	movlw	1
  6387  09C1  00A4               	movwf	??_bitmapPutPixel
  6388  09C2  0824               	movf	??_bitmapPutPixel,w
  6389  09C3  07A8               	addwf	bitmapPutPixel@currentPixelPosition,f
  6390                           
  6391                           ;main.c: 658: bitmap[currentPixelPosition] = b;
  6392  09C4  0828               	movf	bitmapPutPixel@currentPixelPosition,w
  6393  09C5  3E30               	addlw	48
  6394  09C6  00A4               	movwf	??_bitmapPutPixel
  6395  09C7  01A5               	clrf	??_bitmapPutPixel+1
  6396  09C8  3023               	movlw	35
  6397  09C9  3DA5               	addwfc	??_bitmapPutPixel+1,f
  6398  09CA  0824               	movf	??_bitmapPutPixel,w
  6399  09CB  0086               	movwf	6
  6400  09CC  0825               	movf	??_bitmapPutPixel+1,w
  6401  09CD  0087               	movwf	7
  6402  09CE  0823               	movf	bitmapPutPixel@b,w
  6403  09CF  0081               	movwf	1
  6404  09D0  0008               	return
  6405  09D1                     __end_of_bitmapPutPixel:	
  6406                           
  6407                           	psect	text21
  6408  09D1                     __ptext21:	
  6409 ;; *************** function ___awdiv *****************
  6410 ;; Defined at:
  6411 ;;		line 6 in file "/Applications/microchip/xc8/v1.32/sources/common/awdiv.c"
  6412 ;; Parameters:    Size  Location     Type
  6413 ;;  divisor         2    6[BANK0 ] int 
  6414 ;;  dividend        2    8[BANK0 ] int 
  6415 ;; Auto vars:     Size  Location     Type
  6416 ;;  quotient        2   13[BANK0 ] int 
  6417 ;;  sign            1   12[BANK0 ] unsigned char 
  6418 ;;  counter         1   11[BANK0 ] unsigned char 
  6419 ;; Return value:  Size  Location     Type
  6420 ;;                  2    6[BANK0 ] int 
  6421 ;; Registers used:
  6422 ;;		wreg, status,2, status,0
  6423 ;; Tracked objects:
  6424 ;;		On entry : 0/0
  6425 ;;		On exit  : 0/0
  6426 ;;		Unchanged: 0/0
  6427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6428 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6429 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6430 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6431 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6432 ;;Total ram usage:        9 bytes
  6433 ;; Hardware stack levels used:    1
  6434 ;; Hardware stack levels required when called:    1
  6435 ;; This function calls:
  6436 ;;		Nothing
  6437 ;; This function is called by:
  6438 ;;		_setTime
  6439 ;;		_drawFrame
  6440 ;; This function uses a non-reentrant model
  6441 ;;
  6442                           
  6443                           
  6444                           ;psect for function ___awdiv
  6445  09D1                     ___awdiv:	
  6446                           
  6447                           ;incstack = 0
  6448                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6449  09D1  0020               	movlb	0	; select bank0
  6450  09D2  01AC               	clrf	___awdiv@sign
  6451  09D3  1FA7               	btfss	___awdiv@divisor+1,7
  6452  09D4  29DC               	goto	l2968
  6453  09D5  09A6               	comf	___awdiv@divisor,f
  6454  09D6  09A7               	comf	___awdiv@divisor+1,f
  6455  09D7  0AA6               	incf	___awdiv@divisor,f
  6456  09D8  1903               	skipnz
  6457  09D9  0AA7               	incf	___awdiv@divisor+1,f
  6458  09DA  01AC               	clrf	___awdiv@sign
  6459  09DB  0AAC               	incf	___awdiv@sign,f
  6460  09DC                     l2968:	
  6461  09DC  1FA9               	btfss	___awdiv@dividend+1,7
  6462  09DD  29E7               	goto	l2974
  6463  09DE  09A8               	comf	___awdiv@dividend,f
  6464  09DF  09A9               	comf	___awdiv@dividend+1,f
  6465  09E0  0AA8               	incf	___awdiv@dividend,f
  6466  09E1  1903               	skipnz
  6467  09E2  0AA9               	incf	___awdiv@dividend+1,f
  6468  09E3  3001               	movlw	1
  6469  09E4  00AA               	movwf	??___awdiv
  6470  09E5  082A               	movf	??___awdiv,w
  6471  09E6  06AC               	xorwf	___awdiv@sign,f
  6472  09E7                     l2974:	
  6473  09E7  01AD               	clrf	___awdiv@quotient
  6474  09E8  01AE               	clrf	___awdiv@quotient+1
  6475  09E9  0827               	movf	___awdiv@divisor+1,w
  6476  09EA  0426               	iorwf	___awdiv@divisor,w
  6477  09EB  1903               	skipnz
  6478  09EC  2A16               	goto	l2996
  6479  09ED  01AB               	clrf	___awdiv@counter
  6480  09EE  0AAB               	incf	___awdiv@counter,f
  6481  09EF                     l2984:	
  6482  09EF  1BA7               	btfsc	___awdiv@divisor+1,7
  6483  09F0  29FB               	goto	l2986
  6484  09F1  3001               	movlw	1
  6485  09F2                     u3135:	
  6486  09F2  35A6               	lslf	___awdiv@divisor,f
  6487  09F3  0DA7               	rlf	___awdiv@divisor+1,f
  6488  09F4  0B89               	decfsz	9,f
  6489  09F5  29F2               	goto	u3135
  6490  09F6  3001               	movlw	1
  6491  09F7  00AA               	movwf	??___awdiv
  6492  09F8  082A               	movf	??___awdiv,w
  6493  09F9  07AB               	addwf	___awdiv@counter,f
  6494  09FA  29EF               	goto	l2984
  6495  09FB                     l2986:	
  6496  09FB  3001               	movlw	1
  6497  09FC                     u3155:	
  6498  09FC  35AD               	lslf	___awdiv@quotient,f
  6499  09FD  0DAE               	rlf	___awdiv@quotient+1,f
  6500  09FE  0B89               	decfsz	9,f
  6501  09FF  29FC               	goto	u3155
  6502  0A00  0827               	movf	___awdiv@divisor+1,w
  6503  0A01  0229               	subwf	___awdiv@dividend+1,w
  6504  0A02  1D03               	skipz
  6505  0A03  2A06               	goto	u3165
  6506  0A04  0826               	movf	___awdiv@divisor,w
  6507  0A05  0228               	subwf	___awdiv@dividend,w
  6508  0A06                     u3165:	
  6509  0A06  1C03               	skipc
  6510  0A07  2A0D               	goto	l2992
  6511  0A08  0826               	movf	___awdiv@divisor,w
  6512  0A09  02A8               	subwf	___awdiv@dividend,f
  6513  0A0A  0827               	movf	___awdiv@divisor+1,w
  6514  0A0B  3BA9               	subwfb	___awdiv@dividend+1,f
  6515  0A0C  142D               	bsf	___awdiv@quotient,0
  6516  0A0D                     l2992:	
  6517  0A0D  3001               	movlw	1
  6518  0A0E                     u3175:	
  6519  0A0E  36A7               	lsrf	___awdiv@divisor+1,f
  6520  0A0F  0CA6               	rrf	___awdiv@divisor,f
  6521  0A10  0B89               	decfsz	9,f
  6522  0A11  2A0E               	goto	u3175
  6523  0A12  3001               	movlw	1
  6524  0A13  02AB               	subwf	___awdiv@counter,f
  6525  0A14  1D03               	btfss	3,2
  6526  0A15  29FB               	goto	l2986
  6527  0A16                     l2996:	
  6528  0A16  082C               	movf	___awdiv@sign,w
  6529  0A17  1903               	btfsc	3,2
  6530  0A18  2A1E               	goto	l3000
  6531  0A19  09AD               	comf	___awdiv@quotient,f
  6532  0A1A  09AE               	comf	___awdiv@quotient+1,f
  6533  0A1B  0AAD               	incf	___awdiv@quotient,f
  6534  0A1C  1903               	skipnz
  6535  0A1D  0AAE               	incf	___awdiv@quotient+1,f
  6536  0A1E                     l3000:	
  6537  0A1E  082E               	movf	___awdiv@quotient+1,w
  6538  0A1F  01A7               	clrf	?___awdiv+1
  6539  0A20  07A7               	addwf	?___awdiv+1,f
  6540  0A21  082D               	movf	___awdiv@quotient,w
  6541  0A22  01A6               	clrf	?___awdiv
  6542  0A23  07A6               	addwf	?___awdiv,f
  6543  0A24  0008               	return
  6544  0A25                     __end_of___awdiv:	
  6545                           
  6546                           	psect	text22
  6547  0B35                     __ptext22:	
  6548 ;; *************** function _init *****************
  6549 ;; Defined at:
  6550 ;;		line 225 in file "../main.c"
  6551 ;; Parameters:    Size  Location     Type
  6552 ;;		None
  6553 ;; Auto vars:     Size  Location     Type
  6554 ;;		None
  6555 ;; Return value:  Size  Location     Type
  6556 ;;                  1    wreg      unsigned char 
  6557 ;; Registers used:
  6558 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6559 ;; Tracked objects:
  6560 ;;		On entry : 0/0
  6561 ;;		On exit  : 0/0
  6562 ;;		Unchanged: 0/0
  6563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6566 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6567 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6568 ;;Total ram usage:        1 bytes
  6569 ;; Hardware stack levels used:    1
  6570 ;; Hardware stack levels required when called:    5
  6571 ;; This function calls:
  6572 ;;		_DelayMs
  6573 ;;		_bitmapClear
  6574 ;;		_setup
  6575 ;; This function is called by:
  6576 ;;		_main
  6577 ;; This function uses a non-reentrant model
  6578 ;;
  6579                           
  6580                           
  6581                           ;psect for function _init
  6582  0B35                     _init:	
  6583                           
  6584                           ;main.c: 229: OSCCON = 0b11110000;
  6585                           
  6586                           ;incstack = 0
  6587                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6588  0B35  30F0               	movlw	240
  6589  0B36  0021               	movlb	1	; select bank1
  6590  0B37  0099               	movwf	25	;volatile
  6591  0B38                     l172:	
  6592                           ;main.c: 230: while(!OSCSTATbits.PLLR);
  6593                           
  6594  0B38  1F1A               	btfss	26,6	;volatile
  6595  0B39  2B38               	goto	l172
  6596                           
  6597                           ;main.c: 233: T1CON = 0b10001100;
  6598  0B3A  308C               	movlw	140
  6599  0B3B  0020               	movlb	0	; select bank0
  6600  0B3C  0098               	movwf	24	;volatile
  6601  0B3D                     l175:	
  6602                           ;main.c: 234: while(!OSCSTATbits.T1OSCR);
  6603                           
  6604  0B3D  0021               	movlb	1	; select bank1
  6605  0B3E  1F9A               	btfss	26,7	;volatile
  6606  0B3F  2B3D               	goto	l175
  6607                           
  6608                           ;main.c: 235: TMR1 = 0;
  6609  0B40  0020               	movlb	0	; select bank0
  6610  0B41  0196               	clrf	22	;volatile
  6611  0B42  0197               	clrf	23	;volatile
  6612                           
  6613                           ;main.c: 236: TMR1IF = 0;
  6614  0B43  1011               	bcf	17,0	;volatile
  6615                           
  6616                           ;main.c: 237: TMR1IE = 1;
  6617  0B44  0021               	movlb	1	; select bank1
  6618  0B45  1411               	bsf	17,0	;volatile
  6619                           
  6620                           ;main.c: 238: DelayMs(1);
  6621  0B46  3001               	movlw	1
  6622  0B47  0020               	movlb	0	; select bank0
  6623  0B48  00AC               	movwf	DelayMs@ms
  6624  0B49  3000               	movlw	0
  6625  0B4A  00AD               	movwf	DelayMs@ms+1
  6626  0B4B  318A  2225  318B   	fcall	_DelayMs
  6627                           
  6628                           ;main.c: 239: T1CONbits.TMR1ON = 1;
  6629  0B4E  0020               	movlb	0	; select bank0
  6630  0B4F  1418               	bsf	24,0	;volatile
  6631                           
  6632                           ;main.c: 240: PEIE = 1;
  6633  0B50  170B               	bsf	11,6	;volatile
  6634                           
  6635                           ;main.c: 249: newSecond = tickCounter = 0;
  6636  0B51  0022               	movlb	2	; select bank2
  6637  0B52  01B2               	clrf	_tickCounter^(0+256)	;volatile
  6638  0B53  01B1               	clrf	_newSecond^(0+256)	;volatile
  6639                           
  6640                           ;main.c: 253: ANSELA = ANSELE = ANSELF = ANSELG = 0;
  6641  0B54  0028               	movlb	8	; select bank8
  6642  0B55  018D               	clrf	13	;volatile
  6643  0B56  018C               	clrf	12	;volatile
  6644  0B57  0023               	movlb	3	; select bank3
  6645  0B58  0190               	clrf	16	;volatile
  6646  0B59  018C               	clrf	12	;volatile
  6647                           
  6648                           ;main.c: 255: LATA = 0x00;
  6649  0B5A  0022               	movlb	2	; select bank2
  6650  0B5B  018C               	clrf	12	;volatile
  6651                           
  6652                           ;main.c: 256: LATD = 0x00;
  6653  0B5C  018F               	clrf	15	;volatile
  6654                           
  6655                           ;main.c: 257: LATE = 0x00;
  6656  0B5D  0190               	clrf	16	;volatile
  6657                           
  6658                           ;main.c: 258: TRISA = 0xFF;
  6659  0B5E  30FF               	movlw	255
  6660  0B5F  0021               	movlb	1	; select bank1
  6661  0B60  008C               	movwf	12	;volatile
  6662                           
  6663                           ;main.c: 259: TRISD = 0xFF;
  6664  0B61  30FF               	movlw	255
  6665  0B62  008F               	movwf	15	;volatile
  6666                           
  6667                           ;main.c: 260: TRISE = 0xFF;
  6668  0B63  30FF               	movlw	255
  6669  0B64  0090               	movwf	16	;volatile
  6670                           
  6671                           ;main.c: 262: LATGbits.LATG0 = 0;
  6672  0B65  0027               	movlb	7	; select bank7
  6673  0B66  100D               	bcf	13,0	;volatile
  6674                           
  6675                           ;main.c: 263: LATFbits.LATF1 = 0;
  6676  0B67  108C               	bcf	12,1	;volatile
  6677                           
  6678                           ;main.c: 264: LATFbits.LATF2 = 0;
  6679  0B68  110C               	bcf	12,2	;volatile
  6680                           
  6681                           ;main.c: 265: LATFbits.LATF3 = 0;
  6682  0B69  118C               	bcf	12,3	;volatile
  6683                           
  6684                           ;main.c: 266: LATFbits.LATF4 = 0;
  6685  0B6A  120C               	bcf	12,4	;volatile
  6686                           
  6687                           ;main.c: 267: LATFbits.LATF5 = 0;
  6688  0B6B  128C               	bcf	12,5	;volatile
  6689                           
  6690                           ;main.c: 268: LATFbits.LATF6 = 0;
  6691  0B6C  130C               	bcf	12,6	;volatile
  6692                           
  6693                           ;main.c: 269: LATFbits.LATF7 = 0;
  6694  0B6D  138C               	bcf	12,7	;volatile
  6695                           
  6696                           ;main.c: 270: TRISGbits.TRISG0 = 0;
  6697  0B6E  0026               	movlb	6	; select bank6
  6698  0B6F  100D               	bcf	13,0	;volatile
  6699                           
  6700                           ;main.c: 271: TRISFbits.TRISF1 = 0;
  6701  0B70  108C               	bcf	12,1	;volatile
  6702                           
  6703                           ;main.c: 272: TRISFbits.TRISF2 = 0;
  6704  0B71  110C               	bcf	12,2	;volatile
  6705                           
  6706                           ;main.c: 273: TRISFbits.TRISF3 = 0;
  6707  0B72  118C               	bcf	12,3	;volatile
  6708                           
  6709                           ;main.c: 274: TRISFbits.TRISF4 = 0;
  6710  0B73  120C               	bcf	12,4	;volatile
  6711                           
  6712                           ;main.c: 275: TRISFbits.TRISF5 = 0;
  6713  0B74  128C               	bcf	12,5	;volatile
  6714                           
  6715                           ;main.c: 276: TRISFbits.TRISF6 = 0;
  6716  0B75  130C               	bcf	12,6	;volatile
  6717                           
  6718                           ;main.c: 277: TRISFbits.TRISF7 = 0;
  6719  0B76  138C               	bcf	12,7	;volatile
  6720                           
  6721                           ;main.c: 280: currentRefreshingColor = currentRefreshingRow = currentRefreshingRowIndex 
      +                          = currentRefreshingPwmSweep = 0;
  6722  0B77  01F9               	clrf	_currentRefreshingPwmSweep	;volatile
  6723  0B78  01FB               	clrf	_currentRefreshingRowIndex	;volatile
  6724  0B79  01FA               	clrf	_currentRefreshingRow	;volatile
  6725  0B7A  0022               	movlb	2	; select bank2
  6726  0B7B  01B0               	clrf	_currentRefreshingColor^(0+256)	;volatile
  6727                           
  6728                           ;main.c: 283: bitmapClear();
  6729  0B7C  3197  2709  318B   	fcall	_bitmapClear
  6730                           
  6731                           ;main.c: 284: updateDisplayRequest = 0;
  6732  0B7F  0022               	movlb	2	; select bank2
  6733  0B80  01B3               	clrf	_updateDisplayRequest^(0+256)
  6734                           
  6735                           ;main.c: 288: OPTION_REG = 0b00001010;
  6736  0B81  300A               	movlw	10
  6737  0B82  0021               	movlb	1	; select bank1
  6738  0B83  0095               	movwf	21	;volatile
  6739                           
  6740                           ;main.c: 289: TMR0 = (0xFF - ((8000000/8)/(8*60*15)));
  6741  0B84  3075               	movlw	117
  6742  0B85  0020               	movlb	0	; select bank0
  6743  0B86  0095               	movwf	21	;volatile
  6744                           
  6745                           ;main.c: 290: TMR0IF = 0;
  6746  0B87  110B               	bcf	11,2	;volatile
  6747                           
  6748                           ;main.c: 291: TMR0IE = 1;
  6749  0B88  168B               	bsf	11,5	;volatile
  6750                           
  6751                           ;main.c: 294: TRISBbits.TRISB1 = 1;
  6752  0B89  0021               	movlb	1	; select bank1
  6753  0B8A  148D               	bsf	13,1	;volatile
  6754                           
  6755                           ;main.c: 295: WPUB |= 0b00000010;
  6756  0B8B  0024               	movlb	4	; select bank4
  6757  0B8C  148D               	bsf	13,1	;volatile
  6758                           
  6759                           ;main.c: 296: IOCBP |= 0b00000010;
  6760  0B8D  0027               	movlb	7	; select bank7
  6761  0B8E  1494               	bsf	20,1	;volatile
  6762                           
  6763                           ;main.c: 297: IOCBN |= 0b00000010;
  6764  0B8F  1495               	bsf	21,1	;volatile
  6765                           
  6766                           ;main.c: 300: TRISGbits.TRISG4 = 1;
  6767  0B90  0026               	movlb	6	; select bank6
  6768  0B91  160D               	bsf	13,4	;volatile
  6769                           
  6770                           ;main.c: 301: TRISGbits.TRISG3 = 1;
  6771  0B92  158D               	bsf	13,3	;volatile
  6772                           
  6773                           ;main.c: 302: LATGbits.LATG3 = 0;
  6774  0B93  0027               	movlb	7	; select bank7
  6775  0B94  118D               	bcf	13,3	;volatile
  6776                           
  6777                           ;main.c: 304: FVRCON = 0b00000010;
  6778  0B95  3002               	movlw	2
  6779  0B96  0022               	movlb	2	; select bank2
  6780  0B97  0097               	movwf	23	;volatile
  6781                           
  6782                           ;main.c: 305: ADCON1 = 0b00000011;
  6783  0B98  3003               	movlw	3
  6784  0B99  0021               	movlb	1	; select bank1
  6785  0B9A  009E               	movwf	30	;volatile
  6786                           
  6787                           ;main.c: 306: ADCON0 = 0b00110000;
  6788  0B9B  3030               	movlw	48
  6789  0B9C  009D               	movwf	29	;volatile
  6790                           
  6791                           ;main.c: 310: TRISBbits.TRISB2 = 1;
  6792  0B9D  150D               	bsf	13,2	;volatile
  6793                           
  6794                           ;main.c: 311: TRISBbits.TRISB3 = 1;
  6795  0B9E  158D               	bsf	13,3	;volatile
  6796                           
  6797                           ;main.c: 312: TRISBbits.TRISB4 = 1;
  6798  0B9F  160D               	bsf	13,4	;volatile
  6799                           
  6800                           ;main.c: 313: IOCBN = 0b00011100;
  6801  0BA0  301C               	movlw	28
  6802  0BA1  0027               	movlb	7	; select bank7
  6803  0BA2  0095               	movwf	21	;volatile
  6804                           
  6805                           ;main.c: 314: IOCBF = 0;
  6806  0BA3  0196               	clrf	22	;volatile
  6807                           
  6808                           ;main.c: 315: IOCIF = 0;
  6809  0BA4  100B               	bcf	11,0	;volatile
  6810                           
  6811                           ;main.c: 316: IOCIE = 1;
  6812  0BA5  158B               	bsf	11,3	;volatile
  6813                           
  6814                           ;main.c: 319: T2CON = 0b00000011;
  6815  0BA6  3003               	movlw	3
  6816  0BA7  0020               	movlb	0	; select bank0
  6817  0BA8  009C               	movwf	28	;volatile
  6818                           
  6819                           ;main.c: 320: PR2 = 125;
  6820  0BA9  307D               	movlw	125
  6821  0BAA  009B               	movwf	27	;volatile
  6822                           
  6823                           ;main.c: 321: TMR2IF = 0;
  6824  0BAB  1091               	bcf	17,1	;volatile
  6825                           
  6826                           ;main.c: 322: TMR2IE = 1;
  6827  0BAC  0021               	movlb	1	; select bank1
  6828  0BAD  1491               	bsf	17,1	;volatile
  6829                           
  6830                           ;main.c: 325: currentState = 2;
  6831  0BAE  3002               	movlw	2
  6832  0BAF  0020               	movlb	0	; select bank0
  6833  0BB0  00C1               	movwf	??_init
  6834  0BB1  0841               	movf	??_init,w
  6835  0BB2  0021               	movlb	1	; select bank1
  6836  0BB3  00EC               	movwf	_currentState^(0+128)	;volatile
  6837                           
  6838                           ;main.c: 328: setup();
  6839  0BB4  3197  27CC         	fcall	_setup
  6840                           
  6841                           ;main.c: 330: return 0;
  6842  0BB6  3000               	movlw	0
  6843  0BB7  0008               	return
  6844  0BB8                     __end_of_init:	
  6845                           
  6846                           	psect	text23
  6847  17CC                     __ptext23:	
  6848 ;; *************** function _setup *****************
  6849 ;; Defined at:
  6850 ;;		line 214 in file "../fire.c"
  6851 ;; Parameters:    Size  Location     Type
  6852 ;;		None
  6853 ;; Auto vars:     Size  Location     Type
  6854 ;;  x               1   32[BANK0 ] unsigned char 
  6855 ;;  y               1   31[BANK0 ] unsigned char 
  6856 ;; Return value:  Size  Location     Type
  6857 ;;		None               void
  6858 ;; Registers used:
  6859 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6860 ;; Tracked objects:
  6861 ;;		On entry : 0/0
  6862 ;;		On exit  : 0/0
  6863 ;;		Unchanged: 0/0
  6864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6866 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6867 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6868 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6869 ;;Total ram usage:        5 bytes
  6870 ;; Hardware stack levels used:    1
  6871 ;; Hardware stack levels required when called:    4
  6872 ;; This function calls:
  6873 ;;		_generateLine
  6874 ;;		_srand
  6875 ;; This function is called by:
  6876 ;;		_init
  6877 ;; This function uses a non-reentrant model
  6878 ;;
  6879                           
  6880                           
  6881                           ;psect for function _setup
  6882  17CC                     _setup:	
  6883                           
  6884                           ;fire.c: 216: srand(12345);
  6885                           
  6886                           ;incstack = 0
  6887                           ; Regs used in _setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6888  17CC  3039               	movlw	57
  6889  17CD  0020               	movlb	0	; select bank0
  6890  17CE  00A0               	movwf	srand@x
  6891  17CF  3030               	movlw	48
  6892  17D0  00A1               	movwf	srand@x+1
  6893  17D1  3196  26FB  3197   	fcall	_srand
  6894                           
  6895                           ;fire.c: 217: generateLine();
  6896  17D4  3197  2776  3197   	fcall	_generateLine
  6897                           
  6898                           ;fire.c: 220: for (unsigned char y=0;y<8;y++) {
  6899  17D7  0020               	movlb	0	; select bank0
  6900  17D8  01BF               	clrf	setup@y
  6901  17D9                     L17:	
  6902  17D9  3008               	movlw	8
  6903  17DA  023F               	subwf	setup@y,w
  6904  17DB  1803               	btfsc	3,0
  6905  17DC  0008               	return
  6906                           
  6907                           ;fire.c: 221: for(unsigned char x=0;x<8;x++) {
  6908  17DD  01C0               	clrf	setup@x
  6909  17DE  3008               	movlw	8
  6910  17DF  0240               	subwf	setup@x,w
  6911  17E0  1803               	btfsc	3,0
  6912  17E1  2FFB               	goto	l3046
  6913  17E2                     l3040:	
  6914                           
  6915                           ;fire.c: 222: matrix[x][y] = 0;
  6916  17E2  0840               	movf	setup@x,w
  6917  17E3  00BC               	movwf	??_setup
  6918  17E4  3003               	movlw	3
  6919  17E5                     u3255:	
  6920  17E5  35BC               	lslf	??_setup,f
  6921  17E6  0B89               	decfsz	9,f
  6922  17E7  2FE5               	goto	u3255
  6923  17E8  30A0               	movlw	_matrix& (0+255)
  6924  17E9  073C               	addwf	??_setup,w
  6925  17EA  00BD               	movwf	??_setup+1
  6926  17EB  083F               	movf	setup@y,w
  6927  17EC  073D               	addwf	??_setup+1,w
  6928  17ED  00BE               	movwf	??_setup+2
  6929  17EE  083E               	movf	??_setup+2,w
  6930  17EF  0086               	movwf	6
  6931  17F0  3001               	movlw	1	; select bank3/4
  6932  17F1  0087               	movwf	7
  6933  17F2  0181               	clrf	1
  6934  17F3  3001               	movlw	1
  6935  17F4  00BC               	movwf	??_setup
  6936  17F5  083C               	movf	??_setup,w
  6937  17F6  07C0               	addwf	setup@x,f
  6938  17F7  3008               	movlw	8
  6939  17F8  0240               	subwf	setup@x,w
  6940  17F9  1C03               	skipc
  6941  17FA  2FE2               	goto	l3040
  6942  17FB                     l3046:	
  6943  17FB  3001               	movlw	1
  6944  17FC  00BC               	movwf	??_setup
  6945  17FD  083C               	movf	??_setup,w
  6946  17FE  07BF               	addwf	setup@y,f
  6947  17FF  2FD9               	goto	L17
  6948  1800                     __end_of_setup:	
  6949                           
  6950                           	psect	text24
  6951  1776                     __ptext24:	
  6952 ;; *************** function _generateLine *****************
  6953 ;; Defined at:
  6954 ;;		line 153 in file "../fire.c"
  6955 ;; Parameters:    Size  Location     Type
  6956 ;;		None
  6957 ;; Auto vars:     Size  Location     Type
  6958 ;;  x               1   27[BANK0 ] unsigned char 
  6959 ;; Return value:  Size  Location     Type
  6960 ;;		None               void
  6961 ;; Registers used:
  6962 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6963 ;; Tracked objects:
  6964 ;;		On entry : 0/0
  6965 ;;		On exit  : 0/0
  6966 ;;		Unchanged: 0/0
  6967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6969 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6970 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6971 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6972 ;;Total ram usage:        2 bytes
  6973 ;; Hardware stack levels used:    1
  6974 ;; Hardware stack levels required when called:    3
  6975 ;; This function calls:
  6976 ;;		___awmod
  6977 ;;		_rand
  6978 ;; This function is called by:
  6979 ;;		_showTime
  6980 ;;		_setup
  6981 ;; This function uses a non-reentrant model
  6982 ;;
  6983                           
  6984                           
  6985                           ;psect for function _generateLine
  6986  1776                     _generateLine:	
  6987                           
  6988                           ;fire.c: 154: for(unsigned char x=0;x<8;x++) {
  6989                           
  6990                           ;incstack = 0
  6991                           ; Regs used in _generateLine: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6992  1776  0020               	movlb	0	; select bank0
  6993  1777  01BB               	clrf	generateLine@x
  6994  1778                     L18:	
  6995  1778  3008               	movlw	8
  6996  1779  023B               	subwf	generateLine@x,w
  6997  177A  1803               	btfsc	3,0
  6998  177B  0008               	return
  6999                           
  7000                           ;fire.c: 155: line[x] = rand()%63;
  7001  177C  303F               	movlw	63
  7002  177D  00B3               	movwf	___awmod@divisor
  7003  177E  3000               	movlw	0
  7004  177F  00B4               	movwf	___awmod@divisor+1
  7005  1780  318A  227B  3197   	fcall	_rand
  7006  1783  0020               	movlb	0	; select bank0
  7007  1784  082D               	movf	?_rand+1,w
  7008  1785  01B6               	clrf	___awmod@dividend+1
  7009  1786  07B6               	addwf	___awmod@dividend+1,f
  7010  1787  082C               	movf	?_rand,w
  7011  1788  01B5               	clrf	___awmod@dividend
  7012  1789  07B5               	addwf	___awmod@dividend,f
  7013  178A  3188  20F5  3197   	fcall	___awmod
  7014  178D  0020               	movlb	0	; select bank0
  7015  178E  0833               	movf	?___awmod,w
  7016  178F  00BA               	movwf	??_generateLine
  7017  1790  083B               	movf	generateLine@x,w
  7018  1791  3E20               	addlw	_line& (0+255)
  7019  1792  0086               	movwf	6
  7020  1793  3001               	movlw	1	; select bank2/3
  7021  1794  0087               	movwf	7
  7022  1795  083A               	movf	??_generateLine,w
  7023  1796  0081               	movwf	1
  7024  1797  3001               	movlw	1
  7025  1798  00BA               	movwf	??_generateLine
  7026  1799  083A               	movf	??_generateLine,w
  7027  179A  07BB               	addwf	generateLine@x,f
  7028  179B  2F78               	goto	L18
  7029  179C                     __end_of_generateLine:	
  7030                           
  7031                           	psect	text25
  7032  0A7B                     __ptext25:	
  7033 ;; *************** function _rand *****************
  7034 ;; Defined at:
  7035 ;;		line 13 in file "/Applications/microchip/xc8/v1.32/sources/common/rand.c"
  7036 ;; Parameters:    Size  Location     Type
  7037 ;;		None
  7038 ;; Auto vars:     Size  Location     Type
  7039 ;;		None
  7040 ;; Return value:  Size  Location     Type
  7041 ;;                  2   12[BANK0 ] int 
  7042 ;; Registers used:
  7043 ;;		wreg, status,2, status,0, pclath, cstack
  7044 ;; Tracked objects:
  7045 ;;		On entry : 0/0
  7046 ;;		On exit  : 0/0
  7047 ;;		Unchanged: 0/0
  7048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7049 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7051 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7052 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7053 ;;Total ram usage:        7 bytes
  7054 ;; Hardware stack levels used:    1
  7055 ;; Hardware stack levels required when called:    2
  7056 ;; This function calls:
  7057 ;;		___lmul
  7058 ;;		_srand
  7059 ;; This function is called by:
  7060 ;;		_generateLine
  7061 ;; This function uses a non-reentrant model
  7062 ;;
  7063                           
  7064                           
  7065                           ;psect for function _rand
  7066  0A7B                     _rand:	
  7067                           
  7068                           ;incstack = 0
  7069                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  7070  0A7B  0021               	movlb	1	; select bank1
  7071  0A7C  08EE               	movf	_randf^(0+128),f
  7072  0A7D  1D03               	skipz
  7073  0A7E  2A87               	goto	l907
  7074  0A7F  3001               	movlw	1
  7075  0A80  0020               	movlb	0	; select bank0
  7076  0A81  00A0               	movwf	srand@x
  7077  0A82  3000               	movlw	0
  7078  0A83  00A1               	movwf	srand@x+1
  7079  0A84  3196  26FB  318A   	fcall	_srand
  7080  0A87                     l907:	
  7081  0A87  0022               	movlb	2	; select bank2
  7082  0A88  082B               	movf	(_randx+3)^(0+256),w
  7083  0A89  0020               	movlb	0	; select bank0
  7084  0A8A  00A3               	movwf	___lmul@multiplier+3
  7085  0A8B  0022               	movlb	2	; select bank2
  7086  0A8C  082A               	movf	(_randx+2)^(0+256),w
  7087  0A8D  0020               	movlb	0	; select bank0
  7088  0A8E  00A2               	movwf	___lmul@multiplier+2
  7089  0A8F  0022               	movlb	2	; select bank2
  7090  0A90  0829               	movf	(_randx+1)^(0+256),w
  7091  0A91  0020               	movlb	0	; select bank0
  7092  0A92  00A1               	movwf	___lmul@multiplier+1
  7093  0A93  0022               	movlb	2	; select bank2
  7094  0A94  0828               	movf	_randx^(0+256),w
  7095  0A95  0020               	movlb	0	; select bank0
  7096  0A96  00A0               	movwf	___lmul@multiplier
  7097  0A97  3041               	movlw	65
  7098  0A98  00A7               	movwf	___lmul@multiplicand+3
  7099  0A99  30C6               	movlw	198
  7100  0A9A  00A6               	movwf	___lmul@multiplicand+2
  7101  0A9B  304E               	movlw	78
  7102  0A9C  00A5               	movwf	___lmul@multiplicand+1
  7103  0A9D  306D               	movlw	109
  7104  0A9E  00A4               	movwf	___lmul@multiplicand
  7105  0A9F  3197  279C  318A   	fcall	___lmul
  7106  0AA2  3039               	movlw	57
  7107  0AA3  0020               	movlb	0	; select bank0
  7108  0AA4  0720               	addwf	?___lmul,w
  7109  0AA5  0022               	movlb	2	; select bank2
  7110  0AA6  00A8               	movwf	_randx^(0+256)
  7111  0AA7  3030               	movlw	48
  7112  0AA8  0020               	movlb	0	; select bank0
  7113  0AA9  3D21               	addwfc	?___lmul+1,w
  7114  0AAA  0022               	movlb	2	; select bank2
  7115  0AAB  00A9               	movwf	(_randx+1)^(0+256)
  7116  0AAC  3000               	movlw	0
  7117  0AAD  0020               	movlb	0	; select bank0
  7118  0AAE  3D22               	addwfc	?___lmul+2,w
  7119  0AAF  0022               	movlb	2	; select bank2
  7120  0AB0  00AA               	movwf	(_randx+2)^(0+256)
  7121  0AB1  3000               	movlw	0
  7122  0AB2  0020               	movlb	0	; select bank0
  7123  0AB3  3D23               	addwfc	?___lmul+3,w
  7124  0AB4  0022               	movlb	2	; select bank2
  7125  0AB5  00AB               	movwf	(_randx+3)^(0+256)
  7126  0AB6  0828               	movf	_randx^(0+256),w
  7127  0AB7  0020               	movlb	0	; select bank0
  7128  0AB8  00AE               	movwf	??_rand
  7129  0AB9  0022               	movlb	2	; select bank2
  7130  0ABA  0829               	movf	(_randx+1)^(0+256),w
  7131  0ABB  0020               	movlb	0	; select bank0
  7132  0ABC  00AF               	movwf	??_rand+1
  7133  0ABD  0022               	movlb	2	; select bank2
  7134  0ABE  082A               	movf	(_randx+2)^(0+256),w
  7135  0ABF  0020               	movlb	0	; select bank0
  7136  0AC0  00B0               	movwf	??_rand+2
  7137  0AC1  0022               	movlb	2	; select bank2
  7138  0AC2  082B               	movf	(_randx+3)^(0+256),w
  7139  0AC3  0020               	movlb	0	; select bank0
  7140  0AC4  00B1               	movwf	??_rand+3
  7141  0AC5  3010               	movlw	16
  7142  0AC6  00B2               	movwf	??_rand+4
  7143  0AC7                     u2715:	
  7144  0AC7  37B1               	asrf	??_rand+3,f
  7145  0AC8  0CB0               	rrf	??_rand+2,f
  7146  0AC9  0CAF               	rrf	??_rand+1,f
  7147  0ACA  0CAE               	rrf	??_rand,f
  7148  0ACB  0BB2               	decfsz	??_rand+4,f
  7149  0ACC  2AC7               	goto	u2715
  7150  0ACD  30FF               	movlw	255
  7151  0ACE  052E               	andwf	??_rand,w
  7152  0ACF  00AC               	movwf	?_rand
  7153  0AD0  307F               	movlw	127
  7154  0AD1  052F               	andwf	??_rand+1,w
  7155  0AD2  00AD               	movwf	?_rand+1
  7156  0AD3  0008               	return
  7157  0AD4                     __end_of_rand:	
  7158                           
  7159                           	psect	text26
  7160  16FB                     __ptext26:	
  7161 ;; *************** function _srand *****************
  7162 ;; Defined at:
  7163 ;;		line 7 in file "/Applications/microchip/xc8/v1.32/sources/common/rand.c"
  7164 ;; Parameters:    Size  Location     Type
  7165 ;;  x               2    0[BANK0 ] unsigned int 
  7166 ;; Auto vars:     Size  Location     Type
  7167 ;;		None
  7168 ;; Return value:  Size  Location     Type
  7169 ;;		None               void
  7170 ;; Registers used:
  7171 ;;		wreg
  7172 ;; Tracked objects:
  7173 ;;		On entry : 0/0
  7174 ;;		On exit  : 0/0
  7175 ;;		Unchanged: 0/0
  7176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7177 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7180 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7181 ;;Total ram usage:        2 bytes
  7182 ;; Hardware stack levels used:    1
  7183 ;; Hardware stack levels required when called:    1
  7184 ;; This function calls:
  7185 ;;		Nothing
  7186 ;; This function is called by:
  7187 ;;		_setup
  7188 ;;		_rand
  7189 ;; This function uses a non-reentrant model
  7190 ;;
  7191                           
  7192                           
  7193                           ;psect for function _srand
  7194  16FB                     _srand:	
  7195                           
  7196                           ;incstack = 0
  7197                           ; Regs used in _srand: [wreg]
  7198  16FB  0020               	movlb	0	; select bank0
  7199  16FC  0820               	movf	srand@x,w
  7200  16FD  0022               	movlb	2	; select bank2
  7201  16FE  00A8               	movwf	_randx^(0+256)
  7202  16FF  0020               	movlb	0	; select bank0
  7203  1700  0821               	movf	srand@x+1,w
  7204  1701  0022               	movlb	2	; select bank2
  7205  1702  00A9               	movwf	(_randx^(0+256)+1)
  7206  1703  01AA               	clrf	(_randx^(0+256)+2)
  7207  1704  01AB               	clrf	(_randx^(0+256)+3)
  7208  1705  0021               	movlb	1	; select bank1
  7209  1706  01EE               	clrf	_randf^(0+128)
  7210  1707  0AEE               	incf	_randf^(0+128),f
  7211  1708  0008               	return
  7212  1709                     __end_of_srand:	
  7213                           
  7214                           	psect	text27
  7215  08F5                     __ptext27:	
  7216 ;; *************** function ___awmod *****************
  7217 ;; Defined at:
  7218 ;;		line 6 in file "/Applications/microchip/xc8/v1.32/sources/common/awmod.c"
  7219 ;; Parameters:    Size  Location     Type
  7220 ;;  divisor         2   19[BANK0 ] int 
  7221 ;;  dividend        2   21[BANK0 ] int 
  7222 ;; Auto vars:     Size  Location     Type
  7223 ;;  sign            1   25[BANK0 ] unsigned char 
  7224 ;;  counter         1   24[BANK0 ] unsigned char 
  7225 ;; Return value:  Size  Location     Type
  7226 ;;                  2   19[BANK0 ] int 
  7227 ;; Registers used:
  7228 ;;		wreg, status,2, status,0
  7229 ;; Tracked objects:
  7230 ;;		On entry : 0/0
  7231 ;;		On exit  : 0/0
  7232 ;;		Unchanged: 0/0
  7233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7234 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7235 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7236 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7237 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7238 ;;Total ram usage:        7 bytes
  7239 ;; Hardware stack levels used:    1
  7240 ;; Hardware stack levels required when called:    1
  7241 ;; This function calls:
  7242 ;;		Nothing
  7243 ;; This function is called by:
  7244 ;;		_setTime
  7245 ;;		_generateLine
  7246 ;; This function uses a non-reentrant model
  7247 ;;
  7248                           
  7249                           
  7250                           ;psect for function ___awmod
  7251  08F5                     ___awmod:	
  7252                           
  7253                           ;incstack = 0
  7254                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7255  08F5  0020               	movlb	0	; select bank0
  7256  08F6  01B9               	clrf	___awmod@sign
  7257  08F7  1FB6               	btfss	___awmod@dividend+1,7
  7258  08F8  2900               	goto	l2730
  7259  08F9  09B5               	comf	___awmod@dividend,f
  7260  08FA  09B6               	comf	___awmod@dividend+1,f
  7261  08FB  0AB5               	incf	___awmod@dividend,f
  7262  08FC  1903               	skipnz
  7263  08FD  0AB6               	incf	___awmod@dividend+1,f
  7264  08FE  01B9               	clrf	___awmod@sign
  7265  08FF  0AB9               	incf	___awmod@sign,f
  7266  0900                     l2730:	
  7267  0900  1FB4               	btfss	___awmod@divisor+1,7
  7268  0901  2907               	goto	l2734
  7269  0902  09B3               	comf	___awmod@divisor,f
  7270  0903  09B4               	comf	___awmod@divisor+1,f
  7271  0904  0AB3               	incf	___awmod@divisor,f
  7272  0905  1903               	skipnz
  7273  0906  0AB4               	incf	___awmod@divisor+1,f
  7274  0907                     l2734:	
  7275  0907  0834               	movf	___awmod@divisor+1,w
  7276  0908  0433               	iorwf	___awmod@divisor,w
  7277  0909  1903               	skipnz
  7278  090A  292E               	goto	l2752
  7279  090B  01B8               	clrf	___awmod@counter
  7280  090C  0AB8               	incf	___awmod@counter,f
  7281  090D                     l2742:	
  7282  090D  1BB4               	btfsc	___awmod@divisor+1,7
  7283  090E  2919               	goto	l2744
  7284  090F  3001               	movlw	1
  7285  0910                     u2755:	
  7286  0910  35B3               	lslf	___awmod@divisor,f
  7287  0911  0DB4               	rlf	___awmod@divisor+1,f
  7288  0912  0B89               	decfsz	9,f
  7289  0913  2910               	goto	u2755
  7290  0914  3001               	movlw	1
  7291  0915  00B7               	movwf	??___awmod
  7292  0916  0837               	movf	??___awmod,w
  7293  0917  07B8               	addwf	___awmod@counter,f
  7294  0918  290D               	goto	l2742
  7295  0919                     l2744:	
  7296  0919  0834               	movf	___awmod@divisor+1,w
  7297  091A  0236               	subwf	___awmod@dividend+1,w
  7298  091B  1D03               	skipz
  7299  091C  291F               	goto	u2775
  7300  091D  0833               	movf	___awmod@divisor,w
  7301  091E  0235               	subwf	___awmod@dividend,w
  7302  091F                     u2775:	
  7303  091F  1C03               	skipc
  7304  0920  2925               	goto	l2748
  7305  0921  0833               	movf	___awmod@divisor,w
  7306  0922  02B5               	subwf	___awmod@dividend,f
  7307  0923  0834               	movf	___awmod@divisor+1,w
  7308  0924  3BB6               	subwfb	___awmod@dividend+1,f
  7309  0925                     l2748:	
  7310  0925  3001               	movlw	1
  7311  0926                     u2785:	
  7312  0926  36B4               	lsrf	___awmod@divisor+1,f
  7313  0927  0CB3               	rrf	___awmod@divisor,f
  7314  0928  0B89               	decfsz	9,f
  7315  0929  2926               	goto	u2785
  7316  092A  3001               	movlw	1
  7317  092B  02B8               	subwf	___awmod@counter,f
  7318  092C  1D03               	btfss	3,2
  7319  092D  2919               	goto	l2744
  7320  092E                     l2752:	
  7321  092E  0839               	movf	___awmod@sign,w
  7322  092F  1903               	btfsc	3,2
  7323  0930  2936               	goto	l2756
  7324  0931  09B5               	comf	___awmod@dividend,f
  7325  0932  09B6               	comf	___awmod@dividend+1,f
  7326  0933  0AB5               	incf	___awmod@dividend,f
  7327  0934  1903               	skipnz
  7328  0935  0AB6               	incf	___awmod@dividend+1,f
  7329  0936                     l2756:	
  7330  0936  0836               	movf	___awmod@dividend+1,w
  7331  0937  01B4               	clrf	?___awmod+1
  7332  0938  07B4               	addwf	?___awmod+1,f
  7333  0939  0835               	movf	___awmod@dividend,w
  7334  093A  01B3               	clrf	?___awmod
  7335  093B  07B3               	addwf	?___awmod,f
  7336  093C  0008               	return
  7337  093D                     __end_of___awmod:	
  7338                           
  7339                           	psect	text28
  7340  1709                     __ptext28:	
  7341 ;; *************** function _bitmapClear *****************
  7342 ;; Defined at:
  7343 ;;		line 686 in file "../main.c"
  7344 ;; Parameters:    Size  Location     Type
  7345 ;;		None
  7346 ;; Auto vars:     Size  Location     Type
  7347 ;;  i               1    1[BANK0 ] unsigned char 
  7348 ;; Return value:  Size  Location     Type
  7349 ;;		None               void
  7350 ;; Registers used:
  7351 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7352 ;; Tracked objects:
  7353 ;;		On entry : 0/0
  7354 ;;		On exit  : 0/0
  7355 ;;		Unchanged: 0/0
  7356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7358 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7359 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7360 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7361 ;;Total ram usage:        2 bytes
  7362 ;; Hardware stack levels used:    1
  7363 ;; Hardware stack levels required when called:    1
  7364 ;; This function calls:
  7365 ;;		Nothing
  7366 ;; This function is called by:
  7367 ;;		_init
  7368 ;;		_setTime
  7369 ;;		_showTime
  7370 ;; This function uses a non-reentrant model
  7371 ;;
  7372                           
  7373                           
  7374                           ;psect for function _bitmapClear
  7375  1709                     _bitmapClear:	
  7376                           
  7377                           ;main.c: 688: unsigned char i = 0;
  7378                           
  7379                           ;incstack = 0
  7380                           ; Regs used in _bitmapClear: [wreg+fsr1l+fsr1h+status,2+status,0]
  7381  1709  0020               	movlb	0	; select bank0
  7382  170A  01A1               	clrf	bitmapClear@i
  7383  170B                     l3022:	
  7384                           ;main.c: 689: while(i < sizeof(bitmap))
  7385                           
  7386  170B  30C0               	movlw	192
  7387  170C  0221               	subwf	bitmapClear@i,w
  7388  170D  1803               	btfsc	3,0
  7389  170E  0008               	return
  7390                           
  7391                           ;main.c: 690: {
  7392                           ;main.c: 691: bitmap[i++] = 0x00;
  7393  170F  0821               	movf	bitmapClear@i,w
  7394  1710  3E30               	addlw	48
  7395  1711  0086               	movwf	6
  7396  1712  0187               	clrf	7
  7397  1713  3023               	movlw	35
  7398  1714  3D87               	addwfc	7,f
  7399  1715  0181               	clrf	1
  7400  1716  3001               	movlw	1
  7401  1717  00A0               	movwf	??_bitmapClear
  7402  1718  0820               	movf	??_bitmapClear,w
  7403  1719  07A1               	addwf	bitmapClear@i,f
  7404  171A  2F0B               	goto	l3022
  7405  171B                     __end_of_bitmapClear:	
  7406                           
  7407                           	psect	text29
  7408  0A25                     __ptext29:	
  7409 ;; *************** function _DelayMs *****************
  7410 ;; Defined at:
  7411 ;;		line 175 in file "/Applications/microchip/microchip_solutions_v2013-06-15/Microchip/Common/TimeDelay.c"
  7412 ;; Parameters:    Size  Location     Type
  7413 ;;  ms              2   12[BANK0 ] unsigned short 
  7414 ;; Auto vars:     Size  Location     Type
  7415 ;;  cyclesRequir    4   15[BANK0 ] long 
  7416 ;; Return value:  Size  Location     Type
  7417 ;;		None               void
  7418 ;; Registers used:
  7419 ;;		wreg, status,2, status,0, pclath, cstack
  7420 ;; Tracked objects:
  7421 ;;		On entry : 0/0
  7422 ;;		On exit  : 0/0
  7423 ;;		Unchanged: 0/0
  7424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7425 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7426 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7427 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7428 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7429 ;;Total ram usage:        7 bytes
  7430 ;; Hardware stack levels used:    1
  7431 ;; Hardware stack levels required when called:    2
  7432 ;; This function calls:
  7433 ;;		___lmul
  7434 ;; This function is called by:
  7435 ;;		_init
  7436 ;;		_setTime
  7437 ;; This function uses a non-reentrant model
  7438 ;;
  7439                           
  7440                           
  7441                           ;psect for function _DelayMs
  7442  0A25                     _DelayMs:	
  7443                           
  7444                           ;TimeDelay.c: 179: INT32 cyclesRequiredForEntireDelay;
  7445                           ;TimeDelay.c: 182: cyclesRequiredForEntireDelay = (signed long)(8000000/1000) * ms;
  7446                           
  7447                           ;incstack = 0
  7448                           ; Regs used in _DelayMs: [wreg+status,2+status,0+pclath+cstack]
  7449  0A25  0020               	movlb	0	; select bank0
  7450  0A26  082C               	movf	DelayMs@ms,w
  7451  0A27  00A0               	movwf	___lmul@multiplier
  7452  0A28  082D               	movf	DelayMs@ms+1,w
  7453  0A29  00A1               	movwf	___lmul@multiplier+1
  7454  0A2A  01A2               	clrf	___lmul@multiplier+2
  7455  0A2B  01A3               	clrf	___lmul@multiplier+3
  7456  0A2C  3000               	movlw	0
  7457  0A2D  00A7               	movwf	___lmul@multiplicand+3
  7458  0A2E  3000               	movlw	0
  7459  0A2F  00A6               	movwf	___lmul@multiplicand+2
  7460  0A30  301F               	movlw	31
  7461  0A31  00A5               	movwf	___lmul@multiplicand+1
  7462  0A32  3040               	movlw	64
  7463  0A33  00A4               	movwf	___lmul@multiplicand
  7464  0A34  3197  279C  318A   	fcall	___lmul
  7465  0A37  0020               	movlb	0	; select bank0
  7466  0A38  0823               	movf	?___lmul+3,w
  7467  0A39  00B2               	movwf	DelayMs@cyclesRequiredForEntireDelay+3
  7468  0A3A  0822               	movf	?___lmul+2,w
  7469  0A3B  00B1               	movwf	DelayMs@cyclesRequiredForEntireDelay+2
  7470  0A3C  0821               	movf	?___lmul+1,w
  7471  0A3D  00B0               	movwf	DelayMs@cyclesRequiredForEntireDelay+1
  7472  0A3E  0820               	movf	?___lmul,w
  7473  0A3F  00AF               	movwf	DelayMs@cyclesRequiredForEntireDelay
  7474                           
  7475                           ;TimeDelay.c: 186: cyclesRequiredForEntireDelay -= (148 + 22);
  7476  0A40  3056               	movlw	86
  7477  0A41  07AF               	addwf	DelayMs@cyclesRequiredForEntireDelay,f
  7478  0A42  30FF               	movlw	255
  7479  0A43  3DB0               	addwfc	DelayMs@cyclesRequiredForEntireDelay+1,f
  7480  0A44  30FF               	movlw	255
  7481  0A45  3DB1               	addwfc	DelayMs@cyclesRequiredForEntireDelay+2,f
  7482  0A46  30FF               	movlw	255
  7483  0A47  3DB2               	addwfc	DelayMs@cyclesRequiredForEntireDelay+3,f
  7484                           
  7485                           ;TimeDelay.c: 188: if (cyclesRequiredForEntireDelay <= (170+25))
  7486  0A48  0832               	movf	DelayMs@cyclesRequiredForEntireDelay+3,w
  7487  0A49  3A80               	xorlw	128
  7488  0A4A  00AE               	movwf	??_DelayMs
  7489  0A4B  3000               	movlw	0
  7490  0A4C  3A80               	xorlw	128
  7491  0A4D  022E               	subwf	??_DelayMs,w
  7492  0A4E  1D03               	skipz
  7493  0A4F  2A5A               	goto	u3203
  7494  0A50  3000               	movlw	0
  7495  0A51  0231               	subwf	DelayMs@cyclesRequiredForEntireDelay+2,w
  7496  0A52  1D03               	skipz
  7497  0A53  2A5A               	goto	u3203
  7498  0A54  3000               	movlw	0
  7499  0A55  0230               	subwf	DelayMs@cyclesRequiredForEntireDelay+1,w
  7500  0A56  1D03               	skipz
  7501  0A57  2A5A               	goto	u3203
  7502  0A58  30C4               	movlw	196
  7503  0A59  022F               	subwf	DelayMs@cyclesRequiredForEntireDelay,w
  7504  0A5A                     u3203:	
  7505  0A5A  1C03               	btfss	3,0
  7506  0A5B  0008               	return
  7507  0A5C                     l343:	
  7508  0A5C  0832               	movf	DelayMs@cyclesRequiredForEntireDelay+3,w
  7509  0A5D  3A80               	xorlw	128
  7510  0A5E  00AE               	movwf	??_DelayMs
  7511  0A5F  3000               	movlw	0
  7512  0A60  3A80               	xorlw	128
  7513  0A61  022E               	subwf	??_DelayMs,w
  7514  0A62  1D03               	skipz
  7515  0A63  2A6E               	goto	u3213
  7516  0A64  3000               	movlw	0
  7517  0A65  0231               	subwf	DelayMs@cyclesRequiredForEntireDelay+2,w
  7518  0A66  1D03               	skipz
  7519  0A67  2A6E               	goto	u3213
  7520  0A68  3000               	movlw	0
  7521  0A69  0230               	subwf	DelayMs@cyclesRequiredForEntireDelay+1,w
  7522  0A6A  1D03               	skipz
  7523  0A6B  2A6E               	goto	u3213
  7524  0A6C  3001               	movlw	1
  7525  0A6D  022F               	subwf	DelayMs@cyclesRequiredForEntireDelay,w
  7526  0A6E                     u3213:	
  7527  0A6E  1C03               	btfss	3,0
  7528  0A6F  0008               	return
  7529                           
  7530                           ;TimeDelay.c: 192: else
  7531                           ;TimeDelay.c: 193: {
  7532                           ;TimeDelay.c: 194: while (cyclesRequiredForEntireDelay > 0)
  7533                           
  7534                           ;TimeDelay.c: 191: }
  7535                           
  7536                           ;TimeDelay.c: 189: {
  7537                           ;TimeDelay.c: 190: return;
  7538  0A70  0000               	nop	;# 
  7539                           
  7540                           ;TimeDelay.c: 197: cyclesRequiredForEntireDelay -= 39;
  7541  0A71  30D9               	movlw	217
  7542  0A72  0020               	movlb	0	; select bank0
  7543  0A73  07AF               	addwf	DelayMs@cyclesRequiredForEntireDelay,f
  7544  0A74  30FF               	movlw	255
  7545  0A75  3DB0               	addwfc	DelayMs@cyclesRequiredForEntireDelay+1,f
  7546  0A76  30FF               	movlw	255
  7547  0A77  3DB1               	addwfc	DelayMs@cyclesRequiredForEntireDelay+2,f
  7548  0A78  30FF               	movlw	255
  7549  0A79  3DB2               	addwfc	DelayMs@cyclesRequiredForEntireDelay+3,f
  7550  0A7A  2A5C               	goto	l343
  7551  0A7B                     __end_of_DelayMs:	
  7552                           
  7553                           	psect	text30
  7554  179C                     __ptext30:	
  7555 ;; *************** function ___lmul *****************
  7556 ;; Defined at:
  7557 ;;		line 15 in file "/Applications/microchip/xc8/v1.32/sources/common/Umul32.c"
  7558 ;; Parameters:    Size  Location     Type
  7559 ;;  multiplier      4    0[BANK0 ] unsigned long 
  7560 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  7561 ;; Auto vars:     Size  Location     Type
  7562 ;;  product         4    8[BANK0 ] unsigned long 
  7563 ;; Return value:  Size  Location     Type
  7564 ;;                  4    0[BANK0 ] unsigned long 
  7565 ;; Registers used:
  7566 ;;		wreg, status,2, status,0
  7567 ;; Tracked objects:
  7568 ;;		On entry : 0/0
  7569 ;;		On exit  : 0/0
  7570 ;;		Unchanged: 0/0
  7571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7572 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7573 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7575 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7576 ;;Total ram usage:       12 bytes
  7577 ;; Hardware stack levels used:    1
  7578 ;; Hardware stack levels required when called:    1
  7579 ;; This function calls:
  7580 ;;		Nothing
  7581 ;; This function is called by:
  7582 ;;		_DelayMs
  7583 ;;		_rand
  7584 ;;		_Delay10us
  7585 ;; This function uses a non-reentrant model
  7586 ;;
  7587                           
  7588                           
  7589                           ;psect for function ___lmul
  7590  179C                     ___lmul:	
  7591                           
  7592                           ;incstack = 0
  7593                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  7594  179C  3000               	movlw	0
  7595  179D  0020               	movlb	0	; select bank0
  7596  179E  00AB               	movwf	___lmul@product+3
  7597  179F  3000               	movlw	0
  7598  17A0  00AA               	movwf	___lmul@product+2
  7599  17A1  3000               	movlw	0
  7600  17A2  00A9               	movwf	___lmul@product+1
  7601  17A3  3000               	movlw	0
  7602  17A4  00A8               	movwf	___lmul@product
  7603  17A5                     l2488:	
  7604  17A5  1C20               	btfss	___lmul@multiplier,0
  7605  17A6  2FAF               	goto	l2492
  7606  17A7  0824               	movf	___lmul@multiplicand,w
  7607  17A8  07A8               	addwf	___lmul@product,f
  7608  17A9  0825               	movf	___lmul@multiplicand+1,w
  7609  17AA  3DA9               	addwfc	___lmul@product+1,f
  7610  17AB  0826               	movf	___lmul@multiplicand+2,w
  7611  17AC  3DAA               	addwfc	___lmul@product+2,f
  7612  17AD  0827               	movf	___lmul@multiplicand+3,w
  7613  17AE  3DAB               	addwfc	___lmul@product+3,f
  7614  17AF                     l2492:	
  7615  17AF  3001               	movlw	1
  7616  17B0                     u2215:	
  7617  17B0  35A4               	lslf	___lmul@multiplicand,f
  7618  17B1  0DA5               	rlf	___lmul@multiplicand+1,f
  7619  17B2  0DA6               	rlf	___lmul@multiplicand+2,f
  7620  17B3  0DA7               	rlf	___lmul@multiplicand+3,f
  7621  17B4  0B89               	decfsz	9,f
  7622  17B5  2FB0               	goto	u2215
  7623  17B6  3001               	movlw	1
  7624  17B7                     u2225:	
  7625  17B7  36A3               	lsrf	___lmul@multiplier+3,f
  7626  17B8  0CA2               	rrf	___lmul@multiplier+2,f
  7627  17B9  0CA1               	rrf	___lmul@multiplier+1,f
  7628  17BA  0CA0               	rrf	___lmul@multiplier,f
  7629  17BB  0B89               	decfsz	9,f
  7630  17BC  2FB7               	goto	u2225
  7631  17BD  0823               	movf	___lmul@multiplier+3,w
  7632  17BE  0422               	iorwf	___lmul@multiplier+2,w
  7633  17BF  0421               	iorwf	___lmul@multiplier+1,w
  7634  17C0  0420               	iorwf	___lmul@multiplier,w
  7635  17C1  1D03               	skipz
  7636  17C2  2FA5               	goto	l2488
  7637  17C3  082B               	movf	___lmul@product+3,w
  7638  17C4  00A3               	movwf	?___lmul+3
  7639  17C5  082A               	movf	___lmul@product+2,w
  7640  17C6  00A2               	movwf	?___lmul+2
  7641  17C7  0829               	movf	___lmul@product+1,w
  7642  17C8  00A1               	movwf	?___lmul+1
  7643  17C9  0828               	movf	___lmul@product,w
  7644  17CA  00A0               	movwf	?___lmul
  7645  17CB  0008               	return
  7646  17CC                     __end_of___lmul:	
  7647                           
  7648                           	psect	text31
  7649  16E9                     __ptext31:	
  7650 ;; *************** function _fastClock *****************
  7651 ;; Defined at:
  7652 ;;		line 970 in file "../main.c"
  7653 ;; Parameters:    Size  Location     Type
  7654 ;;		None
  7655 ;; Auto vars:     Size  Location     Type
  7656 ;;		None
  7657 ;; Return value:  Size  Location     Type
  7658 ;;		None               void
  7659 ;; Registers used:
  7660 ;;		wreg
  7661 ;; Tracked objects:
  7662 ;;		On entry : 0/0
  7663 ;;		On exit  : 0/0
  7664 ;;		Unchanged: 0/0
  7665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7670 ;;Total ram usage:        0 bytes
  7671 ;; Hardware stack levels used:    1
  7672 ;; Hardware stack levels required when called:    1
  7673 ;; This function calls:
  7674 ;;		Nothing
  7675 ;; This function is called by:
  7676 ;;		_main
  7677 ;; This function uses a non-reentrant model
  7678 ;;
  7679                           
  7680                           
  7681                           ;psect for function _fastClock
  7682  16E9                     _fastClock:	
  7683                           
  7684                           ;main.c: 972: OSCCON = 0b11110000;
  7685                           
  7686                           ;incstack = 0
  7687                           ; Regs used in _fastClock: [wreg]
  7688  16E9  30F0               	movlw	240
  7689  16EA  0021               	movlb	1	; select bank1
  7690  16EB  0099               	movwf	25	;volatile
  7691  16EC                     l324:	
  7692                           ;main.c: 973: while(!OSCSTATbits.PLLR);
  7693                           
  7694  16EC  1B1A               	btfsc	26,6	;volatile
  7695  16ED  0008               	return
  7696  16EE  2EEC               	goto	l324
  7697  16EF                     __end_of_fastClock:	
  7698                           
  7699                           	psect	intentry
  7700  0004                     __pintentry:	
  7701 ;; *************** function _isr *****************
  7702 ;; Defined at:
  7703 ;;		line 333 in file "../main.c"
  7704 ;; Parameters:    Size  Location     Type
  7705 ;;		None
  7706 ;; Auto vars:     Size  Location     Type
  7707 ;;  currentRefre    1    8[COMMON] unsigned char 
  7708 ;;  rowValueTemp    1    7[COMMON] unsigned char 
  7709 ;;  rowValueTemp    1    6[COMMON] unsigned char 
  7710 ;;  rowValueTemp    1    5[COMMON] unsigned char 
  7711 ;; Return value:  Size  Location     Type
  7712 ;;		None               void
  7713 ;; Registers used:
  7714 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7715 ;; Tracked objects:
  7716 ;;		On entry : 0/0
  7717 ;;		On exit  : 0/0
  7718 ;;		Unchanged: 0/0
  7719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7721 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7722 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7723 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7724 ;;Total ram usage:        9 bytes
  7725 ;; Hardware stack levels used:    1
  7726 ;; This function calls:
  7727 ;;		Nothing
  7728 ;; This function is called by:
  7729 ;;		Interrupt level 1
  7730 ;; This function uses a non-reentrant model
  7731 ;;
  7732                           
  7733  0004                     _isr:	
  7734                           
  7735                           ;incstack = 0
  7736                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0]
  7737  0004  147E               	bsf	126,0	;set compiler interrupt flag
  7738  0005  3180               	pagesel	$
  7739  0006  0020               	movlb	0	; select bank0
  7740  0007  087F               	movf	127,w
  7741  0008  00F4               	movwf	??_isr+4
  7742                           
  7743                           ;main.c: 335: if((TMR0IE)&&(TMR0IF))
  7744  0009  1A8B               	btfsc	11,5	;volatile
  7745  000A  1D0B               	btfss	11,2	;volatile
  7746  000B  2893               	goto	i1l3510
  7747                           
  7748                           ;main.c: 336: {
  7749                           ;main.c: 337: unsigned char rowValueTempR, rowValueTempG, rowValueTempB, currentRefreshi
      +                          ngColumn;
  7750                           ;main.c: 338: rowValueTempR = rowValueTempG = rowValueTempB = 0;
  7751  000C  01F7               	clrf	isr@rowValueTempB
  7752  000D  01F6               	clrf	isr@rowValueTempG
  7753  000E  01F5               	clrf	isr@rowValueTempR
  7754                           
  7755                           ;main.c: 343: for(currentRefreshingColumn = 0; currentRefreshingColumn < 8; currentRefre
      +                          shingColumn++)
  7756  000F  01F8               	clrf	isr@currentRefreshingColumn
  7757  0010  3008               	movlw	8
  7758  0011  0278               	subwf	isr@currentRefreshingColumn,w
  7759  0012  1803               	btfsc	3,0
  7760  0013  2847               	goto	i1l183
  7761  0014                     i1l3464:	
  7762                           
  7763                           ;main.c: 344: {
  7764                           ;main.c: 345: if(bitmap[currentRefreshingRowIndex++] > currentRefreshingPwmSweep)
  7765  0014  087B               	movf	_currentRefreshingRowIndex,w	;volatile
  7766  0015  0AFB               	incf	_currentRefreshingRowIndex,f	;volatile
  7767  0016  3E30               	addlw	48
  7768  0017  0086               	movwf	6
  7769  0018  0187               	clrf	7
  7770  0019  3023               	movlw	35
  7771  001A  3D87               	addwfc	7,f
  7772  001B  0801               	movf	1,w
  7773  001C  0279               	subwf	_currentRefreshingPwmSweep,w	;volatile
  7774  001D  1C03               	btfss	3,0
  7775                           
  7776                           ;main.c: 346: {
  7777                           ;main.c: 347: rowValueTempR |= 0x80;
  7778  001E  17F5               	bsf	isr@rowValueTempR,7
  7779                           
  7780                           ;main.c: 348: }
  7781                           ;main.c: 349: if(bitmap[currentRefreshingRowIndex++] > currentRefreshingPwmSweep)
  7782  001F  087B               	movf	_currentRefreshingRowIndex,w	;volatile
  7783  0020  0AFB               	incf	_currentRefreshingRowIndex,f	;volatile
  7784  0021  3E30               	addlw	48
  7785  0022  0086               	movwf	6
  7786  0023  0187               	clrf	7
  7787  0024  3023               	movlw	35
  7788  0025  3D87               	addwfc	7,f
  7789  0026  0801               	movf	1,w
  7790  0027  0279               	subwf	_currentRefreshingPwmSweep,w	;volatile
  7791  0028  1C03               	btfss	3,0
  7792                           
  7793                           ;main.c: 350: {
  7794                           ;main.c: 351: rowValueTempG |= 0x80;
  7795  0029  17F6               	bsf	isr@rowValueTempG,7
  7796                           
  7797                           ;main.c: 352: }
  7798                           ;main.c: 353: if(bitmap[currentRefreshingRowIndex++] > currentRefreshingPwmSweep)
  7799  002A  087B               	movf	_currentRefreshingRowIndex,w	;volatile
  7800  002B  0AFB               	incf	_currentRefreshingRowIndex,f	;volatile
  7801  002C  3E30               	addlw	48
  7802  002D  0086               	movwf	6
  7803  002E  0187               	clrf	7
  7804  002F  3023               	movlw	35
  7805  0030  3D87               	addwfc	7,f
  7806  0031  0801               	movf	1,w
  7807  0032  0279               	subwf	_currentRefreshingPwmSweep,w	;volatile
  7808  0033  1C03               	btfss	3,0
  7809                           
  7810                           ;main.c: 354: {
  7811                           ;main.c: 355: rowValueTempB |= 0x80;
  7812  0034  17F7               	bsf	isr@rowValueTempB,7
  7813                           
  7814                           ;main.c: 356: }
  7815                           ;main.c: 358: if(currentRefreshingColumn < (8-1))
  7816  0035  3007               	movlw	7
  7817  0036  0278               	subwf	isr@currentRefreshingColumn,w
  7818  0037  1803               	skipnc
  7819  0038  283F               	goto	i1l3480
  7820                           
  7821                           ;main.c: 359: {
  7822                           ;main.c: 360: rowValueTempR >>= 1;
  7823  0039  1003               	clrc
  7824  003A  0CF5               	rrf	isr@rowValueTempR,f
  7825                           
  7826                           ;main.c: 361: rowValueTempG >>= 1;
  7827  003B  1003               	clrc
  7828  003C  0CF6               	rrf	isr@rowValueTempG,f
  7829                           
  7830                           ;main.c: 362: rowValueTempB >>= 1;
  7831  003D  1003               	clrc
  7832  003E  0CF7               	rrf	isr@rowValueTempB,f
  7833  003F                     i1l3480:	
  7834  003F  3001               	movlw	1
  7835  0040  00F0               	movwf	??_isr
  7836  0041  0870               	movf	??_isr,w
  7837  0042  07F8               	addwf	isr@currentRefreshingColumn,f
  7838  0043  3008               	movlw	8
  7839  0044  0278               	subwf	isr@currentRefreshingColumn,w
  7840  0045  1C03               	skipc
  7841  0046  2814               	goto	i1l3464
  7842  0047                     i1l183:	
  7843                           
  7844                           ;main.c: 363: }
  7845                           ;main.c: 364: }
  7846                           ;main.c: 370: LATGbits.LATG0 = LATFbits.LATF1 = LATFbits.LATF2 = LATFbits.LATF3 = LATFbi
      +                          ts.LATF4 = LATFbits.LATF5 = LATFbits.LATF6 = LATFbits.LATF7 = 0;
  7847  0047  0027               	movlb	7	; select bank7
  7848  0048  138C               	bcf	12,7	;volatile
  7849  0049  130C               	bcf	12,6	;volatile
  7850  004A  128C               	bcf	12,5	;volatile
  7851  004B  120C               	bcf	12,4	;volatile
  7852  004C  118C               	bcf	12,3	;volatile
  7853  004D  110C               	bcf	12,2	;volatile
  7854  004E  108C               	bcf	12,1	;volatile
  7855  004F  100D               	bcf	13,0	;volatile
  7856                           
  7857                           ;main.c: 376: TRISA = ~rowValueTempR;
  7858  0050  0975               	comf	isr@rowValueTempR,w
  7859  0051  0021               	movlb	1	; select bank1
  7860  0052  008C               	movwf	12	;volatile
  7861                           
  7862                           ;main.c: 377: TRISD = ~rowValueTempG;
  7863  0053  0976               	comf	isr@rowValueTempG,w
  7864  0054  008F               	movwf	15	;volatile
  7865                           
  7866                           ;main.c: 378: TRISE = ~rowValueTempB;
  7867  0055  0977               	comf	isr@rowValueTempB,w
  7868  0056  0090               	movwf	16	;volatile
  7869                           
  7870                           ;main.c: 381: switch(currentRefreshingRow)
  7871  0057  2870               	goto	i1l3488
  7872  0058                     i1l189:	
  7873                           ;main.c: 382: {
  7874                           ;main.c: 383: case 0:
  7875                           
  7876                           
  7877                           ;main.c: 384: LATGbits.LATG0 = 1;
  7878  0058  0027               	movlb	7	; select bank7
  7879  0059  140D               	bsf	13,0	;volatile
  7880                           
  7881                           ;main.c: 385: break;
  7882  005A  287A               	goto	i1l3490
  7883  005B                     i1l191:	
  7884                           ;main.c: 387: case 1:
  7885                           
  7886                           
  7887                           ;main.c: 388: LATFbits.LATF1 = 1;
  7888  005B  0027               	movlb	7	; select bank7
  7889  005C  148C               	bsf	12,1	;volatile
  7890                           
  7891                           ;main.c: 389: break;
  7892  005D  287A               	goto	i1l3490
  7893  005E                     i1l192:	
  7894                           ;main.c: 391: case 2:
  7895                           
  7896                           
  7897                           ;main.c: 392: LATFbits.LATF2 = 1;
  7898  005E  0027               	movlb	7	; select bank7
  7899  005F  150C               	bsf	12,2	;volatile
  7900                           
  7901                           ;main.c: 393: break;
  7902  0060  287A               	goto	i1l3490
  7903  0061                     i1l193:	
  7904                           ;main.c: 395: case 3:
  7905                           
  7906                           
  7907                           ;main.c: 396: LATFbits.LATF3 = 1;
  7908  0061  0027               	movlb	7	; select bank7
  7909  0062  158C               	bsf	12,3	;volatile
  7910                           
  7911                           ;main.c: 397: break;
  7912  0063  287A               	goto	i1l3490
  7913  0064                     i1l194:	
  7914                           ;main.c: 399: case 4:
  7915                           
  7916                           
  7917                           ;main.c: 400: LATFbits.LATF4 = 1;
  7918  0064  0027               	movlb	7	; select bank7
  7919  0065  160C               	bsf	12,4	;volatile
  7920                           
  7921                           ;main.c: 401: break;
  7922  0066  287A               	goto	i1l3490
  7923  0067                     i1l195:	
  7924                           ;main.c: 403: case 5:
  7925                           
  7926                           
  7927                           ;main.c: 404: LATFbits.LATF5 = 1;
  7928  0067  0027               	movlb	7	; select bank7
  7929  0068  168C               	bsf	12,5	;volatile
  7930                           
  7931                           ;main.c: 405: break;
  7932  0069  287A               	goto	i1l3490
  7933  006A                     i1l196:	
  7934                           ;main.c: 407: case 6:
  7935                           
  7936                           
  7937                           ;main.c: 408: LATFbits.LATF6 = 1;
  7938  006A  0027               	movlb	7	; select bank7
  7939  006B  170C               	bsf	12,6	;volatile
  7940                           
  7941                           ;main.c: 409: break;
  7942  006C  287A               	goto	i1l3490
  7943  006D                     i1l197:	
  7944                           ;main.c: 411: case 7:
  7945                           
  7946                           
  7947                           ;main.c: 412: LATFbits.LATF7 = 1;
  7948  006D  0027               	movlb	7	; select bank7
  7949  006E  178C               	bsf	12,7	;volatile
  7950                           
  7951                           ;main.c: 417: }
  7952                           
  7953                           ;main.c: 416: break;
  7954                           
  7955                           ;main.c: 415: default:
  7956                           
  7957                           ;main.c: 413: break;
  7958  006F  287A               	goto	i1l3490
  7959  0070                     i1l3488:	
  7960  0070  087A               	movf	_currentRefreshingRow,w	;volatile
  7961                           
  7962                           ; Switch size 1, requested type "space"
  7963                           ; Number of cases is 8, Range of values is 0 to 7
  7964                           ; switch strategies available:
  7965                           ; Name         Instructions Cycles
  7966                           ; direct_byte           22     6 (fixed)
  7967                           ; simple_byte           25    13 (average)
  7968                           ; jumptable            260     6 (fixed)
  7969                           ;	Chosen strategy is direct_byte
  7970  0071  0084               	movwf	4
  7971  0072  3008               	movlw	8
  7972  0073  0204               	subwf	4,w
  7973  0074  1803               	skipnc
  7974  0075  287A               	goto	i1l3490
  7975  0076  3190               	movlp	high i1S3806
  7976  0077  3504               	lslf	4,w
  7977  0078  3E80               	addlw	low i1S3806
  7978  0079  0082               	movwf	2
  7979  007A                     i1l3490:	
  7980                           
  7981                           ;main.c: 419: currentRefreshingRow++;
  7982  007A  3001               	movlw	1
  7983  007B  00F0               	movwf	??_isr
  7984  007C  0870               	movf	??_isr,w
  7985  007D  07FA               	addwf	_currentRefreshingRow,f	;volatile
  7986                           
  7987                           ;main.c: 420: if(currentRefreshingRow > 8)
  7988  007E  3009               	movlw	9
  7989  007F  027A               	subwf	_currentRefreshingRow,w	;volatile
  7990  0080  1803               	btfsc	3,0
  7991                           
  7992                           ;main.c: 421: {
  7993                           ;main.c: 422: currentRefreshingRow = 0;
  7994  0081  01FA               	clrf	_currentRefreshingRow	;volatile
  7995                           
  7996                           ;main.c: 423: }
  7997                           ;main.c: 426: if(currentRefreshingRowIndex > (8*8*3))
  7998  0082  30C1               	movlw	193
  7999  0083  027B               	subwf	_currentRefreshingRowIndex,w	;volatile
  8000  0084  1C03               	skipc
  8001  0085  288F               	goto	i1l3506
  8002                           
  8003                           ;main.c: 427: {
  8004                           ;main.c: 428: currentRefreshingRowIndex = 0;
  8005  0086  01FB               	clrf	_currentRefreshingRowIndex	;volatile
  8006                           
  8007                           ;main.c: 431: currentRefreshingPwmSweep++;
  8008  0087  3001               	movlw	1
  8009  0088  00F0               	movwf	??_isr
  8010  0089  0870               	movf	??_isr,w
  8011  008A  07F9               	addwf	_currentRefreshingPwmSweep,f	;volatile
  8012                           
  8013                           ;main.c: 432: if(currentRefreshingPwmSweep > 15)
  8014  008B  3010               	movlw	16
  8015  008C  0279               	subwf	_currentRefreshingPwmSweep,w	;volatile
  8016  008D  1803               	btfsc	3,0
  8017                           
  8018                           ;main.c: 433: {
  8019                           ;main.c: 434: currentRefreshingPwmSweep = 0;
  8020  008E  01F9               	clrf	_currentRefreshingPwmSweep	;volatile
  8021  008F                     i1l3506:	
  8022                           
  8023                           ;main.c: 435: }
  8024                           ;main.c: 436: }
  8025                           ;main.c: 438: TMR0 = (0xFF - ((8000000/8)/(8*60*15)));
  8026  008F  3075               	movlw	117
  8027  0090  0020               	movlb	0	; select bank0
  8028  0091  0095               	movwf	21	;volatile
  8029                           
  8030                           ;main.c: 439: TMR0IF = 0;
  8031  0092  110B               	bcf	11,2	;volatile
  8032  0093                     i1l3510:	
  8033                           
  8034                           ;main.c: 440: }
  8035                           ;main.c: 442: if((TMR1IE)&&(TMR1IF))
  8036  0093  0021               	movlb	1	; select bank1
  8037  0094  1C11               	btfss	17,0	;volatile
  8038  0095  28DB               	goto	i1l3532
  8039  0096  0020               	movlb	0	; select bank0
  8040  0097  1C11               	btfss	17,0	;volatile
  8041  0098  28DB               	goto	i1l3532
  8042                           
  8043                           ;main.c: 443: {
  8044                           ;main.c: 448: tmr1Value = TMR1;
  8045  0099  0817               	movf	23,w	;volatile
  8046  009A  0021               	movlb	1	; select bank1
  8047  009B  01EB               	clrf	(_tmr1Value+1)^(0+128)	;volatile
  8048  009C  07EB               	addwf	(_tmr1Value+1)^(0+128),f	;volatile
  8049  009D  0020               	movlb	0	; select bank0
  8050  009E  0816               	movf	22,w	;volatile
  8051  009F  0021               	movlb	1	; select bank1
  8052  00A0  01EA               	clrf	_tmr1Value^(0+128)	;volatile
  8053  00A1  07EA               	addwf	_tmr1Value^(0+128),f	;volatile
  8054                           
  8055                           ;main.c: 449: TMR1 = (0x8000 - tmr1Value);
  8056  00A2  096A               	comf	_tmr1Value^(0+128),w	;volatile
  8057  00A3  00F0               	movwf	??_isr
  8058  00A4  096B               	comf	(_tmr1Value+1)^(0+128),w	;volatile
  8059  00A5  00F1               	movwf	??_isr+1
  8060  00A6  0AF0               	incf	??_isr,f
  8061  00A7  1903               	skipnz
  8062  00A8  0AF1               	incf	??_isr+1,f
  8063  00A9  0870               	movf	??_isr,w
  8064  00AA  3E00               	addlw	0
  8065  00AB  00F2               	movwf	??_isr+2
  8066  00AC  3080               	movlw	128
  8067  00AD  3D71               	addwfc	??_isr+1,w
  8068  00AE  00F3               	movwf	??_isr+3
  8069  00AF  0872               	movf	??_isr+2,w
  8070  00B0  0020               	movlb	0	; select bank0
  8071  00B1  0096               	movwf	22	;volatile
  8072  00B2  0873               	movf	??_isr+3,w
  8073  00B3  0097               	movwf	23	;volatile
  8074                           
  8075                           ;main.c: 451: if(++seconds > 59)
  8076  00B4  3001               	movlw	1
  8077  00B5  00F0               	movwf	??_isr
  8078  00B6  0870               	movf	??_isr,w
  8079  00B7  0021               	movlb	1	; select bank1
  8080  00B8  07EF               	addwf	_seconds^(0+128),f	;volatile
  8081  00B9  303C               	movlw	60
  8082  00BA  026F               	subwf	_seconds^(0+128),w	;volatile
  8083  00BB  1C03               	skipc
  8084  00BC  28D9               	goto	i1l3530
  8085                           
  8086                           ;main.c: 452: {
  8087                           ;main.c: 453: seconds = 0;
  8088  00BD  01EF               	clrf	_seconds^(0+128)	;volatile
  8089                           
  8090                           ;main.c: 457: if(++minutes > 59)
  8091  00BE  3001               	movlw	1
  8092  00BF  00F0               	movwf	??_isr
  8093  00C0  0870               	movf	??_isr,w
  8094  00C1  07ED               	addwf	_minutes^(0+128),f	;volatile
  8095  00C2  303C               	movlw	60
  8096  00C3  026D               	subwf	_minutes^(0+128),w	;volatile
  8097  00C4  1C03               	skipc
  8098  00C5  28D9               	goto	i1l3530
  8099                           
  8100                           ;main.c: 458: {
  8101                           ;main.c: 459: minutes = 0;
  8102  00C6  01ED               	clrf	_minutes^(0+128)	;volatile
  8103                           
  8104                           ;main.c: 460: hours++;
  8105  00C7  3001               	movlw	1
  8106  00C8  00F0               	movwf	??_isr
  8107  00C9  0870               	movf	??_isr,w
  8108  00CA  07FC               	addwf	_hours,f	;volatile
  8109                           
  8110                           ;main.c: 461: if(hours == 12) ampm ^= 1;
  8111  00CB  087C               	movf	_hours,w	;volatile
  8112  00CC  3A0C               	xorlw	12
  8113  00CD  1D03               	skipz
  8114  00CE  28D1               	goto	i1l205
  8115  00CF  3001               	movlw	(0+1) shl (_ampm& (0+7))
  8116  00D0  06FD               	xorwf	_ampm/(0+8),f
  8117  00D1                     i1l205:	
  8118                           
  8119                           ;main.c: 462: if(hours>12) hours = 1;
  8120  00D1  300D               	movlw	13
  8121  00D2  027C               	subwf	_hours,w	;volatile
  8122  00D3  1C03               	skipc
  8123  00D4  28D9               	goto	i1l3530
  8124  00D5  3001               	movlw	1
  8125  00D6  00F0               	movwf	??_isr
  8126  00D7  0870               	movf	??_isr,w
  8127  00D8  00FC               	movwf	_hours	;volatile
  8128  00D9                     i1l3530:	
  8129                           
  8130                           ;main.c: 463: }
  8131                           ;main.c: 464: }
  8132                           ;main.c: 466: TMR1IF = 0;
  8133  00D9  0020               	movlb	0	; select bank0
  8134  00DA  1011               	bcf	17,0	;volatile
  8135  00DB                     i1l3532:	
  8136                           
  8137                           ;main.c: 467: }
  8138                           ;main.c: 469: if((TMR2IE)&&(TMR2IF))
  8139  00DB  0021               	movlb	1	; select bank1
  8140  00DC  1C91               	btfss	17,1	;volatile
  8141  00DD  28E8               	goto	i1l3540
  8142  00DE  0020               	movlb	0	; select bank0
  8143  00DF  1C91               	btfss	17,1	;volatile
  8144  00E0  28E8               	goto	i1l3540
  8145                           
  8146                           ;main.c: 470: {
  8147                           ;main.c: 471: timerTicks++;
  8148  00E1  3001               	movlw	1
  8149  00E2  0022               	movlb	2	; select bank2
  8150  00E3  07AE               	addwf	_timerTicks^(0+256),f	;volatile
  8151  00E4  3000               	movlw	0
  8152  00E5  3DAF               	addwfc	(_timerTicks+1)^(0+256),f	;volatile
  8153                           
  8154                           ;main.c: 474: TMR2IF = 0;
  8155  00E6  0020               	movlb	0	; select bank0
  8156  00E7  1091               	bcf	17,1	;volatile
  8157  00E8                     i1l3540:	
  8158                           
  8159                           ;main.c: 475: }
  8160                           ;main.c: 477: if((IOCIE)&&(IOCIF))
  8161  00E8  198B               	btfsc	11,3	;volatile
  8162  00E9  1C0B               	btfss	11,0	;volatile
  8163  00EA  291C               	goto	i1l222
  8164                           
  8165                           ;main.c: 478: {
  8166                           ;main.c: 479: if(IOCBFbits.IOCBF4)
  8167  00EB  0027               	movlb	7	; select bank7
  8168  00EC  1A16               	btfsc	22,4	;volatile
  8169  00ED  28F9               	goto	i1l3556
  8170  00EE  2908               	goto	i1l209
  8171  00EF                     i1l3548:	
  8172                           ;main.c: 487: case 3:
  8173                           
  8174                           ;main.c: 485: break;
  8175                           
  8176                           ;main.c: 482: {
  8177                           ;main.c: 483: case 2:
  8178                           
  8179                           ;main.c: 480: {
  8180                           ;main.c: 481: switch(currentState)
  8181                           
  8182                           
  8183                           ;main.c: 488: currentState = 4;
  8184  00EF  3004               	movlw	4
  8185  00F0  00F0               	movwf	??_isr
  8186  00F1  0870               	movf	??_isr,w
  8187  00F2  0021               	movlb	1	; select bank1
  8188  00F3  28F7               	goto	L20
  8189  00F4                     i1l3550:	
  8190                           ;main.c: 491: case 0:
  8191                           
  8192                           ;main.c: 489: break;
  8193                           
  8194  00F4                     i1l3552:	
  8195                           ;main.c: 495: case 4:
  8196                           
  8197                           ;main.c: 493: break;
  8198                           
  8199                           ;main.c: 492: currentState = 3;
  8200                           
  8201                           
  8202                           ;main.c: 496: currentState = 3;
  8203  00F4  3003               	movlw	3
  8204  00F5  00F0               	movwf	??_isr
  8205  00F6  0870               	movf	??_isr,w
  8206  00F7                     L20:	
  8207  00F7  00EC               	movwf	_currentState^(0+128)	;volatile
  8208                           
  8209                           ;main.c: 501: }
  8210                           
  8211                           ;main.c: 500: break;
  8212                           
  8213                           ;main.c: 499: default:
  8214                           
  8215                           ;main.c: 497: break;
  8216  00F8  2908               	goto	i1l209
  8217  00F9                     i1l3556:	
  8218  00F9  0021               	movlb	1	; select bank1
  8219  00FA  086C               	movf	_currentState^(0+128),w	;volatile
  8220                           
  8221                           ; Switch size 1, requested type "space"
  8222                           ; Number of cases is 4, Range of values is 0 to 4
  8223                           ; switch strategies available:
  8224                           ; Name         Instructions Cycles
  8225                           ; simple_byte           13     7 (average)
  8226                           ; direct_byte           16     6 (fixed)
  8227                           ; jumptable            260     6 (fixed)
  8228                           ;	Chosen strategy is simple_byte
  8229  00FB  3A00               	xorlw	0	; case 0
  8230  00FC  1903               	skipnz
  8231  00FD  28F4               	goto	i1l3550
  8232  00FE  3A02               	xorlw	2	; case 2
  8233  00FF  1903               	skipnz
  8234  0100  2908               	goto	i1l209
  8235  0101  3A01               	xorlw	1	; case 3
  8236  0102  1903               	skipnz
  8237  0103  28EF               	goto	i1l3548
  8238  0104  3A07               	xorlw	7	; case 4
  8239  0105  1903               	skipnz
  8240  0106  28F4               	goto	i1l3552
  8241  0107  2908               	goto	i1l209
  8242  0108                     i1l209:	
  8243                           
  8244                           ;main.c: 502: }
  8245                           ;main.c: 505: if((IOCBFbits.IOCBF3) )
  8246  0108  0027               	movlb	7	; select bank7
  8247  0109  1D96               	btfss	22,3	;volatile
  8248  010A  2914               	goto	i1l3562
  8249                           
  8250                           ;main.c: 506: {
  8251                           ;main.c: 518: if(currentState == 4)
  8252  010B  0021               	movlb	1	; select bank1
  8253  010C  086C               	movf	_currentState^(0+128),w	;volatile
  8254  010D  3A04               	xorlw	4
  8255  010E  1D03               	skipz
  8256  010F  2914               	goto	i1l3562
  8257                           
  8258                           ;main.c: 519: {
  8259                           ;main.c: 520: currentState = 2;
  8260  0110  3002               	movlw	2
  8261  0111  00F0               	movwf	??_isr
  8262  0112  0870               	movf	??_isr,w
  8263  0113  00EC               	movwf	_currentState^(0+128)	;volatile
  8264  0114                     i1l3562:	
  8265                           
  8266                           ;main.c: 521: }
  8267                           ;main.c: 522: }
  8268                           ;main.c: 532: if(IOCBFbits.IOCBF1)
  8269  0114  0027               	movlb	7	; select bank7
  8270  0115  1C96               	btfss	22,1	;volatile
  8271  0116  2919               	goto	i1l3568
  8272                           
  8273                           ;main.c: 533: {
  8274                           ;main.c: 536: if(PORTBbits.RB1)
  8275  0117  0020               	movlb	0	; select bank0
  8276  0118  080D               	movf	13,w	;volatile
  8277  0119                     i1l3568:	
  8278                           ;main.c: 540: else
  8279                           ;main.c: 541: {
  8280                           
  8281                           ;main.c: 537: {
  8282                           ;main.c: 539: }
  8283                           
  8284                           
  8285                           ;main.c: 543: }
  8286                           ;main.c: 545: }
  8287                           ;main.c: 547: IOCBF = 0;
  8288  0119  0027               	movlb	7	; select bank7
  8289  011A  0196               	clrf	22	;volatile
  8290                           
  8291                           ;main.c: 548: IOCIF = 0;
  8292  011B  100B               	bcf	11,0	;volatile
  8293  011C                     i1l222:	
  8294  011C  0874               	movf	??_isr+4,w
  8295  011D  0020               	movlb	0	; select bank0
  8296  011E  00FF               	movwf	127
  8297  011F  107E               	bcf	126,0	;clear compiler interrupt flag
  8298  0120  0009               	retfie
  8299  0121                     __end_of_isr:	
  8300  007E                     btemp	set	126	;btemp
  8301  007E                     pic14e$flags	set	126
  8302  007E                     wtemp	set	126
  8303  007E                     wtemp0	set	126
  8304  0080                     wtemp1	set	128
  8305  0082                     wtemp2	set	130
  8306  0084                     wtemp3	set	132
  8307  0086                     wtemp4	set	134
  8308  0088                     wtemp5	set	136
  8309  007F                     wtemp6	set	127
  8310  007E                     ttemp	set	126
  8311  007E                     ttemp0	set	126
  8312  0081                     ttemp1	set	129
  8313  0084                     ttemp2	set	132
  8314  0087                     ttemp3	set	135
  8315  007F                     ttemp4	set	127
  8316  007E                     ltemp	set	126
  8317  007E                     ltemp0	set	126
  8318  0082                     ltemp1	set	130
  8319  0086                     ltemp2	set	134
  8320  0080                     ltemp3	set	128
  8321  2330                     
  8322                           	psect	swtext3
  8323  1080                     __pswtext3:	
  8324  1080                     i1S3806:	
  8325  1080  3180  2858         	ljmp	i1l189
  8326  1082  3180  285B         	ljmp	i1l191
  8327  1084  3180  285E         	ljmp	i1l192
  8328  1086  3180  2861         	ljmp	i1l193
  8329  1088  3180  2864         	ljmp	i1l194
  8330  108A  3180  2867         	ljmp	i1l195
  8331  108C  3180  286A         	ljmp	i1l196
  8332  108E  3180  286D         	ljmp	i1l197


Data Sizes:
    Strings     0
    Constant    128
    Data        0
    BSS         94
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     80      80
    BANK1            80     74      80
    BANK2            80     13      33
    BANK3            80      0      64
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           16      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    HSVtoRGB@vHSV	PTR void  size(1) Largest target is 3
		 -> drawFrame@colorHSV(BANK2[3]), 

    HSVtoRGB@colorHSV	PTR struct . size(1) Largest target is 3
		 -> drawFrame@colorHSV(BANK2[3]), 

    HSVtoRGB@vRGB	PTR void  size(1) Largest target is 3
		 -> drawFrame@colorRGB(BANK2[3]), 

    HSVtoRGB@colorRGB	PTR struct . size(1) Largest target is 3
		 -> drawFrame@colorRGB(BANK2[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _drawFrame->_HSVtoRGB
    _setPixel->_bitmapPutPixel
    _HSVtoRGB->_floor
    _floor->___altoft
    ___fttol->___ftmul
    ___ftadd->___ftneg
    ___altoft->___fttol
    ___lbtoft->___ftpack
    ___ftneg->___awtoft
    ___ftmul->___ftadd
    ___ftdiv->___lbtoft
    ___awtoft->___ftpack
    _setTime->___awmod
    ___awdiv->___wmul
    _init->_setup
    _setup->_generateLine
    _generateLine->___awmod
    _rand->___lmul
    ___awmod->_rand
    _DelayMs->___lmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_showTime
    _showTime->_drawFrame
    _drawFrame->_HSVtoRGB

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    _showTime->_drawFrame

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   42275
                                             79 BANK0      1     1      0
                          _fastClock
                               _init
                            _setTime
                           _showTime
 ---------------------------------------------------------------------------------
 (1) _showTime                                            20    20      0   33307
                                             69 BANK1      5     5      0
                        _bitmapClear
                          _drawFrame
                       _generateLine
                            _shiftUp
 ---------------------------------------------------------------------------------
 (2) _shiftUp                                             14    14      0     270
                                              0 BANK0     11    11      0
 ---------------------------------------------------------------------------------
 (2) _drawFrame                                           38    36      2   31697
                                             44 BANK1     25    23      2
                                              0 BANK2     13    13      0
                           _HSVtoRGB
                            ___awdiv
                             ___wmul
                           _setPixel
 ---------------------------------------------------------------------------------
 (3) _setPixel                                             9     5      4    3923
                                              9 BANK0      9     5      4
                     _bitmapPutPixel
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1244
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _HSVtoRGB                                            46    45      1   24848
                                             77 BANK0      2     1      1
                                              0 BANK1     44    44      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lbtoft
                              _floor
 ---------------------------------------------------------------------------------
 (4) _floor                                                9     6      3    7881
                                             68 BANK0      9     6      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (5) _frexp                                                6     2      4     336
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     572
                                             46 BANK0     14    10      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftge                                               9     3      6     494
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             13     7      6    3836
                                             17 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___altoft                                             8     4      4    2328
                                             60 BANK0      8     4      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lbtoft                                             8     5      3    2148
                                              8 BANK0      8     5      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     416
                                             14 BANK0      3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    3604
                                             30 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             16    10      6    2790
                                             16 BANK0     16    10      6
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             6     3      3    2281
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2126
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _setTime                                             17    17      0    6397
                                             26 BANK0     17    17      0
                            _DelayMs
                            ___awdiv
                            ___awmod
                        _bitmapClear
                     _bitmapPutPixel
 ---------------------------------------------------------------------------------
 (4) _bitmapPutPixel                                       9     5      4    3301
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     684
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _init                                                 1     1      0    2571
                                             33 BANK0      1     1      0
                            _DelayMs
                        _bitmapClear
                              _setup
 ---------------------------------------------------------------------------------
 (2) _setup                                                5     5      0    1532
                                             28 BANK0      5     5      0
                       _generateLine
                              _srand
 ---------------------------------------------------------------------------------
 (2) _generateLine                                         2     2      0    1246
                                             26 BANK0      2     2      0
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (3) _rand                                                 7     5      2     626
                                             12 BANK0      7     5      2
                             ___lmul
                              _srand
 ---------------------------------------------------------------------------------
 (4) _srand                                                2     0      2     150
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     552
                                             19 BANK0      7     3      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) _bitmapClear                                          2     2      0      46
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _DelayMs                                              7     5      2     993
                                             12 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     476
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _fastClock                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  9     9      0     143
                                              0 COMMON     9     9      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _fastClock
   _init
     _DelayMs
       ___lmul
     _bitmapClear
     _setup
       _generateLine
         ___awmod
           _rand (ARG)
             ___lmul
             _srand
         _rand
           ___lmul
           _srand
       _srand
   _setTime
     _DelayMs
       ___lmul
     ___awdiv
       ___wmul (ARG)
     ___awmod
       _rand (ARG)
         ___lmul
         _srand
     _bitmapClear
     _bitmapPutPixel
   _showTime
     _bitmapClear
     _drawFrame
       _HSVtoRGB
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftdiv
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
         ___lbtoft
           ___ftpack
         _floor
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftge
           ___fttol
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
           _frexp
       ___awdiv
         ___wmul (ARG)
       ___wmul
       _setPixel
         _bitmapPutPixel
     _generateLine
       ___awmod
         _rand (ARG)
           ___lmul
           _srand
       _rand
         ___lmul
         _srand
     _shiftUp

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4A      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      D      21       9       41.2%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      40      11       80.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     10F      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              10      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     10F      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Thu Dec 18 02:08:33 2014

                       ___altoft@exp 0062                                    pc 0002  
                      ___altoft@sign 0063                         ___awdiv@sign 002C  
                     setPixel@colorB 002C                       setPixel@colorG 002B  
                     setPixel@colorR 002A                  ___wmul@multiplicand 0022  
                       ___ftadd@exp1 003D                         ___ftadd@exp2 003C  
                       ___ftadd@sign 003B                                  l311 08AA  
                                l162 0946                                  l163 0951  
                                l155 0942                                  l324 16EC  
                                l172 0B38                                  l164 0961  
                                l270 04D7                                  l343 0A5C  
                                l175 0B3D                                  l263 0686  
                                l264 04CE                                  l281 0516  
                                l265 04BF                                  l513 173F  
                                l275 04F0                                  l285 053B  
                                l269 04E7                                  l680 0B1E  
                                l736 072E                                  l674 0B07  
                                l907 0A87                                  _GIE 005F  
                                _PR2 001B                                  _isr 0004  
                       ___awmod@sign 0039                                  wreg 0009  
           setTime@currentFieldValue 0044                 _currentRefreshingRow 007A  
                               S3800 109C                                 S3796 1090  
                     ??_generateLine 003A                         __CFG_LVP$OFF 0000  
                       ___ftdiv@cntr 003A                         ___ftdiv@sign 003F  
                               l3000 0A1E                                 l3022 170B  
                               l3040 17E2                                 l3106 0F0D  
                               l3122 0F4F                                 l3108 0F0F  
                               l3046 17FB                                 l3310 04FF  
                               l2510 08CD                                 l3118 0F4A  
                               l3062 0792                                 l3312 0501  
                               l2512 08DD                                 l2600 076D  
                               l3072 07C7                                 l3056 078D  
                               l2522 0817                                 l3090 0E2A  
                               l3340 055C                                 l3324 0524  
                               l3316 0505                                 l2460 0AE4  
                               l2540 06B7                                 l2612 086D  
                               l3068 07C2                                 l3412 0885  
                               l3334 0549                                 l3326 052A  
                               l2470 0B0C                                 l2462 0AEE  
                               l2550 06CD                                 l2630 0C56  
                               l2702 0BEA                                 l3406 0897  
                               l3422 0945                                 l3352 05BF  
                               l2472 0B14                                 l2464 0AF3  
                               l2456 0ADD                                 l2544 06BE  
                               l2608 0857                                 l2712 0C35  
                               l3096 0E2F                                 l2730 0900  
                               l3338 054F                                 l2570 0704  
                               l2562 06E7                                 l2650 0C94  
                               l2492 17AF                                 l3372 065F  
                               l3364 062B                                 l3356 0589  
                               l3284 04AD                                 l2820 0D84  
                               l2580 0720                                 l2572 0709  
                               l2660 0CAD                                 l2900 01DF  
                               l2742 090D                                 l2734 0907  
                               l3374 066D                                 l3358 05F2  
                               l2806 0D4B                                 l2590 0752  
                               l2582 072A                                 l2574 070D  
                               l2488 17A5                                 l2744 0919  
                               l2752 092E                                 l2680 09A4  
                               l2672 0989                                 l3368 05F4  
                               l3376 0675                                 l2568 06FA  
                               l2664 0CBB                                 l2656 0CA1  
                               l2648 0C86                                 l2920 03A0  
                               l3448 0979                                 l2674 0996  
                               l3802 0554                                 l2850 0DF1  
                               l2842 0DDD                                 l2826 0D9A  
                               l2586 0740                                 l2658 0CAA  
                               l2930 03F5                                 l2922 03B2  
                               l2756 0936                                 l2748 0925  
                               l3804 0665                                 l2924 03C4  
                               l2678 0997                                 l2854 0DF9  
                               l2838 0DD5                                 l2926 03D0  
                               l2918 0394                                 l2934 0408  
                               l2950 1739                                 l2768 175F  
                               l2784 0CF1                                 l2928 03E2  
                               l2936 0417                                 l2778 0CDB  
                               l2698 0BE2                                 l2974 09E7  
                               l2798 0D32                                 l2992 0A0D  
                               l2984 09EF                                 l2968 09DC  
                               l2986 09FB                                 l2996 0A16  
                               l3798 040D                        generateLine@x 003B  
                               ?_isr 0070                                 u2115 0AE9  
                               u3005 0E00                                 _LATA 010C  
                               u2215 17B0                                 u2135 0B02  
                               _LATD 010F                                 u2225 17B7  
                               _LATE 0110                                 u3203 0A5A  
                               u2155 0B0F                                 u3213 0A6E  
                               u2405 06FB                                 u3135 09F2  
                               u2255 08D2                                 u2185 0B25  
                               u3305 079B                                 u3155 09FC  
                               u2435 070E                                 u3075 1740  
                               u3315 07AB                                 u3165 0A06  
                               u3085 1745                                 u3405 0EC8  
                               u3255 17E5                                 u3175 0A0E  
                               u2375 06E8                                 u2615 0CA2  
                               u2465 0721                                 u2715 0AC7  
                               u2555 0C5D                                 u3355 07D6  
                               u3615 0544                                 u3455 0F82  
                               u3705 0626                                 u2585 0C87  
                               u2755 0910                                 u3715 0639  
                               u3635 05A4                                 u3395 0E97  
                               _PEIE 005E                                 u3725 0650  
                               u3645 05BA                                 u2845 0D03  
                               u2925 0DA6                                 u2775 091F  
                               u3735 05FB                                 u3655 05CD  
                               u2855 0D13                                 u2935 0DB6  
                               u2785 0926                                 u3665 05E3  
                               u2865 0D33                                 u3675 0590  
                               u3595 051F                                 u2875 0D42  
                               u2955 0DDE                                 u2885 0D4C  
                               u2965 0DE4                                 u3695 060F  
                               u2995 0DFA                                 _TMR0 0015  
                               _TMR1 0016                                 _TMR2 001A  
                               _WPUB 020D                                 _ampm 03E8  
                               _main 093D                                 _line 0120  
                       ___ftpack@arg 0020                                 _init 0B35  
                               _rand 0A7B                        drawFrame@pcnt 00CC  
                       ___ftpack@exp 0023                                 fsr0h 0005  
                               fsr1h 0007                                 fsr0l 0004  
                               indf0 0000                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                               ltemp 007E                                 start 0121  
                               ttemp 007E                                 wtemp 007E  
                    __end_of_DelayMs 0A7B                         ___ftmul@cntr 004C  
                       ___ftmul@sign 004D                     setTime@tempHours 0042  
                   setTime@tempValue 0047                         ___fttol@exp1 005B  
                       ___fttol@lval 0057                                ??_isr 0070  
                              ?_main 0070                                ?_init 0070  
                              ?_rand 002C                      __end_of___awdiv 0A25  
                    __end_of___ftadd 0785                        __CFG_WDTE$OFF 0000  
                    __end_of___awmod 093D           isr@currentRefreshingColumn 0078  
                    __end_of___ftdiv 0D6D                      __end_of___ftneg 080A  
                    __end_of___ftmul 0E21                      ___awdiv@divisor 0026  
                              _T1CON 0018                      __end_of___fttol 0CC4  
                              _T2CON 001C                                _IOCBF 0396  
                              _IOCBN 0395                                _IOCBP 0394  
                              _IOCIE 005B                                _IOCIF 0058  
                              i1l205 00D1                                i1l222 011C  
                              i1l209 0108                                i1l191 005B  
                              i1l183 0047                                i1l192 005E  
                              i1l193 0061                                i1l194 0064  
                              i1l195 0067                                i1l196 006A  
                              i1l197 006D                                i1l189 0058  
                    ___awdiv@counter 002B                                _TRISA 008C  
                              _TRISD 008F                                _TRISE 0090  
                ___lmul@multiplicand 0024                       drawFrame@x_731 0138  
                    __end_of_hueMask 1040                     __end_of_HSVtoRGB 0495  
                      ___awtoft@sign 002D                                _floor 0BB8  
                              _frexp 080A                                _errno 012C  
                              _randf 00EE                                _randx 0128  
                              _hours 007C                       drawFrame@nextv 0136  
                      ___ftpack@sign 0024                                _setup 17CC  
                              _srand 16FB                      __end_of_setTime 068F  
                     __pbitbssCOMMON 03E8                       __CFG_BOREN$OFF 0000  
                    __end_of_shiftUp 07E6                                ltemp0 007E  
                              ltemp1 0082                                ltemp2 0086  
                              ltemp3 0080                                ttemp0 007E  
                              ttemp1 0081                                ttemp2 0084  
                              ttemp3 0087                                ttemp4 007F  
                              status 0003                 setTime@tempValueTens 003D  
                              wtemp0 007E                                wtemp1 0080  
                              wtemp2 0082                                wtemp3 0084  
                              wtemp4 0086                                wtemp5 0088  
                              wtemp6 007F               _currentRefreshingColor 0130  
                    __initialization 0123                         __end_of_main 0985  
                       __end_of_init 0BB8                         __end_of_rand 0AD4  
                             ??_main 006F                        ___fttol@sign1 0056  
                             ??_init 0041                               ??_rand 002E  
                     __CFG_PLLEN$OFF 0000                 __size_of_bitmapClear 0012  
                             _ADCON0 009D                               _ADCON1 009E  
                             ?_floor 0064                               ?_frexp 0020  
                   __end_of___altoft 08F5                               i1S3806 1080  
                             _ADRESH 009C                     ___awdiv@dividend 0028  
                             ?_setup 0070                               ?_srand 0020  
                   __end_of___awtoft 1776                               _ANSELA 018C  
                             _ANSELE 0190                               _ANSELF 040C  
                   __end_of___ftpack 0B35                               _ANSELG 040D  
                   __end_of___lbtoft 1736                               i1l3510 0093  
                             i1l3530 00D9                               i1l3506 008F  
                             i1l3540 00E8                               i1l3532 00DB  
                             i1l3550 00F4                               i1l3552 00F4  
                             i1l3480 003F                               i1l3464 0014  
                             i1l3562 0114                               i1l3490 007A  
                             i1l3548 00EF                               i1l3556 00F9  
                             i1l3568 0119                               i1l3488 0070  
                             _FVRCON 0117                            ??_DelayMs 002E  
                             _OSCCON 0099                               _TMR0IE 005D  
                             _TMR0IF 005A                               _TMR1IE 0488  
                             _TMR1IF 0088                               _TMR2IE 0489  
                             _TMR2IF 0089        showTime@currentAnimationFrame 00E7  
                             ___ftge 0840                               ___lmul 179C  
                             ___wmul 1736                            ??___awdiv 002A  
                          ??___ftadd 0037                            ??___awmod 0037  
                          ??___ftdiv 0036                            ??___ftneg 0031  
               __end_of_generateLine 179C                            ??___ftmul 0044  
                          ??___fttol 0052                               _bitmap 2330  
                             _matrix 01A0                     ___awdiv@quotient 002D  
                    ___awmod@divisor 0033                      ___awmod@counter 0038  
                             floor@i 0068                               floor@x 0064  
              ___ftmul@f3_as_product 0049                     __end_of_setPixel 0800  
                   __end_of_showTime 08B8                            ??_setTime 003A  
                          ??_shiftUp 0020                               setup@x 0040  
                             setup@y 003F                               srand@x 0020  
              setTime@tempValueUnits 003F              __end_of__initialization 014F  
                         ___altoft@c 005C                           ___ftadd@f1 0031  
                         ___ftadd@f2 0034                           ___ftge@ff1 0020  
                         ___ftge@ff2 0023                           ___ftdiv@f1 0033  
                         ___ftdiv@f2 0030                           ___ftdiv@f3 003B  
                         ___ftneg@f1 002E                           ___awtoft@c 0028  
                         ___lbtoft@c 002F                           ___ftmul@f1 003E  
                         ___ftmul@f2 0041                           ___fttol@f1 004E  
                     __pcstackCOMMON 0070                        __end_of_floor 0C3D  
                      __end_of_frexp 0840                            ?_HSVtoRGB 006D  
                 setTime@tempMinutes 0043                        __end_of_setup 1800  
                      __end_of_srand 1709                   __size_of_fastClock 0006  
                 __size_of_drawFrame 01DF                              ??_floor 0067  
                            ??_frexp 0024                              ??_setup 003C  
                            ??_srand 0022                           __pbssBANK1 00EA  
                         __pbssBANK2 0120                           __pbssBANK3 01A0  
                         __pmaintext 093D                              ?___ftge 0020  
                            ?___lmul 0020                              ?___wmul 0020  
                         __pintentry 0004                           ??_HSVtoRGB 006E  
                          ?___altoft 005C                       ___lmul@product 0028  
                          ?___awtoft 0028                            ?___ftpack 0020  
                          ?___lbtoft 0028                            HSVtoRGB@b 00C0  
                          HSVtoRGB@f 00A9                            HSVtoRGB@g 00BD  
                          HSVtoRGB@h 00B8                            HSVtoRGB@i 00AC  
                          HSVtoRGB@p 00C6                            HSVtoRGB@q 00B2  
                          HSVtoRGB@r 00AF                            HSVtoRGB@s 00C3  
                          HSVtoRGB@t 00B5                            HSVtoRGB@v 00C9  
                            _DelayMs 0A25              __size_of_bitmapPutPixel 004C  
                  __end_of_fastClock 16EF                __size_of_generateLine 0026  
                          ?_setPixel 0029                    __end_of_drawFrame 1000  
                          ?_showTime 0070                      __size_of___ftge 003C  
                            ___awdiv 09D1                      __size_of___lmul 0030  
                            ___ftadd 068F                              ___awmod 08F5  
                    bitmapPutPixel@b 0023                              ___ftdiv 0CC4  
                    bitmapPutPixel@g 0022                      bitmapPutPixel@i 0027  
                    bitmapPutPixel@r 0021                              ___ftneg 0801  
                    bitmapPutPixel@x 0026                      bitmapPutPixel@y 0020  
                    __size_of___wmul 001E                              ___ftmul 0D6D  
                            ___fttol 0C3D                           ??___altoft 0060  
                    __CFG_STVREN$OFF 0000                           ??___awtoft 002B  
                         ??___ftpack 0025                           ??___lbtoft 002B  
                            __ptext1 087C                              __ptext2 0785  
                            __ptext3 0E21                              __ptext4 07E6  
                            __ptext5 1736                              __ptext6 0153  
                            __ptext7 0BB8                              __ptext8 080A  
                            __ptext9 0C3D                              _hueMask 1000  
                          _T1CONbits 0018                            _T2CONbits 001C  
                       __size_of_isr 011D                     ___awmod@dividend 0035  
                            _minutes 00ED                              _seconds 00EF  
                          _IOCBFbits 0396                              _setTime 0495  
                            _shiftUp 0785                              clrloop0 16F0  
                       _generateLine 1776                 end_of_initialization 014F  
                          DelayMs@ms 002C                    __end_of_valueMask 1080  
                         ??_setPixel 002D                           ??_showTime 00E5  
                       __pstringtext 1000  DelayMs@cyclesRequiredForEntireDelay 002F  
                         _timerTicks 012E                            _PORTBbits 000D  
                      ??_bitmapClear 0020                     __CFG_FOSC$INTOSC 0000  
                          _TRISBbits 008D                            _TRISFbits 030C  
                          _TRISGbits 030D                           drawFrame@x 013A  
                         drawFrame@y 0139   bitmapPutPixel@currentPixelPosition 0028  
                        ___ftdiv@exp 003E                          ___ftmul@exp 0048  
                     __end_of___ftge 087C                       __end_of___lmul 17CC  
                     __end_of___wmul 1754                    __size_of_HSVtoRGB 0342  
                         floor@expon 006B                  start_initialization 0123  
                        __end_of_isr 0121                  __end_of_bitmapClear 171B  
                     _bitmapPutPixel 0985                           frexp@value 0020  
          _currentRefreshingRowIndex 007B            _currentRefreshingPwmSweep 0079  
                           ??___ftge 0026                             ??___lmul 0028  
                           ??___wmul 0024                    __size_of___altoft 003D  
                  __size_of___awtoft 0022                    __size_of___ftpack 0061  
                  __size_of___lbtoft 001B                          __pbssBIGRAM 2330  
                        __pbssCOMMON 0079                            ___latbits 0003  
                      __pcstackBANK0 0020                        __pcstackBANK1 00A0  
                      __pcstackBANK2 0134               __end_of_bitmapPutPixel 09D1  
                           ?_DelayMs 002C                         _currentState 00EC  
             setTime@changesMadeFlag 0041                            _fastClock 16E9  
                  __size_of_setPixel 001A                             ?___awdiv 0026  
                           ?___ftadd 0031                             ?___awmod 0033  
                   isr@rowValueTempB 0077                     isr@rowValueTempG 0076  
                           ?___ftdiv 0030                     isr@rowValueTempR 0075  
                           ?___ftneg 002E                             ?___ftmul 003E  
                           ?___fttol 004E                    __size_of_showTime 003C  
                          _drawFrame 0E21                            __pswtext1 1090  
                          __pswtext2 109C                            __pswtext3 1080  
                        _bitmapClear 1709                             ?_setTime 0070  
                           ?_shiftUp 0070                            _newSecond 0131  
                     __size_of_floor 0085                       __size_of_frexp 0036  
                    ?_bitmapPutPixel 0020                       __size_of_setup 0034  
                     __size_of_srand 000E                       ___wmul@product 0024  
                           _LATBbits 010D                             _LATFbits 038C  
                          _tmr1Value 00EA                             _LATGbits 038D  
                          clear_ram0 16EF                     HSVtoRGB@colorRGB 00BB  
                   HSVtoRGB@colorHSV 00BC                            _valueMask 1040  
                         ?_fastClock 0070                             _HSVtoRGB 0153  
                         ?_drawFrame 00CC                           _ADCON0bits 009D  
                  ___wmul@multiplier 0020                        _HSVtoRGB$1186 00A0  
                      _HSVtoRGB$1187 00A3                        _HSVtoRGB$1188 00A6  
                  ___lmul@multiplier 0020                     __size_of_DelayMs 0056  
        setTime@currentFieldSelected 0049                            frexp@eptr 0023  
                   __size_of___awdiv 0054                     __size_of___ftadd 00F6  
                   __size_of___awmod 0048                     __size_of___ftdiv 00A9  
                   __size_of___ftneg 0009                             ___altoft 08B8  
                   __size_of___ftmul 00B4                     __size_of___fttol 0087  
                           ___awtoft 1754                             ___ftpack 0AD4  
                           ___lbtoft 171B                         shiftUp@x_714 002A  
                   __size_of_setTime 01FA                             __ptext10 0840  
                           __ptext11 068F                             __ptext20 0985  
                           __ptext12 08B8                             __ptext21 09D1  
                           __ptext13 171B                             __ptext30 179C  
                           __ptext22 0B35                             __ptext14 0801  
                           __ptext31 16E9                             __ptext23 17CC  
                           __ptext15 0D6D                             __ptext24 1776  
                           __ptext16 0CC4                             __ptext25 0A7B  
                           __ptext17 1754                             __ptext26 16FB  
                           __ptext18 0AD4                             __ptext27 08F5  
                           __ptext19 0495                             __ptext28 1709  
                           __ptext29 0A25                     __size_of_shiftUp 0061  
                  drawFrame@colorRGB 013E                    drawFrame@colorHSV 013B  
                          setPixel@x 0031                            setPixel@y 0029  
                      __size_of_main 0048                        __size_of_init 0083  
                      __size_of_rand 0059                             _setPixel 07E6  
                        ??_fastClock 0020                             _showTime 087C  
                        ??_drawFrame 00CE                        _drawFrame$728 0134  
                        _OSCSTATbits 009A                           _FVRCONbits 0117  
                        _tickCounter 0132                         bitmapClear@i 0021  
                        pic14e$flags 007E                             intlevel1 0000  
            showTime@currentPwmLevel 00E8                         HSVtoRGB@vRGB 00AE  
                       HSVtoRGB@vHSV 006D                             setTime@i 0046  
                           shiftUp@x 0029                             shiftUp@y 0028  
               _updateDisplayRequest 0133                           _OPTION_REG 0095  
                       ?_bitmapClear 0070                     ??_bitmapPutPixel 0024  
                      ?_generateLine 0070                         showTime@pcnt 00E9  
